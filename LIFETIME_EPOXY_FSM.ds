/*
 * Author       : lifetimeepoxyutah
 * Generated on : 27-Jul-2022 06:03:52
 * Version      : 1.0
 */
 application "LIFETIME EPOXY FSM"
 {
 	date format = "dd-MMM-yyyy"
 	time zone = "America/Denver"
 	time format = "24-hr"
	section Technician_Details
	{
		displayname= "Technician Details"
		icon = "users-2-contacts-44"
		form Technician_Details
		{
			displayname = "Technician Details"
			success message = "Technician Detail Added Successfully"
			field alignment = left
					hide = true
	
			customize
			(
				icon = "users-2-contacts-44"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Technician_Details
		{
			displayName = "All Technician Details"
   			hide = true
			show all rows from Technician_Details    
			options
			(
				icon = "sport-cardio"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Home1
	{
		displayname= "Home"
		icon = "business-board-30"
				 page Time_Tracker 
	 	 { 
 	 	 displayname = "Time Tracker"

 	 	 icon = "users-2-a-time" 

 	 	 hide =  true
	 	 Content="<zml    \n\t\t\tisPdfEnabled='false'\n\t\t\n\t\t\tisPrintEnabled='false'\n\t\t\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dsp id='html_snippet' bgColor=\"#FFFFFF\" \n>\n\t<![CDATA[htmlpage html_snippet()\ncontent\n&lt;%{\n\tcurrent_user = zoho.loginuser;\n\topenUrl(&quot;#Page:Time_Tracker_Widget?email=&quot; + current_user,&quot;same window&quot;);\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
				 page Org_Dashboard 
	 	 { 
 	 	 displayname = "Org Dashboard"

 	 	 icon = "business-board-30" 
	 	 Content="<zml    \n\t\t\tisPdfEnabled='false'\n\t\t\n\t\t\tisPrintEnabled='false'\n\t\t\n\t\t\n\t\t\n\t\t\tmobileDeviceConfig='{\"layout\":{\"displayType\":\"card\",\"design\":\"onebyone\",\"forcedOrientation\":false}}'\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<report \n\t\n\timportedTemplate = 'false'\n\tappLinkName = 'thisapp'\n\tlinkName = 'Calendar_View'\n\tallowPublicAccess = 'false'\n\tisCompPublished = 'false'\n\theightType = 'custom'\n\theightValue = '500'\n\tiszreport = 'false'\n            zc_Footer = 'true'\n            zc_AddRec = 'false'\n            zc_EditRec = 'true'\n            zc_Print = 'true'\n            zc_Export = 'true'\n            zc_DelRec = 'true'\n            zc_DuplRec = 'false'\n            zc_Search = 'true'\n\/>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<report \n\t\n\timportedTemplate = 'false'\n\tappLinkName = 'thisapp'\n\tlinkName = 'All_Open_Tasks'\n\tallowPublicAccess = 'false'\n\tisCompPublished = 'false'\n\theightType = 'auto'\n\theightValue = '700'\n\tiszreport = 'false'\n            zc_Footer = 'true'\n            zc_AddRec = 'true'\n            zc_EditRec = 'true'\n            zc_Print = 'true'\n            zc_Export = 'true'\n            zc_DelRec = 'true'\n            zc_DuplRec = 'true'\n            zc_Search = 'true'\n\/>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<report \n\t\n\timportedTemplate = 'false'\n\tappLinkName = 'thisapp'\n\tlinkName = 'TimeLog_Approvals'\n\tallowPublicAccess = 'false'\n\tisCompPublished = 'false'\n\theightType = 'auto'\n\theightValue = '700'\n\tiszreport = 'false'\n            zc_Footer = 'true'\n            zc_AddRec = 'false'\n            zc_EditRec = 'false'\n            zc_Print = 'true'\n            zc_Export = 'true'\n            zc_DelRec = 'false'\n            zc_DuplRec = 'false'\n            zc_Search = 'true'\n\/>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<report \n\t\n\timportedTemplate = 'false'\n\tappLinkName = 'thisapp'\n\tlinkName = 'Leave_Approvals1'\n\tallowPublicAccess = 'false'\n\tisCompPublished = 'false'\n\theightType = 'auto'\n\theightValue = '700'\n\tiszreport = 'false'\n            zc_Footer = 'true'\n            zc_AddRec = 'false'\n            zc_EditRec = 'false'\n            zc_Print = 'true'\n            zc_Export = 'true'\n            zc_DelRec = 'false'\n            zc_DuplRec = 'false'\n            zc_Search = 'true'\n\/>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<report \n\t\n\timportedTemplate = 'false'\n\tappLinkName = 'thisapp'\n\tlinkName = 'Open_Events'\n\tallowPublicAccess = 'false'\n\tisCompPublished = 'false'\n\theightType = 'auto'\n\theightValue = '700'\n\tiszreport = 'false'\n            zc_Footer = 'true'\n            zc_AddRec = 'true'\n            zc_EditRec = 'true'\n            zc_Print = 'true'\n            zc_Export = 'true'\n            zc_DelRec = 'true'\n            zc_DuplRec = 'true'\n            zc_Search = 'true'\n\/>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<report \n\t\n\timportedTemplate = 'false'\n\tappLinkName = 'thisapp'\n\tlinkName = 'Job_Stats'\n\tallowPublicAccess = 'false'\n\tisCompPublished = 'false'\n\theightType = 'auto'\n\theightValue = '700'\n\tiszreport = 'true'\n\/>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<report \n\t\n\timportedTemplate = 'false'\n\tappLinkName = 'thisapp'\n\tlinkName = 'Weekly_Hours_by_Employee'\n\tallowPublicAccess = 'false'\n\tisCompPublished = 'false'\n\theightType = 'auto'\n\theightValue = '700'\n\tiszreport = 'true'\n\/>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<report \n\t\n\timportedTemplate = 'false'\n\tappLinkName = 'thisapp'\n\tlinkName = 'Leave_Count_By_Employee'\n\tallowPublicAccess = 'false'\n\tisCompPublished = 'false'\n\theightType = 'auto'\n\theightValue = '700'\n\tiszreport = 'true'\n\/>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<report \n\t\n\timportedTemplate = 'false'\n\tappLinkName = 'thisapp'\n\tlinkName = 'Crew_Job_Throughput'\n\tallowPublicAccess = 'false'\n\tisCompPublished = 'false'\n\theightType = 'auto'\n\theightValue = '700'\n\tiszreport = 'true'\n\/>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<panel \n\t\n\ttitle = 'Report Links'\n\t\n\t\ttitleSize = '20px'\n\t\t    italicTitle = 'false'\n            boldTitle = 'false'\n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '0px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n>\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpaddingTop = '17px'\n\tpaddingLeft = '17px'\n\tpaddingRight = '17px'\n\tpaddingBottom = '0px'\n\tbgColor = 'transparent'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<text \n    action = 'OpenReport'\n\tcomponentLinkName = 'All_Events'\n\ttarget = 'popup'\n\n\tcolor = '#00D9B1'\n\tsize = '16px'\n\tuppercase = 'false' \n\tunderline = 'true' \n\tbold = 'false' \n\titalic = 'false' \n\ttype = 'Text'\n\tbgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n\t  \n\t  value = 'All Events'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpaddingTop = '17px'\n\tpaddingLeft = '17px'\n\tpaddingRight = '17px'\n\tpaddingBottom = '0px'\n\tbgColor = 'transparent'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<text \n    action = 'OpenReport'\n\tcomponentLinkName = 'All_Leaves1'\n\ttarget = 'popup'\n\n\tcolor = '#00D9B1'\n\tsize = '16px'\n\tuppercase = 'false' \n\tunderline = 'true' \n\tbold = 'false' \n\titalic = 'false' \n\ttype = 'Text'\n\tbgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n\t  \n\t  value = 'Employee Leaves'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpaddingTop = '17px'\n\tpaddingLeft = '17px'\n\tpaddingRight = '17px'\n\tpaddingBottom = '0px'\n\tbgColor = 'transparent'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<text \n    action = 'OpenReport'\n\tcomponentLinkName = 'All_Time_Logs'\n\ttarget = 'new-window'\n\n\tcolor = '#00D9B1'\n\tsize = '16px'\n\tuppercase = 'false' \n\tunderline = 'true' \n\tbold = 'false' \n\titalic = 'false' \n\ttype = 'Text'\n\tbgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n\t  \n\t  value = 'Time Logs Report'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpaddingTop = '17px'\n\tpaddingLeft = '17px'\n\tpaddingRight = '17px'\n\tpaddingBottom = '0px'\n\tbgColor = 'transparent'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<text \n    action = 'OpenReport'\n\tcomponentLinkName = 'All_Tasks'\n\ttarget = 'popup'\n\n\tcolor = '#00D9B1'\n\tsize = '16px'\n\tuppercase = 'false' \n\tunderline = 'true' \n\tbold = 'false' \n\titalic = 'false' \n\ttype = 'Text'\n\tbgColor = 'transparent'\n\n\n\n\t  \n\t  value = 'Tasks Report'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpaddingTop = '17px'\n\tpaddingLeft = '17px'\n\tpaddingRight = '17px'\n\tpaddingBottom = '0px'\n\tbgColor = 'transparent'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<text \n    action = 'OpenReport'\n\tcomponentLinkName = 'Crews_History'\n\ttarget = 'popup'\n\n\tcolor = '#00D9B1'\n\tsize = '16px'\n\tuppercase = 'false' \n\tunderline = 'true' \n\tbold = 'false' \n\titalic = 'false' \n\ttype = 'Text'\n\tbgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n\t  \n\t  value = 'Crew Rota Report'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpaddingTop = '17px'\n\tpaddingLeft = '17px'\n\tpaddingRight = '17px'\n\tpaddingBottom = '0px'\n\tbgColor = 'transparent'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<text \n    action = 'OpenReport'\n\tcomponentLinkName = 'All_Holidays'\n\ttarget = 'popup'\n\n\tcolor = '#00D9B1'\n\tsize = '16px'\n\tuppercase = 'false' \n\tunderline = 'true' \n\tbold = 'false' \n\titalic = 'false' \n\ttype = 'Text'\n\tbgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n\t  \n\t  value = 'Holiday List'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
				 page Time_Tracker_Widget(email) 
	 	 { 
 	 	 displayname = "Time Tracker Widget"

 	 	 icon = "tech-2-p-system-update" 
	 	 Content="<zml    \n\t\t\tisPdfEnabled='false'\n\t\t\n\t\t\tisPrintEnabled='false'\n\t\t\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<widgets importedTemplate='true'\/>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
				 page Home1 
	 	 { 
 	 	 displayname = "Manager Dashboard"

 	 	 icon = "business-board-30" 
	 	 Content="<zml    \n\t\t\tisPdfEnabled='false'\n\t\t\n\t\t\tisPrintEnabled='false'\n\t\t\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<report \n\t\n\timportedTemplate = 'false'\n\tappLinkName = 'thisapp'\n\tlinkName = 'Calendar_View'\n\tallowPublicAccess = 'false'\n\tisCompPublished = 'false'\n\theightType = 'custom'\n\theightValue = '500'\n\tiszreport = 'false'\n            zc_Footer = 'true'\n            zc_AddRec = 'false'\n            zc_EditRec = 'false'\n            zc_Print = 'true'\n            zc_Export = 'true'\n            zc_DelRec = 'false'\n            zc_DuplRec = 'false'\n            zc_Search = 'true'\n\/>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<report \n\t\n\timportedTemplate = 'false'\n\tappLinkName = 'thisapp'\n\tlinkName = 'Open_Tasks1'\n\tallowPublicAccess = 'false'\n\tisCompPublished = 'false'\n\theightType = 'auto'\n\theightValue = '700'\n\tiszreport = 'false'\n            zc_Footer = 'true'\n            zc_AddRec = 'true'\n            zc_EditRec = 'true'\n            zc_Print = 'true'\n            zc_Export = 'true'\n            zc_DelRec = 'true'\n            zc_DuplRec = 'true'\n            zc_Search = 'true'\n\/>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<report \n\t\n\timportedTemplate = 'false'\n\tappLinkName = 'thisapp'\n\tlinkName = 'Open_Events'\n\tallowPublicAccess = 'false'\n\tisCompPublished = 'false'\n\theightType = 'auto'\n\theightValue = '700'\n\tiszreport = 'false'\n            zc_Footer = 'true'\n            zc_AddRec = 'true'\n            zc_EditRec = 'true'\n            zc_Print = 'true'\n            zc_Export = 'true'\n            zc_DelRec = 'true'\n            zc_DuplRec = 'true'\n            zc_Search = 'true'\n\/>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"50%\"\n   \t>\n\t<report \n\t\n\timportedTemplate = 'false'\n\tappLinkName = 'thisapp'\n\tlinkName = 'TimeLog_Approvals'\n\tallowPublicAccess = 'false'\n\tisCompPublished = 'false'\n\theightType = 'auto'\n\theightValue = '700'\n\tiszreport = 'false'\n            zc_Footer = 'true'\n            zc_AddRec = 'false'\n            zc_EditRec = 'false'\n            zc_Print = 'true'\n            zc_Export = 'true'\n            zc_DelRec = 'false'\n            zc_DuplRec = 'false'\n            zc_Search = 'true'\n\/>\n<\/column><column\n   \t\t width=\"50%\"\n   \t>\n\t<report \n\t\n\timportedTemplate = 'false'\n\tappLinkName = 'thisapp'\n\tlinkName = 'Leave_Approvals1'\n\tallowPublicAccess = 'false'\n\tisCompPublished = 'false'\n\theightType = 'auto'\n\theightValue = '700'\n\tiszreport = 'false'\n            zc_Footer = 'true'\n            zc_AddRec = 'false'\n            zc_EditRec = 'false'\n            zc_Print = 'true'\n            zc_Export = 'true'\n            zc_DelRec = 'false'\n            zc_DuplRec = 'false'\n            zc_Search = 'true'\n\/>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
				 page My_Dashboard 
	 	 { 
 	 	 displayname = "My Dashboard"

 	 	 icon = "business-board-30" 
	 	 Content="<zml    \n\t\t\tisPdfEnabled='false'\n\t\t\n\t\t\tisPrintEnabled='false'\n\t\t\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<report \n\t\n\timportedTemplate = 'false'\n\tappLinkName = 'thisapp'\n\tlinkName = 'Calendar_View'\n\tallowPublicAccess = 'false'\n\tisCompPublished = 'false'\n\theightType = 'auto'\n\theightValue = '700'\n\tiszreport = 'false'\n            zc_Footer = 'true'\n            zc_AddRec = 'false'\n            zc_EditRec = 'false'\n            zc_Print = 'true'\n            zc_Export = 'true'\n            zc_DelRec = 'false'\n            zc_DuplRec = 'false'\n            zc_Search = 'true'\n\/>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<report \n\t\n\timportedTemplate = 'false'\n\tappLinkName = 'thisapp'\n\tlinkName = 'Open_Tasks1'\n\tallowPublicAccess = 'false'\n\tisCompPublished = 'false'\n\theightType = 'auto'\n\theightValue = '700'\n\tiszreport = 'false'\n            zc_Footer = 'true'\n            zc_AddRec = 'true'\n            zc_EditRec = 'true'\n            zc_Print = 'true'\n            zc_Export = 'true'\n            zc_DelRec = 'false'\n            zc_DuplRec = 'false'\n            zc_Search = 'true'\n\/>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<report \n\t\n\timportedTemplate = 'false'\n\tappLinkName = 'thisapp'\n\tlinkName = 'Open_Events'\n\tallowPublicAccess = 'false'\n\tisCompPublished = 'false'\n\theightType = 'auto'\n\theightValue = '700'\n\tiszreport = 'false'\n            zc_Footer = 'true'\n            zc_AddRec = 'true'\n            zc_EditRec = 'true'\n            zc_Print = 'true'\n            zc_Export = 'true'\n            zc_DelRec = 'false'\n            zc_DuplRec = 'false'\n            zc_Search = 'true'\n\/>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
				 page google_calander 
	 	 { 
 	 	 displayname = "google calander"

 	 	 icon = "design-2-android" 
	 	 Content="<zml    \n\t\t\tisPdfEnabled='false'\n\t\t\n\t\t\tisPrintEnabled='false'\n\t\t\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<embed \n\t\n\thAlign = 'center'\n\turl = 'https:\/\/calendar.google.com\/calendar\/embed?height=600&amp;wkst=1&amp;bgcolor=%23ffffff&amp;ctz=America%2FDenver&amp;src=bzIzczdiaG9zb2gycjJ2cmxiaXBmMzk0cGNAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ&amp;src=OTJqMWU3aTQ1a2VqZTE5a3NkdDh1OGx1Ym9AZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ&amp;src=cTdmYXB0N3NlN2t0ODVrZGFjMjRrYjZ1NDhAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ&amp;src=NG9ibzhzYmppaGhjZmtudDNpN2ZxY2duNm9AZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ&amp;src=ZW4udXNhI2hvbGlkYXlAZ3JvdXAudi5jYWxlbmRhci5nb29nbGUuY29t&amp;color=%23009688&amp;color=%23D50000&amp;color=%238E24AA&amp;color=%23F6BF26&amp;color=%23616161'\n\twidth = '800'\n\theight = '600'\n\/>\n\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
				 page Time_Tracker1 
	 	 { 
 	 	 displayname = "Time Tracker"

 	 	 icon = "users-2-a-time" 
	 	 Content="<zml    \n\t\t\tisPdfEnabled='false'\n\t\t\n\t\t\tisPrintEnabled='false'\n\t\t\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<widgets importedTemplate='true'\/>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
	}
	section Jobs1
	{
		displayname= "Jobs"
		icon = "education-award-55"
		pivotchart Crew_Job_Throughput
		{ 
			displayname = "Crew - Job Throughput"
			legend = RIGHT
			report properties
			(
				records displayed = all_records
				allow export = false
				allow drilldown and view underlying data = false
		
			)

			based on Autoview_1652541689078_Add_Schedule
					hide = true
							icon = "users-2-a-time"				show all rows from Add_Schedule
				(
			Deal_Name  as "Deal Name"
			Client_Name  as "Client Name"
			Client_Id  as "Client Id"
			Phone_Number  as "Phone"
			Email 
			Address 
 			(
 				address_line_1 as "Address"
 				address_line_2 as "Address.Address Line 2"
 				district_city as "Address.City / District"
 				state_province as "Address.State / Province"
 				postal_Code as "Address.Postal Code"
 				country as "Address.Country"
 				latitude as "Address.latitude"
 				longitude as "Address.longitude"
     			displayformat = [address_line_1+""+address_line_2+""+district_city+""+state_province+""+postal_Code+""+country+""+latitude+""+longitude]
 			)
			Superintendent 
			Crew_Lead1  as "Crew Lead"
			Start_Date  as "Start Date "
			Installation_Crew  as "Installation Crew "
			Floor_Sq_Ft  as "Floor Sq Ft "
			Closing_Date  as "Closing Date "
			Flake_Color  as "Flake Color"
			Stem_Walls_Stairs_Sq_Ft  as "Stem Walls & Stairs Sq Ft "
			Stopping_at_the_garage  as "Stopping at the garage? "
			Status 
			users  as "Users"
			Books_Id  as "Books Id"
			Log_Status  as "Log Status"
			Log_Time_Id  as "Log Time Id"
			Discount 
			Total 
			Balance_Due  as "Balance Due"
				)
		}
		pivotchart Job_Stats
		{ 
			displayname = "Job Stats"
			legend = RIGHT
			report properties
			(
				records displayed = all_records
				allow export = false
				allow drilldown and view underlying data = false
		
			)

			based on Autoview_1652541689078_Add_Schedule
					hide = true
							icon = "users-2-a-time"				show all rows from Add_Schedule
				(
			Deal_Name  as "Deal Name"
			Client_Name  as "Client Name"
			Client_Id  as "Client Id"
			Phone_Number  as "Phone"
			Email 
			Address 
 			(
 				address_line_1 as "Address"
 				address_line_2 as "Address.Address Line 2"
 				district_city as "Address.City / District"
 				state_province as "Address.State / Province"
 				postal_Code as "Address.Postal Code"
 				country as "Address.Country"
 				latitude as "Address.latitude"
 				longitude as "Address.longitude"
     			displayformat = [address_line_1+""+address_line_2+""+district_city+""+state_province+""+postal_Code+""+country+""+latitude+""+longitude]
 			)
			Superintendent 
			Crew_Lead1  as "Crew Lead"
			Start_Date  as "Start Date "
			Installation_Crew  as "Installation Crew "
			Floor_Sq_Ft  as "Floor Sq Ft "
			Closing_Date  as "Closing Date "
			Flake_Color  as "Flake Color"
			Stem_Walls_Stairs_Sq_Ft  as "Stem Walls & Stairs Sq Ft "
			Stopping_at_the_garage  as "Stopping at the garage? "
			Status 
			users  as "Users"
			Books_Id  as "Books Id"
			Log_Status  as "Log Status"
			Log_Time_Id  as "Log Time Id"
			Discount 
			Total 
			Balance_Due  as "Balance Due"
				)
		}
		form Add_Schedule
		{
			displayname = "Add Job"
			success message = "Schedule Added Successfully"
			field alignment = left
					hide = true
			Contact_Information
			(
				type = section
				displayname = "Deal Information"
				visibility = true
	 			row = 1
	 			column = 0   
				width = medium
			)
			Deal_Name
			(
    			type = text
				displayname = "Deal Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Section2
			(
				type = section
				displayname = "Client Information"
				visibility = true
	 			row = 2
	 			column = 0   
				width = medium
			)
			Client_Name
			(
				type = picklist	
				displayname = "Client Name"
				values  = Add_Client.ID
    			displayformat = [First_Name + " " + Last_Name]
				sortorder = ascending
	 			row = 2
	 			column = 1   
				width = medium
			)
			Client_Id
			(
    			type = text
				displayname = "Client Id"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Phone_Number
			(
    			type = phonenumber
				displayname = "Phone"
	 			row = 2
	 			column = 1   
				width = medium
				personal data = true
			)
			Email
			(
    			type = email
				maxchar = 80
	 			row = 2
	 			column = 2   
				width = medium
				personal data = true
			)
			Address
			(
    			type = address
     			capture_coordinates = true
     			adjust_using_map = false
     			address_line_1
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_2
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 2
	 			column = 2   
				width = medium
				personal data = true
			)
			Crew_Information
			(
				type = section
				displayname = "Crew Information"
				visibility = true
	 			row = 3
	 			column = 0   
				width = medium
			)
			Superintendent
			(
				type = picklist	
				values  = Add_Employee.ID
    			displayformat = [First_Name]
				sortorder = ascending
	 			row = 3
	 			column = 1   
				width = medium
			)
			Crew_Lead
			(
				type = list	
				displayname = "Crew Members"
				values  = Add_Employee.ID
    			displayformat = [First_Name]
				sortorder = ascending
				height = 60px
	 			row = 3
	 			column = 1   
				width = medium
			)
			Crew_Lead1
			(
				type = picklist	
				displayname = "Crew Lead"
				values  = Add_Employee.ID
    			displayformat = [First_Name]
				sortorder = ascending
	 			row = 3
	 			column = 2   
				width = medium
			)
			Project_Information
			(
				type = section
				displayname = "Project Information"
				visibility = true
	 			row = 4
	 			column = 0   
				width = medium
			)
			Start_Date
			(
    			type = date
				displayname = "Start Date "
				alloweddays = 0,1,2,3,4,5,6
	 			row = 4
	 			column = 1   
				width = medium
			)
			Installation_Crew
			(
    			type = text
				displayname = "Installation Crew "
	 			row = 4
	 			column = 1   
				width = medium
			)
			Floor_Sq_Ft
			(
    			type = text
				displayname = "Floor Sq Ft "
	 			row = 4
	 			column = 1   
				width = medium
			)
			Upload_1
			(
    			type = image
				displayname = "Image Upload 1 "
				source  = file
				aspect ratio = original
				camera = primary
				show gallery = true
				switch camera = true
	 			row = 4
	 			column = 1   
				width = medium
			)
			Additional_Job_Notes
			(
    			type = textarea
				displayname = "Additional Job Notes"
				height = 100px
	 			row = 4
	 			column = 1   
				width = medium
			)
			Closing_Date
			(
    			type = date
				displayname = "Closing Date "
				alloweddays = 0,1,2,3,4,5,6
	 			row = 4
	 			column = 2   
				width = medium
			)
			Flake_Color
			(
    			type = text
				displayname = "Flake Color"
	 			row = 4
	 			column = 2   
				width = medium
			)
			Stem_Walls_Stairs_Sq_Ft
			(
    			type = text
				displayname = "Stem Walls & Stairs Sq Ft "
	 			row = 4
	 			column = 2   
				width = medium
			)
			Image_Upload_2
			(
    			type = image
				displayname = "Image Upload 2 "
				source  = file
				aspect ratio = original
				camera = primary
				show gallery = true
				switch camera = true
	 			row = 4
	 			column = 2   
				width = medium
			)
			Stopping_at_the_garage
			(
    			type = text
				displayname = "Stopping at the garage? "
	 			row = 4
	 			column = 2   
				width = medium
			)
			Line_Items
			(
				type = grid
				displayname = "Line Items"
				values  = Line_Items.ID
    			bidirectional = Schedule_ID
	 			row = 5
	 			column = 1   
				width = medium
			)
			Associated_Items
			(
				type = grid
				displayname = "Associated Composite Items"
				values  = Associate_Composite_Items.ID
	 			row = 5
	 			column = 1   
				width = medium
			)
			Invoice_Details
			(
				type = section
				displayname = "Invoice Details"
				visibility = true
	 			row = 6
	 			column = 0   
				width = medium
			)
			Discount
			(
				type = USD
				format = commadotwestern
	 			row = 6
	 			column = 1   
				width = medium
			)
			Total
			(
				type = USD
				format = commadotwestern
	 			row = 6
	 			column = 1   
				width = medium
			)
			Balance_Due
			(
				displayname = "Balance Due"
				type = USD
				format = commadotwestern
	 			row = 6
	 			column = 1   
				width = medium
			)
			Section
			(
				type = section
	 			row = 7
	 			column = 0   
				width = medium
			)
			Status
			(
				type = picklist
				maxchar = 100
				values = {"Scheduled", "In Progress", "Completed"}
	 			row = 7
	 			column = 1   
				width = medium
			)
			Books_Id
			(
    			type = text
				displayname = "Books Id"
	 			row = 7
	 			column = 1   
				width = medium
			)
			Section1
			(
				type = section
				displayname = "Section"
	 			row = 8
	 			column = 0   
				width = medium
			)
			users
			(
    			type = picklist
				displayname = "Users"
				module = users
				displayformat = [username]
	 			row = 8
	 			column = 1   
				width = medium
				personal data = true
			)
			job_users1
			(
				type = section
				displayname = "job users"
	 			row = 9
	 			column = 0   
				width = medium
			)
			Log_Status
			(
				type = picklist
				displayname = "Log Status"
				maxchar = 100
				values = {"Yet to Check", "Checked In", "Checked Out", "Completed"}
	 			row = 9
	 			column = 1   
				width = medium
			)
			Section3
			(
				type = section
				displayname = "Section"
	 			row = 10
	 			column = 0   
				width = medium
			)
			Log_Time_Id
			(
    			type = text
				displayname = "Log Time Id"
	 			row = 10
	 			column = 1   
				width = medium
			)
			Associate_Completed_Job
			(
				type = grid
				displayname = "Job Completion Notes"
				values  = Associate_Completed_Job.ID
    			bidirectional = Job_Id
	 			row = 10
	 			column = 1   
				width = medium
			)
			Job_Members
			(
				type = list	
				displayname = "Job Members"
				values = {"Choice 3", "Porter", "Jhonson", "[Luke]"}
				height = 60px
	 			row = 10
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "food-hob"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list My_Jobs
		{
			displayName = "My Jobs"
			show all rows from Add_Schedule  [Superintendent.Email_address == zoho.loginuserid || Crew_Lead1.Email_address == zoho.loginuserid || Crew_Lead.Email_address == zoho.loginuserid]  
			(
				Deal_Name as "Deal Name"
				Client_Name as "Client Name"
				Phone_Number as "Phone"
				(
					displayformat = formattednumber 
					linktodial = enable
				)
				Address 
	 			(
	      			displayformat = [address_line_1+""+address_line_2+""+district_city+""+state_province+""+postal_Code+""+country]
	      			enable = Link_to_Map,Show_As_Text
	 			)
				custom action "Complete Job"
				(
	  			workflow = Complete_Job
				show action in view header = true
				show action in edit record menu = true
				column header = "Complete Job"
				condition = (Crew_Lead.Email_address == zoho.loginuserid || Crew_Lead1.Email_address == zoho.loginuserid || Superintendent.Email_address == zoho.loginuserid && Status == "In Progress")
				)
				Email
				Start_Date as "Start Date "
				Installation_Crew as "Installation Crew "
				Closing_Date as "Closing Date "
				Floor_Sq_Ft as "Floor Sq Ft "
				Additional_Job_Notes as "Additional Job Notes"
				Superintendent
				Crew_Lead1 as "Crew Lead"
				Crew_Lead as "Crew Members"
				Status
				Stem_Walls_Stairs_Sq_Ft as "Stem Walls & Stairs Sq Ft "
				Stopping_at_the_garage as "Stopping at the garage? "
				Flake_Color as "Flake Color"
				Discount
				Total as "Invoice Total"
				Balance_Due as "Balance Due"
				custom action "Start Job"
				(
	  			workflow = Start_Job1
				show action in view header = true
				show action in edit record menu = true
				column header = "Start Job"
				condition = (Crew_Lead.Email_address == zoho.loginuserid || Crew_Lead1.Email_address == zoho.loginuserid || Superintendent.Email_address == zoho.loginuserid && Status == "Scheduled")
				)
			)
			filters
			(
				Status
				Start_Date
				"Jobs Scheduled This Week"  :  Start_Date in this week && Status == "Scheduled"
				"Jobs Scheduled This Month"  :  Start_Date in this month && Status == "Scheduled"
				"All Scheduled Jobs"  :  Status == "Scheduled"
				"In Progress Jobs"  :  Status == "In Progress"
				"Completed Jobs"  :  Status == "Completed"
			)
			group by
			(
				Status ascending
				Start_Date ascending
			)
			sort by
			(
				Status ascending
				Start_Date ascending
			)
			options
			(
				icon = "education-award-55"
	 		)
			custom actions
			(
				"Check-In"
				(
	  			workflow = Log_Status_CheckIn
				show action in view header = true
				condition = (Log_Status == "Draft" || Log_Status == "Checked Out")
				)
				" Check-Out"
				(
	  			workflow = LogCheckedOut
				show action in view header = true
				show action in edit record menu = true
				condition = (Log_Status == "Checked In")
				)
			)
			quickview
			(
				layout
				(
		 			customlayouts
	     			(
		 				template
		 				(
		 	  				displayname="Custom Layout 1"
		 	  				content="<panel \n >\n	<pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		bgColor = '#FFFFFF'\n\n		width = '100%'\n		hAlign = 'left'\n		vAlign = 'middle'\n>\n	<pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		padding = '17px'\n\n		width = '100%'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#00D9B1'\n	size = '20px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'true' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '27'\n      	  numOfLines = '1'\n	  value = 'Deal_Name'\n>\n</text>\n\n</pc>\n</pr>\n</pc>\n</pr><pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		paddingTop = '0px'\n	paddingLeft = '17px'\n	paddingRight = '17px'\n	paddingBottom = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '100%'\n		hAlign = 'left'\n		vAlign = 'middle'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '16px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '22'\n      	  numOfLines = '3'\n	  value = 'Address'\n>\n</text>\n\n</pc>\n</pr>\n</pc>\n</pr><pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		paddingTop = '0px'\n	paddingLeft = '17px'\n	paddingRight = '17px'\n	paddingBottom = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '48%'\n		hAlign = 'left'\n		vAlign = 'middle'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '16px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '22'\n      	  numOfLines = '1'\n	  value = 'Start_Date'\n>\n</text>\n\n</pc>\n</pr>\n</pc><pc \n		paddingTop = '0px'\n	paddingLeft = '17px'\n	paddingRight = '17px'\n	paddingBottom = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '52%'\n		hAlign = 'left'\n		vAlign = 'middle'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	marginLeft = '10px'\n	marginBottom = '0px'\n	marginTop = '0px'\n	color = '#000000'\n	size = '16px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '22'\n      	  numOfLines = '1'\n	  value = 'Closing_Date'\n>\n</text>\n\n</pc>\n</pr>\n</pc>\n</pr>\n</pc>\n</pr>\n</panel>"
		    			)
	     			)
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Deal_Name as "Deal Name"
							Status
							Client_Name as "Client Name"
							Start_Date as "Start Date "
							Closing_Date as "Closing Date "
							Address
							Phone_Number as "Phone"
							Email
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Delete 
    	 			)
							record
							(
								"Start Job"
								"Complete Job"
								Edit   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								View Record   	   
								"Start Job"
								Edit   	   
								Delete   	   
								"Complete Job"
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Deal_Name as "Deal Name"
							Client_Name as "Client Name"
							Start_Date as "Start Date "
							Closing_Date as "Closing Date "
							Phone_Number as "Phone"
							Email
							Address
							Additional_Job_Notes as "Additional Job Notes"
							Floor_Sq_Ft as "Floor Sq Ft "
							Stem_Walls_Stairs_Sq_Ft as "Stem Walls & Stairs Sq Ft "
							Stopping_at_the_garage as "Stopping at the garage? "
							Flake_Color as "Flake Color"
							Status
							Total as "Invoice Total"
							Discount
							Balance_Due as "Balance Due"
						)
					)
					datablock2
					(
			 			layout type = -1
		     			title = "Line Items"
		     			related field = Line_Items
						fields
						(
							Location as "Location "
							Product
							Composite_Items as "Composite Items"
							Sqft
							Total_Value as "Product Cost"
						)
					)
					datablock3
					(
			 			layout type = -1
		     			title = "Associated Composite Items"
		     			related field = Associated_Items
						fields
						(
							Location as "Location "
							Composite_Items_Name as "Composite Items Name"
							Product_Name as "Product Name"
							Sqft as "Quantity Per Sqft"
							Amount as "Total Quantity Required"
						)
					)
					datablock4
					(
			 			layout type = -2
		     			title = "Installation Crew"
						fields
						(
							Installation_Crew as "Installation Crew "
							Superintendent
							Crew_Lead1 as "Crew Lead"
							Crew_Lead as "Crew Members"
						)
					)
					datablock5
					(
			 			layout type = -1
		     			title = "Job Completion Notes"
		     			related field = Associate_Completed_Job
						fields
						(
							Job_Notes as "Job Notes"
							Screenshot as "Screenshot "
							Video
							User_Added_By as "User Added By"
							Job_Id.Added_Time as "Added Time"
							Added_Location as "Job Location"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
			 			"Start Job"
			 			"Complete Job"
    		 			Edit 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Jobs
		{
			displayName = "All Jobs"
			show all rows from Add_Schedule    
			(
				Deal_Name as "Deal Name"
				Client_Name as "Client Name"
				Phone_Number as "Phone"
				(
					displayformat = formattednumber 
					linktodial = enable
				)
				Address 
	 			(
	      			displayformat = [address_line_1+""+address_line_2+""+district_city+""+state_province+""+postal_Code+""+country]
	      			enable = Link_to_Map,Show_As_Text
	 			)
				custom action "Complete Job"
				(
	  			workflow = Complete_Job
				show action in view header = true
				show action in edit record menu = true
				column header = "Complete Job"
				condition = (Crew_Lead.Email_address == zoho.loginuserid || Crew_Lead1.Email_address == zoho.loginuserid || Superintendent.Email_address == zoho.loginuserid && Status == "In Progress")
				)
				Email
				Start_Date as "Start Date "
				Installation_Crew as "Installation Crew "
				Closing_Date as "Closing Date "
				Floor_Sq_Ft as "Floor Sq Ft "
				Additional_Job_Notes as "Additional Job Notes"
				Superintendent
				Crew_Lead1 as "Crew Lead"
				Crew_Lead as "Crew Members"
				Status
				Stem_Walls_Stairs_Sq_Ft as "Stem Walls & Stairs Sq Ft "
				Stopping_at_the_garage as "Stopping at the garage? "
				Flake_Color as "Flake Color"
				Discount
				Total as "Invoice Total"
				Balance_Due as "Balance Due"
				Client_Id as "Client Id"
				custom action "Start Job"
				(
	  			workflow = Start_Job1
				show action in view header = true
				show action in edit record menu = true
				column header = "Start Job"
				condition = (Crew_Lead.Email_address == zoho.loginuserid || Crew_Lead1.Email_address == zoho.loginuserid || Superintendent.Email_address == zoho.loginuserid && Status == "Scheduled")
				)
			)
			filters
			(
				Status
				Start_Date
				Closing_Date
				"Jobs Scheduled This Week"  :  Status == "Scheduled" && Start_Date in this week
				"Jobs Scheduled This Month"  :  Status == "Scheduled" && Start_Date in this month
				"In Progress Jobs"  :  Status == "In Progress"
				"Completed Jobs"  :  Status == "Completed"
				"UTC 1 Jobs"  :  Installation_Crew == "UTC 1"
				"UTC 2 Jobs"  :  Installation_Crew == "UTC 2"
				"UTC 3 Jobs"  :  Installation_Crew == "UTC 3"
			)
			group by
			(
				Status ascending
				Installation_Crew ascending
			)
			sort by
			(
				Installation_Crew ascending
				Start_Date ascending
				Status ascending
			)
			options
			(
				icon = "travel-world"
	 		)
			custom actions
			(
				"Check-In"
				(
	  			workflow = Log_Status_CheckIn
				show action in view header = true
				condition = (Log_Status == "Draft" || Log_Status == "Checked Out")
				)
				" Check-Out"
				(
	  			workflow = LogCheckedOut
				show action in view header = true
				show action in edit record menu = true
				condition = (Log_Status == "Checked In")
				)
			)
			conditional formatting
			(
				"UTC 1"
				{
				condition = (Installation_Crew == "UTC 1")
				fields = [Installation_Crew]
				format = "font-weight:bold;color:#ef1616;"
				}
				"UTC 2"
				{
				condition = (Installation_Crew == "UTC 2")
				fields = [Installation_Crew]
				format = "color:#72088b;"
				}
				"UTC 3"
				{
				condition = (Installation_Crew == "UTC 3")
				fields = [Installation_Crew]
				format = "color:#efb116;"
				}
			)
			quickview
			(
				layout
				(
		 			customlayouts
	     			(
		 				template
		 				(
		 	  				displayname="Custom Layout 1"
		 	  				content="<panel \n >\n	<pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		bgColor = '#FFFFFF'\n\n		width = '100%'\n		hAlign = 'center'\n		vAlign = 'middle'\n>\n	<pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		paddingTop = '17px'\n	paddingLeft = '17px'\n	paddingRight = '0px'\n	paddingBottom = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '100%'\n		hAlign = 'left'\n		vAlign = 'middle'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#00D9B1'\n	size = '20px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'true' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'transparent'\n\n\n\n	  \n      	lineHeight = '29'\n      	  numOfLines = '1'\n	  value = 'Deal_Name'\n>\n</text>\n\n</pc>\n</pr>\n</pc>\n</pr><pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		paddingTop = '0px'\n	paddingLeft = '17px'\n	paddingRight = '17px'\n	paddingBottom = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '100%'\n		hAlign = 'left'\n		vAlign = 'middle'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '16px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '24'\n      	  numOfLines = '3'\n	  value = 'Address'\n>\n</text>\n\n</pc>\n</pr>\n</pc>\n</pr><pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		paddingTop = '0px'\n	paddingLeft = '17px'\n	paddingRight = '17px'\n	paddingBottom = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '100%'\n		hAlign = 'left'\n		vAlign = 'middle'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '16px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'true' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '24'\n      	  numOfLines = '1'\n	  value = 'Installation_Crew'\n>\n</text>\n\n</pc>\n</pr>\n</pc>\n</pr><pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		paddingTop = '17px'\n	paddingLeft = '17px'\n	paddingRight = '0px'\n	paddingBottom = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '50%'\n		hAlign = 'left'\n		vAlign = 'middle'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '16px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '24'\n      	  numOfLines = '1'\n	  value = 'Floor_Sq_Ft'\n>\n</text>\n\n</pc>\n</pr>\n</pc><pc \n		padding = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '50%'\n		hAlign = 'left'\n		vAlign = 'middle'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#2A70E7'\n	size = '16px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '24'\n      	  numOfLines = '1'\n	  value = 'Phone_Number'\n>\n</text>\n\n</pc>\n</pr>\n</pc>\n</pr><pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		paddingTop = '17px'\n	paddingLeft = '17px'\n	paddingRight = '0px'\n	paddingBottom = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '50%'\n		hAlign = 'left'\n		vAlign = 'middle'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '16px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '24'\n      	  numOfLines = '1'\n	  value = 'Start_Date'\n>\n</text>\n\n</pc>\n</pr>\n</pc><pc \n		padding = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '50%'\n		hAlign = 'left'\n		vAlign = 'middle'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '16px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '24'\n      	  numOfLines = '1'\n	  value = 'Closing_Date'\n>\n</text>\n\n</pc>\n</pr>\n</pc>\n</pr>\n</pc>\n</pr>\n</panel>"
		    			)
	     			)
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Deal_Name as "Deal Name"
							Status
							Client_Name as "Client Name"
							Start_Date as "Start Date "
							Closing_Date as "Closing Date "
							Address
							Phone_Number as "Phone"
							Email
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Delete 
    	 			)
							record
							(
								"Start Job"
								"Complete Job"
								Edit   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								View Record   	   
								"Start Job"
								Edit   	   
								Delete   	   
								"Complete Job"
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Deal_Name as "Deal Name"
							Client_Name as "Client Name"
							Start_Date as "Start Date "
							Closing_Date as "Closing Date "
							Phone_Number as "Phone"
							Email
							Address
							Additional_Job_Notes as "Additional Job Notes"
							Floor_Sq_Ft as "Floor Sq Ft "
							Stem_Walls_Stairs_Sq_Ft as "Stem Walls & Stairs Sq Ft "
							Stopping_at_the_garage as "Stopping at the garage? "
							Flake_Color as "Flake Color"
							Status
							Total as "Invoice Total"
							Discount
							Balance_Due as "Balance Due"
						)
					)
					datablock2
					(
			 			layout type = -1
		     			title = "Line Items"
		     			related field = Line_Items
						fields
						(
							Location as "Location "
							Product
							Composite_Items as "Composite Items"
							Sqft
							Total_Value as "Product Cost"
						)
					)
					datablock3
					(
			 			layout type = -1
		     			title = "Associated Composite Items"
		     			related field = Associated_Items
						fields
						(
							Location as "Location "
							Composite_Items_Name as "Composite Items Name"
							Product_Name as "Product Name"
							Sqft as "Quantity Per Sqft"
							Amount as "Total Quantity Required"
						)
					)
					datablock4
					(
			 			layout type = -2
		     			title = "Installation Crew"
						fields
						(
							Installation_Crew as "Installation Crew "
							Superintendent
							Crew_Lead1 as "Crew Lead"
							Crew_Lead as "Crew Members"
						)
					)
					datablock5
					(
			 			layout type = -1
		     			title = "Job Completion Notes"
		     			related field = Associate_Completed_Job
						fields
						(
							Job_Notes as "Job Notes"
							Screenshot as "Screenshot "
							Video
							User_Added_By as "User Added By"
							Job_Id.Added_Time as "Added Time"
							Added_Location as "Location By"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
			 			"Start Job"
			 			"Complete Job"
    		 			Edit 
    		 			Delete 
    	 			)
    			)
			)
		}
		calendar Job_Calander
		{
			displayName = "Job Calander"
   			hide = true
			show all rows from Add_Schedule    
			(
				Deal_Name as "Deal Name"
				Client_Name as "Client Name"
				Client_Id as "Client Id"
				Phone_Number as "Phone"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Email
				Address 
	 			(
	      			displayformat = [address_line_1+""+address_line_2+""+district_city+""+state_province+""+postal_Code+""+country]
	      			enable = Link_to_Map,Show_As_Text
	 			)
				Superintendent
				Crew_Lead as "Crew Members"
				Crew_Lead1 as "Crew Lead"
				Start_Date as "Start Date "
				Installation_Crew as "Installation Crew "
				Floor_Sq_Ft as "Floor Sq Ft "
				Upload_1 as "Image Upload 1 "
				Additional_Job_Notes as "Additional Job Notes"
				Closing_Date as "Closing Date "
				Flake_Color as "Flake Color"
				Stem_Walls_Stairs_Sq_Ft as "Stem Walls & Stairs Sq Ft "
				Image_Upload_2 as "Image Upload 2 "
				Stopping_at_the_garage as "Stopping at the garage? "
			)
			options
			(
				display type = month
				week start day = sunday
				display field = Deal_Name
				start date = Start_Date
				end date = Closing_Date
				default date 
				(
	    			day   = Today
	    			month = Currentmonth
	    			year  = Currentyear
				)
				icon = "users-2-a-time"
			)
			conditional formatting
			(
				"New Formatting"
				{
				format = "color:#ffffff;background-color:#765f89;"
				}
			)
			quickview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = 4
						fields
						(
							Deal_Name as "Deal Name"
							Installation_Crew as "Installation Crew "
							Phone_Number as "Phone"
							Email
							Crew_Lead1 as "Crew Lead"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Deal_Name as "Deal Name"
							Client_Name as "Client Name"
							Client_Id as "Client Id"
							Phone_Number as "Phone"
							Email
							Address
							Superintendent
							Crew_Lead as "Crew Members"
							Crew_Lead1 as "Crew Lead"
							Start_Date as "Start Date "
							Installation_Crew as "Installation Crew "
							Floor_Sq_Ft as "Floor Sq Ft "
							Upload_1 as "Image Upload 1 "
							Additional_Job_Notes as "Additional Job Notes"
							Closing_Date as "Closing Date "
							Flake_Color as "Flake Color"
							Stem_Walls_Stairs_Sq_Ft as "Stem Walls & Stairs Sq Ft "
							Image_Upload_2 as "Image Upload 2 "
							Stopping_at_the_garage as "Stopping at the garage? "
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Time_Logs
	{
		displayname= "Time Logs"
		icon = "files-folder-time"
		form Time_Logs
		{
			displayname = "Time Logs"
			success message = "Time Log Added Successfully"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Employee_Email
			(
				type = picklist	
				displayname = "Employee Email"
				values  = Add_Employee.ID
    			displayformat = [Email_address]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Emp_email
			(
    			type = email
				displayname = "Emp email"
				maxchar = 80
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			Job_Name
			(
				type = picklist	
				displayname = "Job Name"
				values  = Add_Schedule.ID
    			displayformat = [Deal_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			users
			(
    			type = picklist
				displayname = "Users"
				module = users
				displayformat = [username]
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			Task
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			Description
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Date_field
			(
    			type = date
				displayname = "Date"
				initial value = "${zoho.currentdate}"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Track_as
			(
				type = radiobuttons
				displayname = "Track as"
				maxchar = 100
				values = {"Hours", "Start & End"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Status1
			(
				type = picklist
				displayname = "Status"
				maxchar = 100
				values = {"Approved", "Submitted", "Corrections", "Pending Approval"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Status
			(
				type = picklist
				maxchar = 100
				values = {"Tracking Time", "Tracked"}
				initial value = "Tracked"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Log_Time_Id
			(
    			type = text
				displayname = "Log Time Id"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Add_weekly_Logs
			(
				type = picklist	
				displayname = "Add weekly Logs"
				values  = Add_weekly_Logs.ID
    			displayformat = [ID]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Section3
			(
				type = section
				displayname = "Section"
	 			row = 2
	 			column = 0   
				width = medium
			)
			From_Time
			(
    			type = time
				displayname = "Start Time"
				mins_displayinterval = 5
				timedisplayoptions = "hh:mm" 
	 			row = 2
	 			column = 1   
				width = medium
			)
			End_Time1
			(
    			type = time
				displayname = "End Time"
				mins_displayinterval = 5
				timedisplayoptions = "hh:mm" 
	 			row = 2
	 			column = 1   
				width = medium
			)
			Hours1
			(
    			type = text
				displayname = "Hours"
				initial value = "00:00"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Hours
			(
				type = decimal
	 			row = 2
	 			column = 1   
				width = medium
			)
			Clock_In
			(
				type = grid
				displayname = "Clock-In"
				values  = Clock_In.ID
    			bidirectional = Time_Logs_Id
	 			row = 3
	 			column = 1   
				width = medium
			)
			Clock_Out
			(
				type = grid
				displayname = "Clock-Out"
				values  = Clock_Out.ID
    			bidirectional = Time_Logs_Id
	 			row = 4
	 			column = 1   
				width = medium
			)
			Section1
			(
				type = section
				displayname = "Section"
				visibility = true
	 			row = 5
	 			column = 0   
				width = medium
			)
			Date_Range
			(
    			type = text
				displayname = "Date Range"
	 			row = 5
	 			column = 1   
				width = medium
			)
			Section2
			(
				type = section
				displayname = "Section"
	 			row = 6
	 			column = 0   
				width = medium
			)
			TimeLog_Approvers
			(
				type = list	
				displayname = "TimeLog Approvers"
				values  = Add_Employee.ID
    			displayformat = [ID]
				sortorder = ascending
				height = 60px
	 			row = 6
	 			column = 1   
				width = medium
			)
			Approver_Emails
			(
				type = list	
				displayname = "Approver Emails"
				values = {"Choice 1", "info@lifetimeepoxyutah.com", "porter@lifetimeepoxyutah.com", "johnson.taylor1474@gmail.com", "cortdurf18@gmail.com", "kneecap37@gmail.com"}
				height = 60px
	 			row = 6
	 			column = 1   
				width = medium
			)
			Log_Type
			(
				type = picklist
				displayname = "Log Type"
				maxchar = 100
				values = {"Daily Log", "Weekly Logs", "Test"}
	 			row = 6
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "users-2-a-time"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Add_weekly_Logs
		{
			displayname = "Add weekly Logs"
			success message = "Weekly Time Logs Submitted!"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			From
			(
    			type = date
				alloweddays = 0
	 			row = 1
	 			column = 1   
				width = medium
			)
			To
			(
    			type = date
				alloweddays = 6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Test_Field
			(
    			type = text
				displayname = "Test Field"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Logs
			(
				type = grid
				Job_Name
				(
					type = picklist	
					displayname = "Job Name"
					values  = Add_Schedule.ID
    				displayformat = [Deal_Name]
					sortorder = ascending
					width = medium
				)
				must have Task
				(
    				type = text
					width = medium
				)
				must have Sunday
				(
    				type = text
					initial value = "00:00"
					width = medium
				)
				must have Monday
				(
    				type = text
					initial value = "00:00"
					width = medium
				)
				must have Tuesday
				(
    				type = text
					initial value = "00:00"
					width = medium
				)
				must have Wednesday
				(
    				type = text
					initial value = "00:00"
					width = medium
				)
				must have Thursday
				(
    				type = text
					initial value = "00:00"
					width = medium
				)
				must have Friday
				(
    				type = text
					initial value = "00:00"
					width = medium
				)
				must have Saturday
				(
    				type = text
					initial value = "00:00"
					width = medium
				)
	 			row = 2
	 			column = 1   
				width = medium
			)
			Section1
			(
				type = section
				displayname = "Section"
	 			row = 3
	 			column = 0   
				width = medium
			)
			Submitted_By
			(
    			type = picklist
				displayname = "Submitted By"
				module = users
				displayformat = [username]
	 			row = 3
	 			column = 1   
				width = medium
				personal data = true
			)
			Section2
			(
				type = section
				displayname = "Section"
	 			row = 4
	 			column = 0   
				width = medium
			)
			TimeLog_Approvers
			(
				type = list	
				displayname = "TimeLog Approvers"
				values  = Add_Employee.ID
    			displayformat = [ID]
				sortorder = ascending
				height = 60px
	 			row = 4
	 			column = 1   
				width = medium
			)
			Section3
			(
				type = section
				displayname = "Section"
				visibility = true
	 			row = 5
	 			column = 0   
				width = medium
			)
			Date_Range
			(
    			type = text
				displayname = "Date Range"
	 			row = 5
	 			column = 1   
				width = medium
			)
			Employee_Email
			(
				type = picklist	
				displayname = "Employee Email"
				values  = Add_Employee.ID
    			displayformat = [Email_address]
				sortorder = ascending
	 			row = 5
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "media-1-polaroid-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list All_Leaves1
		{
			displayName = "All Leaves"
   			hide = true
			show all rows from Apply_Leave    
			(
				Employee1 as "Employee"
				Type
				Date_field as "Date"
				Form_Date as "Form Date"
				To_Date as "To Date"
				Leave_Taken_By as "Leave Taken Sofar"
				Leave_Type as "Leave Type"
				Reason_for_leave as "Leave Description"
				Status
				Added_User as "Added User"
				Total_Day_s as "Total Day(s)"
			)
			group by
			(
				Added_User ascending
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Employee1 as "Employee"
							Type
							Date_field as "Date"
							Form_Date as "Form Date"
							To_Date as "To Date"
							Total_Day_s as "Total Day(s)"
							Leave_Taken_By as "Leave Taken Sofar"
							Leave_Type as "Leave Type"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Employee1 as "Employee"
							Type
							Date_field as "Date"
							Form_Date as "Form Date"
							To_Date as "To Date"
							Total_Day_s as "Total Day(s)"
							Leave_Taken_By as "Leave Taken Sofar"
							Leave_Type as "Leave Type"
							Reason_for_leave as "Leave Description"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		pivotchart Weekly_Hours_by_Employee
		{ 
			displayname = "Weekly Hours by Employee"
			legend = RIGHT
			report properties
			(
				records displayed = all_records
				allow export = false
				allow drilldown and view underlying data = false
		
			)

			based on Autoview_1654270724556_Time_Logs
					hide = true
							icon = "business-progress"				show all rows from Time_Logs
				(
			Employee_Email  as "Employee Email"
			Job_Name  as "Job Name"
			users  as "Users"
			Task 
			Date_field  as "Date"
			Track_as  as "Track as"
			Hours1  as "Hours"
			Status1  as "Status"
			Status 
			Log_Time_Id  as "Log Time Id"
			Add_weekly_Logs  as "Add weekly Logs"
			Date_Range  as "Date Range"
			Hours  as "Hours1"
			Log_Type  as "Log Type"
			Emp_email  as "Emp email"
			From_Time  as "Start Time"
			End_Time1  as "End Time1"
				)
		}
		default list Leave_Approvals1
		{
			displayName = "Leave Approvals"
   			hide = true
			show all rows from Apply_Leave  [Status == "Draft" && Leave_Approvers.Email_address == zoho.loginuserid && Employee_Email.Role != "Admin" && Employee_Email.Role != "Owner" && Employee_Email.Email_address != zoho.loginuserid]  
			(
				Form_Date as "Form Date"
				(
					displayformat = fulldate
				)
				To_Date as "To Date"
				(
					displayformat = fulldate
				)
				Reason_for_leave as "Leave Description"
				Type
				Date_field as "Date submitted"
				Leave_Type as "Leave Type"
				Status
				Employee1 as "Employee"
				Leave_Taken_By as "Leave Taken Sofar"
				Employee_Email as "Employee Email"
				custom action "Approve"
				(
	  			workflow = Approved_Leave
				show action in view header = true
				show action in edit record menu = true
				column header = "Approve"
				condition = (Status == "Draft")
				)
				Total_Day_s as "Total Day(s)"
				Employee_Email.First_Name as "First Name"
			)
			group by
			(
				Employee_Email.First_Name ascending
			)
			options
			(
				icon = "media-1-action-74"
	 		)
			quickview
			(
				layout
				(
		 			customlayouts
	     			(
		 				template
		 				(
		 	  				displayname="Custom Layout 1"
		 	  				content="<panel \n >\n	<pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		padding = '0px'\n	bgColor = '#FFFFFF'\n\n		width = '100%'\n		hAlign = 'center'\n		vAlign = 'middle'\n>\n	<pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		paddingTop = '17px'\n	paddingLeft = '0px'\n	paddingRight = '17px'\n	paddingBottom = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '29%'\n		hAlign = 'center'\n		vAlign = 'middle'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '12px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '18'\n      	  numOfLines = '1'\n	  value = 'Leave_Type'\n>\n</text>\n\n</pc>\n</pr>\n</pc><pc \n		padding = '17px'\n	bgColor = 'transparent'\n\n		width = '17%'\n		hAlign = 'center'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '12px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '18'\n      	  numOfLines = '1'\n	  value = 'Total_Day_s'\n>\n</text>\n\n</pc>\n</pr>\n</pc><pc \n		paddingTop = '17px'\n	paddingLeft = '0px'\n	paddingRight = '17px'\n	paddingBottom = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '26%'\n		hAlign = 'left'\n		vAlign = 'top'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	marginLeft = '0px'\n	marginRight = '0px' \n	marginTop = '0px'\n	color = '#000000'\n	size = '12px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '18'\n      	  numOfLines = '1'\n	  value = 'Form_Date'\n>\n</text>\n\n</pc>\n</pr>\n</pc><pc \n		paddingTop = '17px'\n	paddingLeft = '0px'\n	paddingRight = '17px'\n	paddingBottom = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '28%'\n		hAlign = 'left'\n		vAlign = 'top'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '12px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '18'\n      	  numOfLines = '1'\n	  value = 'To_Date'\n>\n</text>\n\n</pc>\n</pr>\n</pc>\n</pr>\n</pc>\n</pr>\n</panel>"
		    			)
	     			)
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
				"Approve"
							Form_Date as "Form Date"
							To_Date as "To Date"
							Total_Day_s as "Total Day(s)"
							Reason_for_leave as "Leave Description"
							Type
							Leave_Type as "Leave Type"
							Status
							Leave_Taken_By as "Leave Taken Sofar"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    	 			)
							record
							(
								"Approve"
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Employee1 as "Employee"
							Employee_Email as "Employee Email"
							Total_Day_s as "Total Day(s)"
							Leave_Type as "Leave Type"
							Type
							Form_Date as "Form Date"
							To_Date as "To Date"
							Reason_for_leave as "Leave Description"
							Date_field as "Date submitted"
							Status
							Leave_Taken_By as "Leave Taken Sofar"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
			 			"Approve"
    	 			)
    			)
			)
		}
				 page TimeLog 
	 	 { 
 	 	 displayname = "TimeLog"

 	 	 icon = "ui-2-time-countdown" 
	 	 Content="<zml    \n\t\t\tisPdfEnabled='false'\n\t\t\n\t\t\tisPrintEnabled='false'\n\t\t\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<panel \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n>\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '17px'\n\tbgColor = 'transparent'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#00D9B1'\n\tsize = '24px'\n\tuppercase = 'false' \n\tunderline = 'false' \n\tbold = 'true' \n\titalic = 'false' \n\ttype = 'Text'\n\tbgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n\t  \n\t  value = 'Time Tracker'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpaddingTop = '0px'\n\tpaddingLeft = '17px'\n\tpaddingRight = '17px'\n\tpaddingBottom = '17px'\n\n\t\twidth = '100%'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<image  \n\t\n\tcolor = '#FFFFFF'\n\tbgColor = 'transparent'\n\twidth = '104px'\n\theight = '104px'\n\ttype = 'weburl'\n\tvalue = 'https:\/\/icon-library.com\/images\/time-sheet-icon\/time-sheet-icon-6.jpg'\n\tcornerRadius = '10px'\n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"50%\"\n   \t>\n\t<panel \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n\t\tvAlign = 'middle'\n>\n\t<button \n\t\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\n    action = 'OpenForm'\n\tcomponentLinkName = 'Time_Logs'\n\ttarget = 'popup'\n\tcolor = '#FFFFFF'\n\tsize = '16px'\n\tuppercase = 'false' \n\tunderline = 'false' \n\tbold = 'false' \n\titalic = 'false' \n\ttext ='Submit Daily Time Logs'\n\t\ttype = 'flat'\n\t\tbgColor = '#00D9B1'\n\t\tcornerRadius = '3px' \n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"50%\"\n   \t>\n\t<panel \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n\t\tvAlign = 'middle'\n>\n\t<button \n\t\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\n    action = 'OpenForm'\n\tcomponentLinkName = 'Add_weekly_Logs'\n\ttarget = 'popup'\n\tcolor = '#FFFFFF'\n\tsize = '16px'\n\tuppercase = 'false' \n\tunderline = 'false' \n\tbold = 'false' \n\titalic = 'false' \n\ttext ='Submit Weekly Time Logs'\n\t\ttype = 'flat'\n\t\tbgColor = '#00D9B1'\n\t\tcornerRadius = '3px' \n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<report \n\t\n\timportedTemplate = 'false'\n\tappLinkName = 'thisapp'\n\tlinkName = 'My_Logs'\n\tallowPublicAccess = 'false'\n\tisCompPublished = 'false'\n\theightType = 'auto'\n\theightValue = '700'\n\tiszreport = 'false'\n            zc_Footer = 'true'\n            zc_AddRec = 'false'\n            zc_EditRec = 'true'\n            zc_Print = 'true'\n            zc_Export = 'true'\n            zc_DelRec = 'true'\n            zc_DuplRec = 'false'\n            zc_Search = 'true'\n\/>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<report \n\t\n\timportedTemplate = 'false'\n\tappLinkName = 'thisapp'\n\tlinkName = 'Send_Back_Review'\n\tallowPublicAccess = 'false'\n\tisCompPublished = 'false'\n\theightType = 'auto'\n\theightValue = '700'\n\tiszreport = 'false'\n            zc_Footer = 'true'\n            zc_AddRec = 'false'\n            zc_EditRec = 'true'\n            zc_Print = 'true'\n            zc_Export = 'true'\n            zc_DelRec = 'false'\n            zc_DuplRec = 'false'\n            zc_Search = 'true'\n\/>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<report \n\t\n\timportedTemplate = 'false'\n\tappLinkName = 'thisapp'\n\tlinkName = 'List_Of_Approved'\n\tallowPublicAccess = 'false'\n\tisCompPublished = 'false'\n\theightType = 'auto'\n\theightValue = '700'\n\tiszreport = 'false'\n            zc_Footer = 'true'\n            zc_AddRec = 'false'\n            zc_EditRec = 'false'\n            zc_Print = 'true'\n            zc_Export = 'true'\n            zc_DelRec = 'false'\n            zc_DuplRec = 'false'\n            zc_Search = 'true'\n\/>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
		default list All_Holidays
		{
			displayName = "All Holidays"
   			hide = true
			show all rows from Add_Holiday    
			(
				Name as "Holiday Name"
				Start_Date as "Start Date"
				Description
				Holiday_Type as "Holiday Type"
			)
			sort by
			(
				Start_Date ascending
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Name as "Holiday Name"
							Start_Date as "Start Date"
							Holiday_Type as "Holiday Type"
							Description
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Name as "Holiday Name"
							Start_Date as "Start Date"
							Holiday_Type as "Holiday Type"
							Description
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
				 page Leaves 
	 	 { 
 	 	 displayname = "Leaves"

 	 	 icon = "arrows-4-format-right" 
	 	 Content="<zml    \n\t\t\tisPdfEnabled='false'\n\t\t\n\t\t\tisPrintEnabled='false'\n\t\t\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<panel \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpaddingTop = '17px'\n\tpaddingLeft = '17px'\n\tpaddingRight = '17px'\n\tpaddingBottom = '0px'\n\tbgColor = 'transparent'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#00D9B1'\n\tsize = '24px'\n\tuppercase = 'false' \n\tunderline = 'false' \n\tbold = 'true' \n\titalic = 'false' \n\ttype = 'Text'\n\tbgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n\t  \n\t  value = 'Leave Tracker'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\n\t\twidth = '100%'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\tpadding = '5px'\n\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<image  \n\t\n\tcolor = '#FFFFFF'\n\tbgColor = 'transparent'\n\twidth = '104px'\n\theight = '105px'\n\ttype = 'weburl'\n\tvalue = 'https:\/\/www.purelytracking.com\/images\/monitor-emplaoyee-icon.png'\n\tcornerRadius = '26px'\n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<panel \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n\t\tvAlign = 'middle'\n>\n\t<button \n\t\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\n    action = 'OpenForm'\n\tcomponentLinkName = 'Apply_Leave'\n\ttarget = 'popup'\n\tcolor = '#FFFFFF'\n\tsize = '16px'\n\tuppercase = 'false' \n\tunderline = 'false' \n\tbold = 'false' \n\titalic = 'false' \n\ttext ='Apply Leave'\n\t\ttype = 'flat'\n\t\tbgColor = '#00D9B1'\n\t\tcornerRadius = '3px' \n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<report \n\t\n\t\n\ttitle = 'Leaves Pending Approvals'\n\t\n\t\ttitleSize = '20px'\n\t\t    italicTitle = 'false'\n            boldTitle = 'false'\n\timportedTemplate = 'false'\n\tappLinkName = 'thisapp'\n\tlinkName = 'Leave_Approvals'\n\tallowPublicAccess = 'false'\n\tisCompPublished = 'false'\n\theightType = 'auto'\n\theightValue = '700'\n\tiszreport = 'false'\n            zc_Footer = 'true'\n            zc_AddRec = 'true'\n            zc_EditRec = 'true'\n            zc_Print = 'true'\n            zc_Export = 'true'\n            zc_DelRec = 'true'\n            zc_DuplRec = 'true'\n            zc_Search = 'true'\n\/>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<report \n\t\n\t\n\ttitle = 'Approved Leaves'\n\t\n\t\ttitleSize = '20px'\n\t\t    italicTitle = 'false'\n            boldTitle = 'false'\n\timportedTemplate = 'false'\n\tappLinkName = 'thisapp'\n\tlinkName = 'Approved_Leaves'\n\tallowPublicAccess = 'false'\n\tisCompPublished = 'false'\n\theightType = 'auto'\n\theightValue = '700'\n\tiszreport = 'false'\n            zc_Footer = 'true'\n            zc_AddRec = 'false'\n            zc_EditRec = 'false'\n            zc_Print = 'true'\n            zc_Export = 'true'\n            zc_DelRec = 'false'\n            zc_DuplRec = 'false'\n            zc_Search = 'true'\n\/>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
		default list All_Time_Logs
		{
			displayName = "All Time Logs"
			show all rows from Time_Logs    
			(
				Task
				Description
				Date_field as "Date"
				Track_as as "Track as"
				Status
				users as "Submitted By"
				Status1 as "Status"
				Job_Name as "Job Name"
				Clock_In.Job_Name as "Clock-In"
				Date_Range as "Date Range"
				Job_Name.users as "Users"
				Employee_Email as "Employee Email"
				Log_Type as "Log Type"
				From_Time as "Start Time"
				End_Time1 as "End Time"
				Hours
			)
			filters
			(
				Status1
				"Pending Approvals"  :  Status1 == "Submitted"
				"Pending Corrections"  :  Status1 == "Corrections"
				"Approved Logs"  :  Status1 == "Approved"
			)
			group by
			(
				Date_Range ascending
				users ascending
			)
			sort by
			(
				Date_field ascending
			)
			options
			(
				icon = "design-2-selection"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Date_field as "Date"
							users as "Submitted By"
							Task
							From_Time as "Start Time"
							End_Time1 as "End Time"
							Hours
							Status1 as "Status"
							Job_Name as "Job Name"
							Clock_In.Job_Name as "Clock-In"
							Job_Name.users as "Users"
							Log_Type as "Log Type"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Employee_Email as "Employee Email"
							users as "Submitted By"
							Task
							Description
							Date_field as "Date"
							Track_as as "Track as"
							Status
							From_Time as "Start Time"
							End_Time1 as "End Time"
							Hours
						)
					)
					datablock2
					(
			 			layout type = -1
		     			title = "Clock-In"
		     			related field = Clock_In
						fields
						(
							Job_Name as "Job Name"
							Task_Name as "Task Name"
							Description
							Start_Time as "Start Time"
							Time_Logs_Id.Added_User as "User"
							Added_Location as "Location By"
						)
					)
					datablock3
					(
			 			layout type = -1
		     			title = "Clock-Out"
		     			related field = Clock_Out
						fields
						(
							Job_Name as "Job Name"
							Task_Name as "Task Name"
							Description
							End_Time as "End Time"
							Job_Name.Added_User as "User"
							Added_Location as "Location By"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list TimeLog_Approvals
		{
			displayName = "TimeLog Approvals"
   			hide = true
			show all rows from Time_Logs  [Status1 == "Pending Approval" && Log_Type == "Weekly Logs" && Employee_Email.Owners_Email == zoho.loginuserid && Emp_email != zoho.loginuserid && Employee_Email.Role != "Admin" && Employee_Email.Role != "Owner" && Approver_Emails == zoho.loginuserid]  
			(
				Task
				Description
				Date_field as "Date"
				(
					displayformat = fulldate
				)
				Track_as as "Track as"
				Hours1 as "Hours"
				Status
				Add_weekly_Logs as "Add weekly Logs"
				users as "Submitted By"
				Job_Name as "Job Name"
				Date_Range as "Date Range"
				custom action "Approve"
				(
	  			workflow = Approve
				show action in view header = true
				show action in edit record menu = true
				column header = "Approve"
				condition = (Status1 == "Pending Approval")
				)
				custom action "Send Back For Review"
				(
	  			workflow = Send_Back_Review
				show action in view header = true
				show action in edit record menu = true
				column header = "Send Back For Review"
				condition = (Status1 == "Pending Approval")
				)
				Employee_Email.First_Name as "First Name"
			)
			group by
			(
				Date_Range ascending
				users ascending
			)
			sort by
			(
				Date_field ascending
			)
			options
			(
				icon = "ui-2-hourglass"
	 		)
			quickview
			(
				layout
				(
		 			customlayouts
	     			(
		 				template
		 				(
		 	  				displayname="Custom Layout 1"
		 	  				content="<panel \n >\n	<pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		padding = '0px'\n	bgColor = '#FFFFFF'\n\n		width = '100%'\n		hAlign = 'center'\n		vAlign = 'middle'\n>\n	<pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		paddingTop = '0px'\n	paddingLeft = '17px'\n	paddingRight = '17px'\n	paddingBottom = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '24%'\n		hAlign = 'left'\n		vAlign = 'top'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '12px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '16'\n      	  numOfLines = '1'\n	  value = 'Employee_Email.First_Name'\n>\n</text>\n\n</pc>\n</pr>\n</pc><pc \n		paddingTop = '0px'\n	paddingLeft = '17px'\n	paddingRight = '17px'\n	paddingBottom = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '25%'\n		hAlign = 'left'\n		vAlign = 'top'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '12px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '18'\n      	  numOfLines = '1'\n	  value = 'Date_field'\n>\n</text>\n\n</pc>\n</pr>\n</pc><pc \n		paddingTop = '0px'\n	paddingLeft = '0px'\n	paddingRight = '17px'\n	paddingBottom = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '24%'\n		hAlign = 'left'\n		vAlign = 'top'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '12px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '18'\n      	  numOfLines = '1'\n	  value = 'Task'\n>\n</text>\n\n</pc>\n</pr>\n</pc><pc \n		paddingTop = '0px'\n	paddingLeft = '0px'\n	paddingRight = '17px'\n	paddingBottom = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '27%'\n		hAlign = 'left'\n		vAlign = 'top'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '12px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '18'\n      	  numOfLines = '1'\n	  value = 'Hours1'\n>\n</text>\n\n</pc>\n</pr>\n</pc>\n</pr>\n</pc>\n</pr>\n</panel>"
		    			)
	     			)
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
				"Approve"
				"Send Back For Review"
							Date_field as "Date"
							users as "Submitted By"
							Task
							Job_Name as "Job Name"
							Hours1 as "Hours"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Duplicate   	   
								Delete   	   
								Edit   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Task
							Description
							Date_field as "Date"
							Track_as as "Track as"
							Hours1 as "Hours"
							Status
							Add_weekly_Logs as "Add weekly Logs"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
			 			"Approve"
			 			"Send Back For Review"
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list List_Of_Approved
		{
			displayName = "Time Logs Approved"
   			hide = true
			show all rows from Time_Logs  [Status1 == "Approved" && Employee_Email.Email_address == zoho.loginuserid]  
			(
				users as "Users"
				Task
				Description
				Date_field as "Date"
				(
					displayformat = fulldate
				)
				Track_as as "Track as"
				Hours1 as "Hours"
				Status
				Date_Range as "Date Range"
				Job_Name as "Job Name"
			)
			group by
			(
				Date_Range ascending
			)
			sort by
			(
				Date_field ascending
			)
			options
			(
				icon = "users-2-a-time"
	 		)
			quickview
			(
				layout
				(
		 			customlayouts
	     			(
		 				template
		 				(
		 	  				displayname="Custom Layout 1"
		 	  				content="<panel \n >\n	<pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		bgColor = '#FFFFFF'\n\n		width = '100%'\n		hAlign = 'left'\n		vAlign = 'middle'\n>\n	<pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		paddingTop = '17px'\n	paddingLeft = '17px'\n	paddingRight = '0px'\n	paddingBottom = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '26%'\n		hAlign = 'left'\n		vAlign = 'middle'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '12px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '18'\n      	  numOfLines = '1'\n	  value = 'Date_field'\n>\n</text>\n\n</pc>\n</pr>\n</pc><pc \n		padding = '17px'\n	bgColor = 'transparent'\n\n		width = '53%'\n		hAlign = 'center'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '12px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '18'\n      	  numOfLines = '1'\n	  value = 'Task'\n>\n</text>\n\n</pc>\n</pr>\n</pc><pc \n		padding = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '21%'\n		hAlign = 'left'\n		vAlign = 'middle'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '12px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '18'\n      	  numOfLines = '1'\n	  value = 'Hours1'\n>\n</text>\n\n</pc>\n</pr>\n</pc>\n</pr>\n</pc>\n</pr>\n</panel>"
		    			)
	     			)
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							users as "Users"
							Task
							Description
							Date_field as "Date"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    	 			)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							users as "Users"
							Job_Name as "Job Name"
							Task
							Description
							Date_field as "Date"
							Track_as as "Track as"
							Hours1 as "Hours"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    	 			)
    			)
			)
		}
		list Rejected_List
		{
			displayName = "List Of Rejected"
   			hide = true
			show all rows from Time_Logs  [Status1 == "Rejected"]  
			(
				users as "Users"
				Task
				Description
				Date_field as "Date"
				Track_as as "Track as"
				Hours1 as "Hours"
				Status
				Log_Time_Id as "Log Time Id"
				Add_weekly_Logs as "Add weekly Logs"
			)
			options
			(
				icon = "shopping-receipt-list-43"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							users as "Users"
							Task
							Description
							Date_field as "Date"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    	 			)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							users as "Users"
							Task
							Description
							Date_field as "Date"
							Track_as as "Track as"
							Hours1 as "Hours"
							Status
							Log_Time_Id as "Log Time Id"
							Add_weekly_Logs as "Add weekly Logs"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Send_Back_Review
		{
			displayName = "Time Logs For Corrections"
   			hide = true
			show all rows from Time_Logs  [Status1 == "Corrections" && Employee_Email.Email_address == zoho.loginuserid]  
			(
				users as "Users"
				Task
				Description
				Date_field as "Date"
				(
					displayformat = fulldate
				)
				Track_as as "Track as"
				Hours1 as "Hours"
				Status
				Log_Time_Id as "Log Time Id"
				Add_weekly_Logs as "Add weekly Logs"
				Date_Range as "Date Range"
				Job_Name as "Job Name"
			)
			group by
			(
				Date_Range ascending
			)
			sort by
			(
				Date_field ascending
			)
			options
			(
				icon = "users-2-a-time"
	 		)
			quickview
			(
				layout
				(
		 			customlayouts
	     			(
		 				template
		 				(
		 	  				displayname="Custom Layout 1"
		 	  				content="<panel \n >\n	<pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		bgColor = '#FFFFFF'\n\n		width = '100%'\n		hAlign = 'left'\n		vAlign = 'middle'\n>\n	<pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		paddingTop = '0px'\n	paddingLeft = '17px'\n	paddingRight = '0px'\n	paddingBottom = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '34%'\n		hAlign = 'left'\n		vAlign = 'middle'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '12px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '18'\n      	  numOfLines = '1'\n	  value = 'Date_field'\n>\n</text>\n\n</pc>\n</pr>\n</pc><pc \n		paddingTop = '0px'\n	paddingLeft = '17px'\n	paddingRight = '0px'\n	paddingBottom = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '43%'\n		hAlign = 'left'\n		vAlign = 'middle'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '12px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '18'\n      	  numOfLines = '1'\n	  value = 'Task'\n>\n</text>\n\n</pc>\n</pr>\n</pc><pc \n		paddingTop = '0px'\n	paddingLeft = '0px'\n	paddingRight = '17px'\n	paddingBottom = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '23%'\n		hAlign = 'left'\n		vAlign = 'middle'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '12px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '18'\n      	  numOfLines = '1'\n	  value = 'Hours1'\n>\n</text>\n\n</pc>\n</pr>\n</pc>\n</pr>\n</pc>\n</pr>\n</panel>"
		    			)
	     			)
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							users as "Users"
							Task
							Description
							Date_field as "Date"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							users as "Users"
							Task
							Description
							Date_field as "Date"
							Track_as as "Track as"
							Hours1 as "Hours"
							Status
							Log_Time_Id as "Log Time Id"
							Add_weekly_Logs as "Add weekly Logs"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    	 			)
    			)
			)
		}
		list My_Logs
		{
			displayName = "My Time Logs"
   			hide = true
			show all rows from Time_Logs  [Employee_Email.Email_address == zoho.loginuserid && Status1 != "Approved" && Status1 != "Corrections"]  
			(
				users as "Submitted By"
				Task
				Description
				Date_field as "Date"
				(
					displayformat = fulldate
				)
				Track_as as "Track as"
				Hours1 as "Hours"
				Status
				Job_Name as "Job Name"
				Date_Range as "Date Range"
				Employee_Email as "Employee Email"
				Hours
				Status1 as "Status"
				Log_Type as "Log Type"
				From_Time as "Start Time"
				End_Time1 as "End Time"
			)
			group by
			(
				Date_Range ascending
			)
			sort by
			(
				Date_field ascending
			)
			options
			(
				icon = "users-2-a-time"
	 		)
			quickview
			(
				layout
				(
		 			customlayouts
	     			(
		 				template
		 				(
		 	  				displayname="Custom Layout 1"
		 	  				content="<panel \n >\n	<pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		bgColor = '#FFFFFF'\n\n		width = '100%'\n		hAlign = 'center'\n		vAlign = 'middle'\n>\n	<pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		paddingTop = '0px'\n	paddingLeft = '17px'\n	paddingRight = '0px'\n	paddingBottom = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '29%'\n		hAlign = 'left'\n		vAlign = 'middle'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '12px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '18'\n      	  numOfLines = '1'\n	  value = 'Date_field'\n>\n</text>\n\n</pc>\n</pr>\n</pc><pc \n		paddingTop = '0px'\n	paddingLeft = '17px'\n	paddingRight = '0px'\n	paddingBottom = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '47%'\n		hAlign = 'center'\n		vAlign = 'middle'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '12px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '18'\n      	  numOfLines = '1'\n	  value = 'Task'\n>\n</text>\n\n</pc>\n</pr>\n</pc><pc \n		paddingTop = '0px'\n	paddingLeft = '17px'\n	paddingRight = '0px'\n	paddingBottom = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '24%'\n		hAlign = 'left'\n		vAlign = 'middle'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '12px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '18'\n      	  numOfLines = '1'\n	  value = 'Hours1'\n>\n</text>\n\n</pc>\n</pr>\n</pc>\n</pr>\n</pc>\n</pr>\n</panel>"
		    			)
	     			)
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Date_field as "Date"
							users as "Submitted By"
							Job_Name as "Job Name"
							Task
							Description
							From_Time as "Start Time"
							End_Time1 as "End Time"
							Hours
							Status1 as "Status"
							Log_Type as "Log Type"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							users as "Submitted By"
							Employee_Email as "Employee Email"
							Job_Name as "Job Name"
							Task
							Description
							Date_field as "Date"
							Track_as as "Track as"
							Hours1 as "Hours"
							Status
							Hours
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Approved_Leaves
		{
			displayName = "Approved Leaves"
   			hide = true
			show all rows from Apply_Leave  [Status == "Approved" && Employee1 == zoho.loginuser]  
			(
				Type
				Date_field as "Date"
				Leave_Type as "Leave Type"
				Form_Date as "Form Date"
				To_Date as "To Date"
				Reason_for_leave as "Leave Description"
				Status
				Added_User as "Added User"
				Total_Day_s as "Total Day(s)"
			)
			group by
			(
				Added_User ascending
			)
			options
			(
				icon = "objects-leaf-38"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Type
							Date_field as "Date"
							Leave_Type as "Leave Type"
							Form_Date as "Form Date"
							To_Date as "To Date"
							Total_Day_s as "Total Day(s)"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Type
							Date_field as "Date"
							Leave_Type as "Leave Type"
							Form_Date as "Form Date"
							To_Date as "To Date"
							Total_Day_s as "Total Day(s)"
							Reason_for_leave as "Leave Description"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    	 			)
    			)
			)
		}
		list Leave_Approvals
		{
			displayName = "My Leaves"
   			hide = true
			show all rows from Apply_Leave  [Status == "Draft" && Employee1 == zoho.loginuser]  
			(
				Employee1 as "Employee"
				Type
				Date_field as "Date Requested"
				Form_Date as "Form Date"
				To_Date as "To Date"
				Leave_Type as "Leave Type"
				Reason_for_leave as "Leave Description"
				Status
				Total_Day_s as "Total Day(s)"
			)
			options
			(
				icon = "objects-leaf-38"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Employee1 as "Employee"
							Type
							Form_Date as "Form Date"
							To_Date as "To Date"
							Total_Day_s as "Total Day(s)"
							Leave_Type as "Leave Type"
							Date_field as "Date Requested"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Employee1 as "Employee"
							Type
							Date_field as "Date Requested"
							Form_Date as "Form Date"
							To_Date as "To Date"
							Total_Day_s as "Total Day(s)"
							Leave_Type as "Leave Type"
							Reason_for_leave as "Leave Description"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Crews
	{
		icon = "users-2-wc"
		form Add_Crew
		{
			displayname = "Add Crew"
			success message = "Crew Added Successfully"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Crew_Name
			(
				type = picklist
				displayname = "Crew Name"
				maxchar = 100
				values = {"UTC 1", "UTC 2", "UTC 3"}
				others option = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			SuperIntendent
			(
				type = picklist	
				values  = Add_Employee.ID
    			displayformat = [First_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Crew_Lead
			(
				type = picklist	
				displayname = "Crew Lead"
				values  = Add_Employee.ID
    			displayformat = [First_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Crew_Members
			(
				type = list	
				displayname = "Crew Members"
				values  = Add_Employee.ID
    			displayformat = [First_Name]
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "tech-2-p-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list Crews_History
		{
			displayName = "Crews History"
   			hide = true
			show all rows from Add_Crew    
			(
				Crew_Name as "Crew Name"
				SuperIntendent
				Crew_Lead as "Crew Lead"
				Crew_Members as "Crew Members"
				SuperIntendent.Modified_Time as "Modified Time"
			)
			options
			(
				icon = "tech-laptop"
	 		)
			conditional formatting
			(
				"Modify Time"
				{
				fields = [SuperIntendent.Modified_Time]
				format = "font-weight:bold;color:#ffffff;background-color:#4ea64c;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Crew_Name as "Crew Name"
							SuperIntendent
							Crew_Lead as "Crew Lead"
							Crew_Members as "Crew Members"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    	 			)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Crew_Name as "Crew Name"
							SuperIntendent
							Crew_Lead as "Crew Lead"
							Crew_Members as "Crew Members"
							SuperIntendent.Modified_Time as "Modified Time"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Delete 
    	 			)
    			)
			)
		}
		default spreadsheet All_Crews
		{
			displayName = "All Crews"
			show all rows from Add_Crew    
			(
				Crew_Name as "Crew Name"
				SuperIntendent
				Crew_Lead as "Crew Lead"
				Crew_Members as "Crew Members"
			)
			sort by
			(
				Crew_Name ascending
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			customlayouts
	     			(
		 				template
		 				(
		 	  				displayname="Custom Layout 1"
		 	  				content="<panel \n >\n	<pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		bgColor = '#FFFFFF'\n\n		width = '100%'\n		hAlign = 'center'\n		vAlign = 'middle'\n>\n	<pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		padding = '17px'\n\n		width = '100%'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '20px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'true' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '27'\n      	  numOfLines = '1'\n	  value = 'Crew_Name'\n>\n</text>\n\n</pc>\n</pr>\n</pc>\n</pr><pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		paddingTop = '0px'\n	paddingLeft = '17px'\n	paddingRight = '17px'\n	paddingBottom = '17px'\n	bgColor = 'transparent'\n\n		width = '100%'\n		hAlign = 'center'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '15px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'true' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '23'\n      	  numOfLines = '1'\n	  value = 'None'\n>\n</text>\n\n</pc>\n</pr>\n</pc>\n</pr><pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		paddingTop = '0px'\n	paddingLeft = '17px'\n	paddingRight = '17px'\n	paddingBottom = '17px'\n	bgColor = 'transparent'\n\n		width = '100%'\n		hAlign = 'center'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '16px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '24'\n      	  numOfLines = '1'\n	  value = 'None'\n>\n</text>\n\n</pc>\n</pr>\n</pc>\n</pr><pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		paddingTop = '0px'\n	paddingLeft = '17px'\n	paddingRight = '17px'\n	paddingBottom = '17px'\n	bgColor = 'transparent'\n\n		width = '100%'\n		hAlign = 'center'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '16px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '24'\n      	  numOfLines = '3'\n	  value = 'None'\n>\n</text>\n\n</pc>\n</pr>\n</pc>\n</pr>\n</pc>\n</pr>\n</panel>"
		    			)
	     			)
		 			type = -5
					datablock1
					(
			 			layout type = -5
						fields
						(
							Crew_Name as "Crew Name"
							SuperIntendent
							Crew_Lead as "Crew Lead"
							Crew_Members as "Crew Members"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Crew_Name as "Crew Name"
							SuperIntendent
							Crew_Lead as "Crew Lead"
							Crew_Members as "Crew Members"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		default list Crew_Histories
		{
			displayName = "Crew History"
			show all rows from Crew_History    
			(
				Added_Time as "Added Time"
				Crew_Name as "Crew Name"
				SuperIntendent
				Crew_Lead as "Crew Lead"
				Crew_Members as "Crew Members"
			)
			group by
			(
				Added_Time descending
			)
			sort by
			(
				Added_Time descending
			)
			options
			(
				icon = "tech-2-l-search"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Crew_Name as "Crew Name"
							SuperIntendent
							Crew_Lead as "Crew Lead"
							Crew_Members as "Crew Members"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Crew_Name as "Crew Name"
							SuperIntendent
							Crew_Lead as "Crew Lead"
							Crew_Members as "Crew Members"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Employee_Profile
	{
		displayname= "Employee Profile"
		icon = "users-single-04"
		form Add_Employee
		{
			displayname = "Add Employee"
			success message = "Employee Added Successfully!"
			field alignment = left
					hide = true
			Basic_information
			(
				type = section
				displayname = "Basic information"
				visibility = true
	 			row = 1
	 			column = 0   
				width = medium
			)
			Profile_Picture
			(
    			type = image
				displayname = "Profile Picture"
				source  = file,camera
				aspect ratio = original
				camera = primary
				show gallery = true
				switch camera = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			Employee_ID
			(
    			type = text
				displayname = "Employee ID"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have First_Name
			(
    			type = text
				displayname = "First Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Email_address
			(
    			type = email
				displayname = "Email address"
				maxchar = 80
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			Nick_Name
			(
    			type = text
				displayname = "Nick Name"
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have Last_Name
			(
    			type = text
				displayname = "Last Name"
	 			row = 1
	 			column = 2   
				width = medium
			)
			users
			(
    			type = picklist
				displayname = "Users"
				module = users
				displayformat = [username]
	 			row = 1
	 			column = 2   
				width = medium
				personal data = true
			)
			Work_Information
			(
				type = section
				displayname = "Work Information"
				visibility = true
	 			row = 2
	 			column = 0   
				width = medium
			)
			Department
			(
				type = picklist	
				values  = Add_Department.ID
    			displayformat = [Department_Name]
				allow new entries = true
				[
					displayname = "Add New"
				]
				sortorder = ascending
	 			row = 2
	 			column = 1   
				width = medium
			)
			Location
			(
    			type = text
	 			row = 2
	 			column = 1   
				width = medium
			)
			Designation
			(
				type = picklist	
				values  = Add_Designation.ID
    			displayformat = [Designation_Name]
				allow new entries = true
				[
					displayname = "Add New"
				]
				sortorder = ascending
	 			row = 2
	 			column = 1   
				width = medium
			)
			Role
			(
				type = picklist
				maxchar = 100
				values = {"Admin", "Owner", "Super Intendant", "Crew Lead", "Crew Member"}
				others option = true
	 			row = 2
	 			column = 2   
				width = medium
			)
			Employment_Type
			(
				type = picklist
				displayname = "Employment Type"
				maxchar = 100
				values = {"Permanent", "On Contract", "Temporary", "Trainee"}
				others option = true
	 			row = 2
	 			column = 2   
				width = medium
			)
			Employee_Status
			(
				type = picklist
				displayname = "Employee Status"
				maxchar = 100
				values = {"Active"}
				others option = true
	 			row = 2
	 			column = 2   
				width = medium
			)
			Source_of_Hire
			(
				type = picklist
				displayname = "Source of Hire"
				maxchar = 100
				values = {"Direct", "Referral", "Web", "Newspaper", "Advertisement"}
				others option = true
	 			row = 2
	 			column = 2   
				width = medium
			)
			Date_of_Joining
			(
    			type = date
				displayname = "Date of Joining"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 2
	 			column = 2   
				width = medium
			)
			Current_Experience
			(
    			type = text
				displayname = "Department"
	 			row = 2
	 			column = 2   
				width = medium
			)
			Personal_Details
			(
				type = section
				displayname = "Personal Details"
				visibility = true
	 			row = 3
	 			column = 0   
				width = medium
			)
			Date_of_Birth
			(
    			type = date
				displayname = "Date of Birth"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 3
	 			column = 1   
				width = medium
			)
			Age
			(
				type = number
	 			row = 3
	 			column = 1   
				width = medium
			)
			Gender
			(
				type = picklist
				maxchar = 100
				values = {"Male", "Female", "Other"}
	 			row = 3
	 			column = 1   
				width = medium
			)
			Marital_Status
			(
				type = radiobuttons
				displayname = "Marital Status"
				maxchar = 100
				values = {"Single", "Married"}
	 			row = 3
	 			column = 1   
				width = medium
			)
			About_Me
			(
    			type = textarea
				displayname = "About Me"
				height = 100px
	 			row = 3
	 			column = 1   
				width = medium
			)
			Ask_me_about_Expertise
			(
    			type = textarea
				displayname = "Ask me about/Expertise"
				height = 100px
	 			row = 3
	 			column = 2   
				width = medium
			)
			Identity_Information
			(
				type = section
				displayname = "Identity Information"
				visibility = true
	 			row = 4
	 			column = 0   
				width = medium
			)
			NI_number
			(
    			type = text
				displayname = "NI Number"
	 			row = 4
	 			column = 1   
				width = medium
			)
			SSN
			(
    			type = text
	 			row = 4
	 			column = 1   
				width = medium
			)
			Contact_Details
			(
				type = section
				displayname = "Contact Details"
				visibility = true
	 			row = 5
	 			column = 0   
				width = medium
			)
			Work_Phone_Number
			(
    			type = phonenumber
				displayname = "Work Phone Number"
	 			row = 5
	 			column = 1   
				width = medium
				personal data = true
			)
			Extension
			(
    			type = text
	 			row = 5
	 			column = 1   
				width = medium
			)
			Seating_Location
			(
    			type = text
				displayname = "Seating Location"
	 			row = 5
	 			column = 1   
				width = medium
			)
			Present_Address
			(
    			type = address
				displayname = "Present Address"
     			capture_coordinates = true
     			adjust_using_map = false
     			address_line_1
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_2
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 5
	 			column = 1   
				width = medium
				personal data = true
			)
			Tags
			(
    			type = textarea
				height = 100px
	 			row = 5
	 			column = 1   
				width = medium
			)
			Phone_Number
			(
    			type = phonenumber
				displayname = "Phone"
	 			row = 5
	 			column = 2   
				width = medium
				personal data = true
			)
			Personal_Email_Address
			(
    			type = email
				displayname = "Personal Email Address"
				maxchar = 80
	 			row = 5
	 			column = 2   
				width = medium
				personal data = true
			)
			Same_as_Present_Address
			(
    			type = checkbox
				displayname = "Same as Present Address"
				initial value = false
	 			row = 5
	 			column = 2   
				width = medium
			)
			Permanent_Address
			(
    			type = address
				displayname = "Permanent Address"
     			capture_coordinates = true
     			adjust_using_map = false
     			address_line_11
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_21
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city1
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province1
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code1
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country1
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude1
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude1
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 5
	 			column = 2   
				width = medium
				personal data = true
			)
			Separation_Information
			(
				type = section
				displayname = "Separation Information"
				visibility = true
	 			row = 6
	 			column = 0   
				width = medium
			)
			Date_of_Exit
			(
    			type = date
				displayname = "Date of Exit"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 6
	 			column = 1   
				width = medium
			)
			Work_Experience
			(
				type = grid
				displayname = "Work Experience"
				values  = Work_Experience.ID
    			bidirectional = Employee_ID
	 			row = 7
	 			column = 1   
				width = medium
			)
			Education_Details
			(
				type = grid
				displayname = "Education Details"
				values  = Education_Details.ID
    			bidirectional = Employee_ID
	 			row = 8
	 			column = 1   
				width = medium
			)
			Dependent_Details
			(
				type = grid
				displayname = "Dependent Details"
				values  = Dependent_Details.ID
    			bidirectional = Employee_ID
	 			row = 9
	 			column = 1   
				width = medium
			)
			Admin
			(
				type = section
				visibility = true
	 			row = 10
	 			column = 0   
				width = medium
			)
			Employee_Status1
			(
				type = radiobuttons
				displayname = "Employee Status"
				maxchar = 100
				values = {"Active", "In Active"}
	 			row = 10
	 			column = 1   
				width = medium
			)
			FSM_Access
			(
    			type = checkbox
				displayname = "FSM Access"
				initial value = false
	 			row = 10
	 			column = 1   
				width = medium
			)
			Section
			(
				type = section
	 			row = 11
	 			column = 0   
				width = medium
			)
			Approvers
			(
				type = section
				visibility = true
	 			row = 12
	 			column = 0   
				width = medium
			)
			TimeLog_Approvers
			(
				type = list	
				displayname = "TimeLog Approvers"
				values  = Add_Employee.ID
    			displayformat = [Email_address]
				sortorder = ascending
				height = 60px
	 			row = 12
	 			column = 1   
				width = medium
			)
			Leave_Approvers
			(
				type = list	
				displayname = "Leave Approvers"
				values  = Add_Employee.ID
    			displayformat = [Email_address]
				sortorder = ascending
				height = 60px
	 			row = 12
	 			column = 1   
				width = medium
			)
			Owners_Email
			(
				type = list	
				displayname = "Owners Email"
				values = {"Choice 1", "porter@lifetimeepoxyutah.com", "info@lifetimeepoxyutah.com", "porterbueno@gmail.com"}
				height = 60px
	 			row = 12
	 			column = 1   
				width = medium
			)
			owner
			(
				type = list	
				values  = Add_Employee.ID
    			displayformat = [Email_address]
				sortorder = ascending
				height = 60px
	 			row = 12
	 			column = 1   
				width = medium
			)
			Section1
			(
				type = section
				displayname = "Section"
	 			row = 13
	 			column = 0   
				width = medium
			)
			Status
			(
				type = picklist
				maxchar = 100
				values = {"Open", "Pending"}
	 			row = 13
	 			column = 1   
				width = medium
			)
			Section2
			(
				type = section
				displayname = "Section"
	 			row = 14
	 			column = 0   
				width = medium
			)
	
			customize
			(
				icon = "users-2-a-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default custom All_Employees
		{
			displayName = "All Employees"
			show all rows from Add_Employee    
			(
				Employee_ID as "Employee ID"
				Nick_Name as "Nick Name"
				First_Name as "First Name"
				Last_Name as "Last Name"
				Email_address as "Email address"
				Role
				Employment_Type as "Employment Type"
				Employee_Status as "Employee Status"
				Source_of_Hire as "Source of Hire"
				Date_of_Joining as "Date of Joining"
				Current_Experience as "Department"
				Date_of_Birth as "Date of Birth"
				Age
				Gender
				Ask_me_about_Expertise as "Ask me about/Expertise"
				Marital_Status as "Marital Status"
				About_Me as "About Me"
				NI_number as "NI Number"
				SSN
				Work_Phone_Number as "Work Phone Number"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Phone_Number as "Phone"
				(
					displayformat = formattednumber 
					linktodial = enable
				)
				Extension
				Personal_Email_Address as "Personal Email Address"
				Seating_Location as "Seating Location"
				Tags
				Present_Address  as "Present Address"
	 			(
	      			displayformat = [address_line_1+""+address_line_2+""+district_city+""+state_province+""+postal_Code+""+country]
	      			enable = Link_to_Map,Show_As_Text
	 			)
				Permanent_Address  as "Permanent Address"
	 			(
	      			displayformat = [address_line_11+""+address_line_21+""+district_city1+""+state_province1+""+postal_Code1+""+country1]
	      			enable = Link_to_Map,Show_As_Text
	 			)
				Same_as_Present_Address as "Same as Present Address"
				Date_of_Exit as "Date of Exit"
				Department
				Location
				Designation
				Profile_Picture as "Profile Picture"
				Employee_Status1 as "Employee Status"
				FSM_Access as "FSM Access"
			)
			filters
			(
				Employee_Status1
				Employment_Type
				"Active Employees"  :  Employee_Status1 == "Active"
				"InActive Employees"  :  Employee_Status1 == "In Active"
				"Users with FSM Access"  :  FSM_Access == true
				"Users without FSM Access"  :  FSM_Access == false
			)
			options
			(
				icon = "users-single-04"
	 		)
			quickview
			(
				layout
				(
		 			customlayouts
	     			(
		 				template
		 				(
		 	  				displayname="Custom Layout 1"
		 	  				content="<panel \n >\n	<pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		padding = '20px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '100%'\n		hAlign = 'center'\n		vAlign = 'middle'\n>\n	<pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		padding = '0px'\n\n		width = '100%'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<pr \n	>\n	<pc \n	\n>\n	<image  \n	\n	color = '#FFFFFF'\n	width = '52px'\n	height = '52px'\n	type = 'field'\n	value = 'Profile_Picture'\n	cornerRadius = '26px'\n/>\n</pc>\n</pr><pr \n	>\n	<pc \n	\n>\n	<text \n\n	marginLeft = '0px'\n	marginRight = '0px' \n	marginBottom = '0px'\n	marginTop = '10px'\n	color = '#132437'\n	size = '20px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'true' \n	italic = 'false' \n	type = 'field'\n\n\n\n	  \n      	lineHeight = '29'\n      	  numOfLines = '1'\n	  value = 'First_Name'\n>\n</text>\n\n</pc><pc \n	\n>\n	<text \n\n	marginLeft = '10px'\n	marginBottom = '0px'\n	marginTop = '10px'\n	color = '#000000'\n	size = '20px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'true' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '27'\n      	  numOfLines = '1'\n	  value = 'Last_Name'\n>\n</text>\n\n</pc>\n</pr>\n</pc>\n</pr>\n</pc>\n</pr><pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		paddingTop = '0px'\n	paddingLeft = '0px'\n	paddingRight = '10px'\n	paddingBottom = '0px'\n	bgColor = 'transparent'\n\n		width = '50%'\n		hAlign = 'left'\n		vAlign = 'top'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#C30F7F'\n	size = '15px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '22'\n      	  numOfLines = '1'\n	  value = 'Phone_Number'\n>\n</text>\n\n</pc>\n</pr>\n</pc><pc \n		paddingTop = '0px'\n	paddingLeft = '10px'\n	paddingRight = '0px'\n	paddingBottom = '0px'\n	bgColor = 'transparent'\n\n		width = '50%'\n		hAlign = 'right'\n		vAlign = 'top'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#C30F7F'\n	size = '15px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '22'\n      	  numOfLines = '1'\n	  value = 'Email_address'\n>\n</text>\n\n</pc>\n</pr>\n</pc>\n</pr>\n</pc>\n</pr>\n</panel>"
		    			)
	     			)
		 			type = Custom
		 			selectedlayout = "Custom Layout 1"
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Employee_ID as "Employee ID"
							Nick_Name as "Nick Name"
							First_Name as "First Name"
							Last_Name as "Last Name"
							Phone_Number as "Phone"
							Email_address as "Email address"
							Role
							Employment_Type as "Employment Type"
							Employee_Status as "Employee Status"
							Source_of_Hire as "Source of Hire"
							Date_of_Joining as "Date of Joining"
							Current_Experience as "Department"
							Date_of_Birth as "Date of Birth"
							Age
							Gender
							Ask_me_about_Expertise as "Ask me about/Expertise"
							Marital_Status as "Marital Status"
							About_Me as "About Me"
							NI_number as "NI Number"
							SSN
							Work_Phone_Number as "Work Phone Number"
							Extension
							Personal_Email_Address as "Personal Email Address"
							Seating_Location as "Seating Location"
							Tags
							Present_Address as "Present Address"
							Permanent_Address as "Permanent Address"
							Same_as_Present_Address as "Same as Present Address"
							Date_of_Exit as "Date of Exit"
							Department
							Location
							Designation
							Profile_Picture as "Profile Picture"
							Employee_Status1 as "Employee Status"
							FSM_Access as "FSM Access"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Delete 
    	 			)
    			)
			)
		}
		custom My_Profile
		{
			displayName = "My Profile"
			show all rows from Add_Employee  [Email_address == zoho.loginuserid]  
			(
				Employee_ID as "Employee ID"
				Nick_Name as "Nick Name"
				First_Name as "First Name"
				Last_Name as "Last Name"
				Email_address as "Email address"
				Role
				Employment_Type as "Employment Type"
				Source_of_Hire as "Source of Hire"
				Date_of_Joining as "Date of Joining"
				Current_Experience as "Department"
				Date_of_Birth as "Date of Birth"
				Age
				Gender
				Ask_me_about_Expertise as "Ask me about/Expertise"
				Marital_Status as "Marital Status"
				About_Me as "About Me"
				NI_number as "NI Number"
				SSN
				Work_Phone_Number as "Work Phone Number"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Phone_Number as "Phone"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Extension
				Personal_Email_Address as "Personal Email Address"
				Seating_Location as "Seating Location"
				Tags
				Present_Address  as "Present Address"
	 			(
	      			displayformat = [address_line_1+""+address_line_2+""+district_city+""+state_province+""+postal_Code+""+country]
	      			enable = Link_to_Map,Show_As_Text
	 			)
				Permanent_Address  as "Permanent Address"
	 			(
	      			displayformat = [address_line_11+""+address_line_21+""+district_city1+""+state_province1+""+postal_Code1+""+country1]
	      			enable = Link_to_Map,Show_As_Text
	 			)
				Same_as_Present_Address as "Same as Present Address"
				Date_of_Exit as "Date of Exit"
				Department
				Location
				Designation
				Profile_Picture as "Profile Picture"
				(
			dimension = thumbnail
				)
			)
			options
			(
				icon = "shopping-mobile-touch"
	 		)
			quickview
			(
				layout
				(
		 			customlayouts
	     			(
		 				template
		 				(
		 	  				displayname="Custom Layout 1"
		 	  				content="<panel \n >\n	<pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		bgColor = '#FFFFFF'\n\n		width = '100%'\n		hAlign = 'center'\n		vAlign = 'middle'\n>\n	<pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		padding = '17px'\n\n		width = '100%'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<image  \n	\n	color = '#FFFFFF'\n	width = '110px'\n	height = '110px'\n	type = 'field'\n	value = 'Profile_Picture'\n	cornerRadius = '55px'\n/>\n</pc>\n</pr>\n</pc>\n</pr><pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		paddingTop = '0px'\n	paddingLeft = '17px'\n	paddingRight = '17px'\n	paddingBottom = '17px'\n	bgColor = 'transparent'\n\n		width = '50%'\n		hAlign = 'center'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '20px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'true' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '29'\n      	  numOfLines = '1'\n	  value = 'First_Name'\n>\n</text>\n\n</pc>\n</pr>\n</pc><pc \n		paddingTop = '0px'\n	paddingLeft = '0px'\n	paddingRight = '17px'\n	paddingBottom = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '50%'\n		hAlign = 'center'\n		vAlign = 'middle'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '20px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'true' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '29'\n      	  numOfLines = '1'\n	  value = 'Last_Name'\n>\n</text>\n\n</pc>\n</pr>\n</pc>\n</pr><pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		paddingTop = '17px'\n	paddingLeft = '17px'\n	paddingRight = '0px'\n	paddingBottom = '17px'\n	bgColor = 'transparent'\n\n		width = '50%'\n		hAlign = 'center'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '16px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '24'\n      	  numOfLines = '1'\n	  value = 'Email_address'\n>\n</text>\n\n</pc>\n</pr>\n</pc><pc \n		paddingTop = '0px'\n	paddingLeft = '17px'\n	paddingRight = '17px'\n	paddingBottom = '17px'\n	bgColor = 'transparent'\n\n		width = '50%'\n		hAlign = 'center'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	marginLeft = '0px'\n	marginRight = '0px' \n	marginTop = '10px'\n	color = '#000000'\n	size = '16px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '24'\n      	  numOfLines = '1'\n	  value = 'Phone_Number'\n>\n</text>\n\n</pc>\n</pr>\n</pc>\n</pr>\n</pc>\n</pr>\n</panel>"
		    			)
	     			)
		 			type = Custom
		 			selectedlayout = "Custom Layout 1"
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Profile_Picture as "Profile Picture"
							Employee_ID as "Employee ID"
							Nick_Name as "Nick Name"
							First_Name as "First Name"
							Last_Name as "Last Name"
							Phone_Number as "Phone"
							Email_address as "Email address"
							Role
							Employment_Type as "Employment Type"
							Source_of_Hire as "Source of Hire"
							Date_of_Joining as "Date of Joining"
							Current_Experience as "Department"
							Date_of_Birth as "Date of Birth"
							Age
							Gender
							Ask_me_about_Expertise as "Ask me about/Expertise"
							Marital_Status as "Marital Status"
							About_Me as "About Me"
							NI_number as "NI Number"
							SSN
							Work_Phone_Number as "Work Phone Number"
							Extension
							Personal_Email_Address as "Personal Email Address"
							Seating_Location as "Seating Location"
							Tags
							Present_Address as "Present Address"
							Permanent_Address as "Permanent Address"
							Same_as_Present_Address as "Same as Present Address"
							Date_of_Exit as "Date of Exit"
							Department
							Location
							Designation
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Organization
	{
		icon = "users-2-a-add"
		calendar Employee_Time_Off
		{
			displayName = "Employee Time Off"
   			hide = true
			show all rows from Apply_Leave    
			(
				Type
				Date_field as "Date"
				Form_Date as "Form Date"
				To_Date as "To Date"
				Reason_for_leave as "Leave Description"
			)
			options
			(
				display type = month
				week start day = sunday
				display field = Reason_for_leave
				start date = Form_Date
				end date = To_Date
				default date 
				(
	    			day   = Today
	    			month = Currentmonth
	    			year  = Currentyear
				)
				icon = "users-2-a-time"
			)
			conditional formatting
			(
				"Reason For leave, Employee ID"
				{
				condition = (Reason_for_leave is not null || Employee1 is not null)
				format = "color:#ffffff;background-color:#e84c3d;"
				}
			)
			quickview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = 1
						fields
						(
							Type
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Type
							Date_field as "Date"
							Form_Date as "Form Date"
							To_Date as "To Date"
							Reason_for_leave as "Leave Description"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		calendar Employee_Birthdays
		{
			displayName = "Employee Birthdays"
   			hide = true
			show all rows from Add_Employee    
			(
				Employee_ID as "Employee ID"
				First_Name as "First Name"
				Email_address as "Email address"
				Nick_Name as "Nick Name"
				Last_Name as "Last Name"
				Department
				Location
				Designation
				Role
				Employment_Type as "Employment Type"
				Employee_Status as "Employee Status"
				Source_of_Hire as "Source of Hire"
				Date_of_Joining as "Date of Joining"
				Current_Experience as "Department"
				Date_of_Birth as "Date of Birth"
				Age
				Gender
				Marital_Status as "Marital Status"
				About_Me as "About Me"
				Ask_me_about_Expertise as "Ask me about/Expertise"
				NI_number as "NI Number"
				SSN
				Work_Phone_Number as "Work Phone Number"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Extension
				Seating_Location as "Seating Location"
				Present_Address  as "Present Address"
	 			(
	      			displayformat = [address_line_1+""+address_line_2+""+district_city+""+state_province+""+postal_Code+""+country]
	      			enable = Link_to_Map,Show_As_Text
	 			)
				Tags
				Phone_Number as "Phone"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Personal_Email_Address as "Personal Email Address"
				Same_as_Present_Address as "Same as Present Address"
				Permanent_Address  as "Permanent Address"
	 			(
	      			displayformat = [address_line_11+""+address_line_21+""+district_city1+""+state_province1+""+postal_Code1+""+country1]
	      			enable = Link_to_Map,Show_As_Text
	 			)
				Date_of_Exit as "Date of Exit"
			)
			options
			(
				display type = month
				week start day = sunday
				display field = Date_of_Birth
				start date = Date_of_Birth
				default date 
				(
	    			day   = Today
	    			month = Currentmonth
	    			year  = Currentyear
				)
				icon = "business-business-contact-89"
			)
			quickview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = 1
						fields
						(
							Employee_ID as "Employee ID"
							First_Name as "First Name"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Employee_ID as "Employee ID"
							First_Name as "First Name"
							Email_address as "Email address"
							Nick_Name as "Nick Name"
							Last_Name as "Last Name"
							Department
							Location
							Designation
							Role
							Employment_Type as "Employment Type"
							Employee_Status as "Employee Status"
							Source_of_Hire as "Source of Hire"
							Date_of_Joining as "Date of Joining"
							Current_Experience as "Department"
							Date_of_Birth as "Date of Birth"
							Age
							Gender
							Marital_Status as "Marital Status"
							About_Me as "About Me"
							Ask_me_about_Expertise as "Ask me about/Expertise"
							NI_number as "NI Number"
							SSN
							Work_Phone_Number as "Work Phone Number"
							Extension
							Seating_Location as "Seating Location"
							Present_Address as "Present Address"
							Tags
							Phone_Number as "Phone"
							Personal_Email_Address as "Personal Email Address"
							Same_as_Present_Address as "Same as Present Address"
							Permanent_Address as "Permanent Address"
							Date_of_Exit as "Date of Exit"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		calendar Calendar_View
		{
			displayName = "Org Calander"
   			hide = true
			show all rows from Add_Activities    
			(
				Event_Name as "Event Name"
				Start_Date as "Start Date"
				End_Date as "End Date"
				Description
				Type
				Crew as "Crew Name"
			)
			options
			(
				display type = month
				week start day = sunday
				display field = Event_Name
				start date = Start_Date
				end date = End_Date
				default date 
				(
	    			day   = Today
	    			month = Currentmonth
	    			year  = Currentyear
				)
				icon = "ui-1-calendar-60"
			)
			custom actions
			(
				"Redirect Activities"
				(
	  			workflow = Redirect_Activities
				show action in edit record menu = true
				)
				"Check-In"
				(
	  			workflow = Check_In2
				show action in view header = true
				)
				"Check-Out"
				(
	  			workflow = Check_Out1
				show action in view header = true
				)
			)
			conditional formatting
			(
				"Scheduled Job"
				{
				condition = (Type == "Scheduled Job" && Crew == "UTC 2")
				format = "color:#ffffff;background-color:#765f89;"
				}
				"Bank Holiday's"
				{
				condition = (Type == "Bank Holiday's")
				format = "color:#ffffff;background-color:#38d7bb;"
				}
				"Employee Time Off"
				{
				condition = (Type == "Employee Time Off")
				format = "color:#ffffff;background-color:#11b1cc;"
				}
				"Events"
				{
				condition = (Type == "Event")
				format = "color:#ffffff;background-color:#4ea64c;"
				}
				"Employee Brithday"
				{
				condition = (Type == "Employee Birthday")
				format = "color:#ffffff;background-color:#2f78d0;"
				}
				"UTC 1"
				{
				condition = (Type == "Scheduled Job" && Crew == "UTC 1")
				format = "color:#ffffff;background-color:#e84c3d;"
				}
				"New Formatting"
				{
				condition = (Type == "Scheduled Job" && Crew == "UTC 3")
				format = "color:#ffffff;background-color:#f1c40f;"
				}
				"Task"
				{
				condition = (Type == "Task")
				format = "color:#ffffff;background-color:#ff960d;"
				}
			)
			quickview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = 4
						fields
						(
							Event_Name as "Event Name"
							Crew as "Crew Name"
							Type
							Start_Date as "Start Date"
							End_Date as "End Date"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    	 			)
							record
							(
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								"Redirect Activities"
    						)
							on right click
							(
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Event_Name as "Event Name"
							Start_Date as "Start Date"
							End_Date as "End Date"
							Description
							Type
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
			 			"Check-In"
			 			"Check-Out"
    		 			Delete 
    	 			)
    			)
			)
		}
		form Add_Your_Organization
		{
			displayname = "Add Your Organization"
			success message = "Data Added Successfully!"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Organisation_Name
			(
    			type = text
				displayname = "Organisation Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Website
			(
    			type = url
				enable  linkname
	 			row = 1
	 			column = 1   
				width = medium
			)
			Email
			(
    			type = email
				maxchar = 80
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			Phone_Number
			(
    			type = phonenumber
				displayname = "Phone"
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			Address
			(
    			type = address
     			capture_coordinates = true
     			adjust_using_map = false
     			address_line_1
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_2
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
	
			customize
			(
				icon = "users-2-a-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list Add_Your_Organization_Report
		{
			displayName = "Add Your Organization Report"
   			hide = true
			show all rows from Add_Your_Organization    
			(
				Organisation_Name as "Organisation Name"
				Website
				Email
				Phone_Number as "Phone"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Address 
	 			(
	      			displayformat = [address_line_1+""+address_line_2+""+district_city+""+state_province+""+postal_Code+""+country]
	      			enable = Link_to_Map,Show_As_Text
	 			)
			)
			options
			(
				icon = "users-2-a-add"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Organisation_Name as "Organisation Name"
							Website
							Email
							Phone_Number as "Phone"
							Address
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Organisation_Name as "Organisation Name"
							Website
							Email
							Phone_Number as "Phone"
							Address
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		calendar Bank_Holidays
		{
			displayName = "Bank Holidays"
   			hide = true
			show all rows from Add_Holiday    
			(
				Name as "Holiday Name"
				Start_Date as "Start Date"
				Description
			)
			options
			(
				display type = month
				week start day = sunday
				display field = Name
				start date = Start_Date
				default date 
				(
	    			day   = Today
	    			month = Currentmonth
	    			year  = Currentyear
				)
				icon = "business-bank"
			)
			conditional formatting
			(
				"Holiday's"
				{
				condition = (Name is not null)
				format = "color:#ffffff;background-color:#107c91;"
				}
			)
			quickview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = 1
						fields
						(
							Name as "Holiday Name"
							Start_Date as "Start Date"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Name as "Holiday Name"
							Start_Date as "Start Date"
							Description
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section ToDo_List1
	{
		displayname= "ToDo List"
		icon = "tech-2-p-add"
		default list All_Tasks
		{
			displayName = "All Tasks"
   			hide = true
			show all rows from Add_Task    
			(
				Task_Owner as "Task Owner"
				Task_Name as "Task Name"
				Description
				Priority
				Status
				Assign_to as "Assigned To"
				custom action "Mark As Complete"
				(
	  			workflow = Mark_As_Complete
				show action in edit record menu = true
				column header = "Mark As Complete"
				condition = (Status == "Open")
				)
				Created_By as "Created By"
				End_Date as "End Date"
				Recur_Type as "Recur Type"
				Task_Type as "Task Type"
				Number_of_Weeks as "Frequency (every)"
				Number_of_Month as "Frequency (every)"
				Due_Date1 as "Start Date"
				Due_Date as "Due Date"
			)
			filters
			(
				Status
				"Open Tasks"  :  Status == "Open"
				"In Progress Tasks"  :  Status == "In Progress"
				"Completed Tasks"  :  Status == "Completed"
				"OverDue Tasks"  :  Status == "Overdue"
			)
			sort by
			(
				End_Date ascending
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
				"Mark As Complete"
							Task_Name as "Task Name"
							Due_Date1 as "Start Date"
							End_Date as "End Date"
							Status
							Priority
							Assign_to as "Assigned To"
							Task_Owner as "Task Owner"
							Created_By as "Created By"
							Due_Date as "Due Date"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Task_Owner as "Task Owner"
							Task_Name as "Task Name"
							Description
							Priority
							Status
							Assign_to as "Assigned To"
							Created_By as "Created By"
							End_Date as "End Date"
							Recur_Type as "Recur Type"
							Task_Type as "Task Type"
							Number_of_Weeks as "Frequency (every)"
							Number_of_Month as "Frequency (every)"
							Due_Date1 as "Start Date"
							Due_Date as "Due Date"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Open_Tasks
		{
			displayName = "All Open Tasks"
   			hide = true
			show all rows from Add_Task  [Status != "Completed"]  
			(
				Task_Owner as "Task Owner"
				Task_Name as "Task Name"
				Description
				Priority
				Status
				Assign_to as "Assigned To"
				custom action "Mark As Complete"
				(
	  			workflow = Mark_As_Complete
				show action in view header = true
				show action in edit record menu = true
				column header = "Mark As Complete"
				condition = (Status == "In Progress" || Status == "Overdue")
				)
				End_Date as "End Date"
				custom action "InProgress"
				(
	  			workflow = InProgress1
				show action in view header = true
				show action in edit record menu = true
				column header = "InProgress"
				condition = (Status == "Open" || Status == "Overdue")
				)
				Due_Date1 as "Start Date"
				Due_Date as "Due Date"
			)
			filters
			(
				Status
				Assign_to
				"Open Tasks"  :  Status == "Open"
				"In Progress Tasks"  :  Status == "In Progress"
				"Overdue Tasks"  :  Status == "Overdue"
			)
			group by
			(
				Due_Date ascending
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			customlayouts
	     			(
		 				template
		 				(
		 	  				displayname="Custom Layout 1"
		 	  				content="<panel \n >\n	<pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		padding = '0px'\n	bgColor = '#FFFFFF'\n\n		width = '100%'\n		hAlign = 'center'\n		vAlign = 'middle'\n>\n	<pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		paddingTop = '17px'\n	paddingLeft = '17px'\n	paddingRight = '0px'\n	paddingBottom = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '30%'\n		hAlign = 'left'\n		vAlign = 'top'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '12px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '18'\n      	  numOfLines = '1'\n	  value = 'Task_Name'\n>\n</text>\n\n</pc>\n</pr>\n</pc><pc \n		paddingTop = '17px'\n	paddingLeft = '17px'\n	paddingRight = '0px'\n	paddingBottom = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '33%'\n		hAlign = 'left'\n		vAlign = 'top'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '12px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '18'\n      	  numOfLines = '1'\n	  value = 'Task_Owner'\n>\n</text>\n\n</pc>\n</pr>\n</pc><pc \n		paddingTop = '17px'\n	paddingLeft = '17px'\n	paddingRight = '0px'\n	paddingBottom = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '37%'\n		hAlign = 'left'\n		vAlign = 'top'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '12px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '18'\n      	  numOfLines = '1'\n	  value = 'Status'\n>\n</text>\n\n</pc>\n</pr>\n</pc>\n</pr>\n</pc>\n</pr>\n</panel>"
		    			)
	     			)
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
				"InProgress"
				"Mark As Complete"
							Task_Name as "Task Name"
							Due_Date1 as "Start Date"
							End_Date as "End Date"
							Assign_to as "Assigned To"
							Priority
							Task_Owner as "Task Owner"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
				"InProgress"
				"Mark As Complete"
							Task_Owner as "Task Owner"
							Task_Name as "Task Name"
							Due_Date1 as "Start Date"
							End_Date as "End Date"
							Description
							Priority
							Status
							Assign_to as "Assigned To"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Open_Tasks1
		{
			displayName = "My Open Tasks"
   			hide = true
			show all rows from Add_Task  [(Status != "Overdue" && Status != "Completed" && Assign_to.Email_address == zoho.loginuserid) || (Status != "Overdue" && Status != "Completed" && Task_Owner == zoho.loginuserid)]  
			(
				Task_Owner as "Task Owner"
				Task_Name as "Task Name"
				Description
				Priority
				Status
				Assign_to as "Assigned To"
				custom action "Mark As Complete"
				(
	  			workflow = Mark_As_Complete
				show action in edit record menu = true
				column header = "Mark As Complete"
				condition = (Status != "Completed")
				)
				End_Date as "End Date"
				custom action "InProgress"
				(
	  			workflow = InProgress
				show action in edit record menu = true
				column header = "InProgress"
				)
				Due_Date1 as "Start Date"
			)
			filters
			(
				Status
				"Open Tasks"  :  Status == "Open"
				"In Progress Tasks"  :  Status == "In Progress"
				"Overdue Tasks"  :  Status == "Overdue"
			)
			sort by
			(
				End_Date ascending
			)
			options
			(
				icon = "sport-cardio"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
				"InProgress"
				"Mark As Complete"
							Task_Name as "Task Name"
							Due_Date1 as "Start Date"
							End_Date as "End Date"
							Assign_to as "Assigned To"
							Priority
							Task_Owner as "Task Owner"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
				"InProgress"
				"Mark As Complete"
							Task_Owner as "Task Owner"
							Task_Name as "Task Name"
							Due_Date1 as "Start Date"
							End_Date as "End Date"
							Description
							Priority
							Status
							Assign_to as "Assigned To"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Events
	{
		icon = "ui-1-calendar-grid-58"
		form Add_Event
		{
			displayname = "Add Event"
			success message = "Event Added Successfully!"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Event_Category
			(
				type = picklist	
				displayname = "Event Category"
				values  = Add_Event_Category.ID
    			displayformat = [Event_Category]
				allow new entries = true
				[
					displayname = "Add New"
				]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Event_Name
			(
    			type = text
				displayname = "Event Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Venue
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			Section1
			(
				type = section
				displayname = "Section"
	 			row = 2
	 			column = 0   
				width = medium
			)
			Start_Date
			(
    			type = date
				displayname = "Start Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 2
	 			column = 1   
				width = medium
			)
			End_Date
			(
    			type = date
				displayname = "End Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 2
	 			column = 1   
				width = medium
			)
			Start_Time
			(
    			type = time
				displayname = "Start Time"
				timedisplayoptions = "hh:mm:ss" 
	 			row = 2
	 			column = 2   
				width = medium
			)
			End_Time
			(
    			type = time
				displayname = "End Time"
				timedisplayoptions = "hh:mm:ss" 
	 			row = 2
	 			column = 2   
				width = medium
			)
			Section2
			(
				type = section
				displayname = "Section"
	 			row = 3
	 			column = 0   
				width = medium
			)
			Ticket_Type
			(
				type = picklist
				displayname = "Ticket Type"
				maxchar = 100
				values = {"Free", "Paid"}
				others option = true
	 			row = 3
	 			column = 1   
				width = medium
			)
			Event_Image
			(
    			type = image
				displayname = "Event Image"
				source  = file
				aspect ratio = original
				camera = primary
				show gallery = true
				switch camera = true
	 			row = 3
	 			column = 1   
				width = medium
			)
			Number_of_entries
			(
				type = number
				displayname = "Number of entries"
	 			row = 3
	 			column = 1   
				width = medium
			)
			must have Discription
			(
    			type = textarea
				displayname = "Event Description"
				height = 100px
	 			row = 3
	 			column = 1   
				width = medium
			)
			Section3
			(
				type = section
				displayname = "Section"
	 			row = 4
	 			column = 0   
				width = medium
			)
			Event_Status1
			(
				type = picklist
				displayname = "Event Status"
				maxchar = 100
				values = {"Planned", "Held", "Not Held", "Cancelled"}
	 			row = 4
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "location-pin-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
			blueprint components
			{
				stages = {"Planned", "Held", "Cancelled", "Not Held"}
			}
		}
		default list All_Events
		{
			displayName = "All Events"
   			hide = true
			show all rows from Add_Event    
			(
				Event_Name as "Event Name"
				Start_Date as "Start Date"
				End_Date as "End Date"
				Start_Time as "Start Time"
				End_Time as "End Time"
				Event_Category as "Event Category"
				Venue
				Ticket_Type as "Ticket Type"
				Event_Image as "Event Image"
				Number_of_entries as "Number of entries"
				Discription as "Event Description"
				Event_Status1 as "Event Status"
			)
			filters
			(
				Event_Status1
				"Upcoming Events"  :  Event_Status1 == "Planned"
				"Completed Events"  :  Event_Status1 == "Held"
				"Cancelled Events"  :  Event_Status1 == "Cancelled"
				"Events Not Held"  :  Event_Status1 == "Not Held"
			)
			options
			(
				icon = "ui-1-calendar-grid-58"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Event_Name as "Event Name"
							Start_Date as "Start Date"
							End_Date as "End Date"
							Discription as "Event Description"
							Event_Category as "Event Category"
							Event_Status1 as "Event Status"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Event_Name as "Event Name"
							Start_Date as "Start Date"
							End_Date as "End Date"
							Start_Time as "Start Time"
							End_Time as "End Time"
							Event_Category as "Event Category"
							Venue
							Ticket_Type as "Ticket Type"
							Event_Image as "Event Image"
							Number_of_entries as "Number of entries"
							Discription as "Event Description"
							Event_Status1 as "Event Status"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Open_Events
		{
			displayName = "Open Events"
   			hide = true
			show all rows from Add_Event  [Event_Status1 != "Cancelled" && Event_Status1 != "Not Held"]  
			(
				Event_Category as "Event Category"
				Event_Name as "Event Name"
				Venue
				Start_Date as "Start Date"
				End_Date as "End Date"
				Start_Time as "Start Time"
				End_Time as "End Time"
				Event_Image as "Event Image"
				Discription as "Event Description"
				Event_Status1 as "Event Status"
			)
			filters
			(
				Event_Status1
				Event_Category
			)
			group by
			(
				Event_Category ascending
			)
			options
			(
				icon = "shopping-box-3d-67"
	 		)
			quickview
			(
				layout
				(
		 			customlayouts
	     			(
		 				template
		 				(
		 	  				displayname="Custom Layout 1"
		 	  				content="<panel \n >\n	<pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		padding = '0px'\n	bgColor = '#FFFFFF'\n\n		width = '100%'\n		hAlign = 'center'\n		vAlign = 'middle'\n>\n	<pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		paddingTop = '17px'\n	paddingLeft = '0px'\n	paddingRight = '17px'\n	paddingBottom = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '21%'\n		hAlign = 'left'\n		vAlign = 'top'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '12px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '16'\n      	  numOfLines = '1'\n	  value = 'Event_Name'\n>\n</text>\n\n</pc>\n</pr>\n</pc><pc \n		paddingTop = '17px'\n	paddingLeft = '0px'\n	paddingRight = '17px'\n	paddingBottom = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '27%'\n		hAlign = 'left'\n		vAlign = 'top'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '12px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '16'\n      	  numOfLines = '1'\n	  value = 'Event_Status1'\n>\n</text>\n\n</pc>\n</pr>\n</pc><pc \n		paddingTop = '17px'\n	paddingLeft = '0px'\n	paddingRight = '17px'\n	paddingBottom = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '23%'\n		hAlign = 'left'\n		vAlign = 'top'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '12px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '16'\n      	  numOfLines = '1'\n	  value = 'Start_Date'\n>\n</text>\n\n</pc>\n</pr>\n</pc><pc \n		paddingTop = '17px'\n	paddingLeft = '0px'\n	paddingRight = '17px'\n	paddingBottom = '17px'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n		width = '29%'\n		hAlign = 'left'\n		vAlign = 'top'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	color = '#000000'\n	size = '12px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'false' \n	italic = 'false' \n	type = 'field'\n	bgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n	  \n      	lineHeight = '16'\n      	  numOfLines = '1'\n	  value = 'End_Date'\n>\n</text>\n\n</pc>\n</pr>\n</pc>\n</pr>\n</pc>\n</pr>\n</panel>"
		    			)
	     			)
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Event_Category as "Event Category"
							Event_Name as "Event Name"
							Event_Status1 as "Event Status"
							Start_Date as "Start Date"
							Start_Time as "Start Time"
							End_Date as "End Date"
							End_Time as "End Time"
							Venue
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Event_Image as "Event Image"
							Event_Category as "Event Category"
							Event_Name as "Event Name"
							Venue
							Start_Date as "Start Date"
							Start_Time as "Start Time"
							End_Date as "End Date"
							End_Time as "End Time"
							Discription as "Event Description"
							Event_Status1 as "Event Status"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Holidays
	{
		icon = "holidays-glove"
		form Add_Holiday
		{
			displayname = "Add Holiday"
			success message = "Holiday Added Successfully"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Name
			(
    			type = text
				displayname = "Holiday Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Holiday_Type
			(
    			type = text
				displayname = "Holiday Type"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Start_Date
			(
    			type = date
				displayname = "Start Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			End_Date
			(
    			type = date
				displayname = "End Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Description
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "tech-2-p-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Clients
	{
		icon = "users-multiple-19"
		form Add_Client
		{
			displayname = "Add Client"
			success message = "Client Added Successfully"
			field alignment = left
					hide = true
			Client
			(
				type = section
				visibility = true
	 			row = 1
	 			column = 0   
				width = medium
			)
			Client_Name
			(
    			type = text
				displayname = "Client Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Currency
			(
				type = picklist
				maxchar = 100
				values = {"USD", "EUR", "INR", "BHD", "BGN", "BDT", "BBD", "BAM", "AZN", "AWG", "ARS", "AOA", "ANG", "AMDA", "ALL", "AFN", "AED", "AUDA", "GBP", "JPY"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Billing_Method
			(
				type = picklist
				displayname = "Billing Method"
				maxchar = 100
				values = {"Hourly Job Rate", "Hourly User Rate", "Hourly User Rate - Jobs", "Hourly User Rate - Projects"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Contacts
			(
				type = section
				visibility = true
	 			row = 2
	 			column = 0   
				width = medium
			)
			First_Name
			(
    			type = text
				displayname = "First Name"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Email
			(
    			type = email
				maxchar = 80
	 			row = 2
	 			column = 1   
				width = medium
				personal data = true
			)
			Mobile
			(
    			type = phonenumber
	 			row = 2
	 			column = 1   
				width = medium
				personal data = true
			)
			Industry
			(
    			type = text
	 			row = 2
	 			column = 1   
				width = medium
			)
			Multi_Line
			(
    			type = textarea
				displayname = "Multi Line"
				height = 100px
	 			row = 2
	 			column = 1   
				width = medium
			)
			Last_Name
			(
    			type = text
				displayname = "Last Name"
	 			row = 2
	 			column = 2   
				width = medium
			)
			Phone_Number
			(
    			type = phonenumber
				displayname = "Phone"
	 			row = 2
	 			column = 2   
				width = medium
				personal data = true
			)
			Fax
			(
    			type = text
	 			row = 2
	 			column = 2   
				width = medium
			)
			Single_Line
			(
    			type = text
				displayname = "Single Line"
	 			row = 2
	 			column = 2   
				width = medium
			)
			Address
			(
    			type = address
     			capture_coordinates = true
     			adjust_using_map = false
     			address_line_1
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_2
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 2
	 			column = 2   
				width = medium
				personal data = true
			)
			Section
			(
				type = section
	 			row = 3
	 			column = 0   
				width = medium
			)
			Contact_Id
			(
    			type = text
				displayname = "Contact Id"
	 			row = 3
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "users-2-woman-up"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Clients
		{
			displayName = "All Clients"
   			hide = true
			show all rows from Add_Client    
			(
				Client_Name as "Client Name"
				Currency
				Billing_Method as "Billing Method"
				Email
				First_Name as "First Name"
				Last_Name as "Last Name"
				Phone_Number as "Phone"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Mobile
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Fax
				Address 
	 			(
	      			displayformat = [address_line_1+""+address_line_2+""+district_city+""+state_province+""+postal_Code+""+country]
	      			enable = Link_to_Map,Show_As_Text
	 			)
				Industry
				Single_Line as "Single Line"
				Multi_Line as "Multi Line"
				Contact_Id as "Contact Id"
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Client_Name as "Client Name"
							Currency
							Billing_Method as "Billing Method"
							Email
							First_Name as "First Name"
							Last_Name as "Last Name"
							Phone_Number as "Phone"
							Contact_Id as "Contact Id"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Client_Name as "Client Name"
							Currency
							Billing_Method as "Billing Method"
							Email
							First_Name as "First Name"
							Last_Name as "Last Name"
							Phone_Number as "Phone"
							Mobile
							Fax
							Address
							Industry
							Single_Line as "Single Line"
							Multi_Line as "Multi Line"
							Contact_Id as "Contact Id"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Departments
	{
		icon = "business-hierarchy-53"
		form Add_Department
		{
			displayname = "Add Department"
			success message = "Department Added Successfully"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Department_Name
			(
    			type = text
				displayname = "Department Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "tech-2-p-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Departments
		{
			displayName = "All Departments"
   			hide = true
			show all rows from Add_Department    
			(
				Department_Name as "Department Name"
			)
			options
			(
				icon = "business-hierarchy-53"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Department_Name as "Department Name"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Department_Name as "Department Name"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Designations
	{
		icon = "location-pins"
		form Add_Designation
		{
			displayname = "Add Designation"
			success message = "Designation Added Successfully"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Designation_Name
			(
    			type = text
				displayname = "Designation Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "tech-2-l-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Designations
		{
			displayName = "All Designations"
   			hide = true
			show all rows from Add_Designation    
			(
				Designation_Name as "Designation Name"
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Designation_Name as "Designation Name"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Designation_Name as "Designation Name"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Work_Experiences
	{
		displayname= "Work Experiences"
		icon = "tech-laptop"
		form Work_Experience
		{
			displayname = "Work Experience"
			success message = "Work Experience Added Successfully"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Previous_Company_Name
			(
    			type = text
				displayname = "Previous Company Name	"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Job_Title
			(
    			type = text
				displayname = "Job Title	"
	 			row = 1
	 			column = 1   
				width = medium
			)
			From_Date
			(
    			type = date
				displayname = "From Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			To_Date
			(
    			type = date
				displayname = "To Date	"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Job_Description
			(
    			type = textarea
				displayname = "Job Description	"
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Relevant
			(
				type = picklist
				displayname = "Relevant	"
				maxchar = 100
				values = {"YES", "NO"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Employee_ID
			(
				type = picklist	
				displayname = "Employee ID"
				values  = Add_Employee.ID
    			bidirectional = Work_Experience
    			displayformat = [ID]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "tech-laptop"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Work_Experiences
		{
			displayName = "All Work Experiences"
   			hide = true
			show all rows from Work_Experience    
			(
				Previous_Company_Name as "Previous Company Name	"
				Job_Title as "Job Title	"
				From_Date as "From Date"
				To_Date as "To Date	"
				Job_Description as "Job Description	"
				Relevant as "Relevant	"
				Employee_ID as "Employee ID"
			)
			options
			(
				icon = "tech-laptop"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Previous_Company_Name as "Previous Company Name	"
							Job_Title as "Job Title	"
							From_Date as "From Date"
							To_Date as "To Date	"
							Job_Description as "Job Description	"
							Relevant as "Relevant	"
							Employee_ID as "Employee ID"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Previous_Company_Name as "Previous Company Name	"
							Job_Title as "Job Title	"
							From_Date as "From Date"
							To_Date as "To Date	"
							Job_Description as "Job Description	"
							Relevant as "Relevant	"
							Employee_ID as "Employee ID"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Education_Details
	{
		displayname= "Education Details"
		icon = "education-pencil-47"
		form Education_Details
		{
			displayname = "Education Details"
			success message = "Education Detail Added Successfully"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Institute_Name
			(
    			type = text
				displayname = "Institute Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Single_Line1
			(
    			type = text
				displayname = "Single Line"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Degree_Diploma
			(
    			type = text
				displayname = "Degree/Diploma"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Specialization
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			Date_of_Completion
			(
    			type = text
				displayname = "Date of Completion"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Employee_ID
			(
				type = picklist	
				displayname = "Employee ID"
				values  = Add_Employee.ID
    			bidirectional = Education_Details
    			displayformat = [ID]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "education-pencil-47"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Education_Details
		{
			displayName = "All Education Details"
   			hide = true
			show all rows from Education_Details    
			(
				Institute_Name as "Institute Name"
				Single_Line1 as "Single Line"
				Degree_Diploma as "Degree/Diploma"
				Specialization
				Date_of_Completion as "Date of Completion"
				Employee_ID as "Employee ID"
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Institute_Name as "Institute Name"
							Single_Line1 as "Single Line"
							Degree_Diploma as "Degree/Diploma"
							Specialization
							Date_of_Completion as "Date of Completion"
							Employee_ID as "Employee ID"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Institute_Name as "Institute Name"
							Single_Line1 as "Single Line"
							Degree_Diploma as "Degree/Diploma"
							Specialization
							Date_of_Completion as "Date of Completion"
							Employee_ID as "Employee ID"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Dependent_Details
	{
		displayname= "Dependent Details"
		icon = "users-2-contacts-44"
		form Dependent_Details
		{
			displayname = "Dependent Details"
			success message = "Dependent Detail Added Successfully"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Name
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			Relationship
			(
				type = picklist
				maxchar = 100
				values = {"Father", "Mother", "Sister", "Brother", "Husband", "Wife", "Child"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Date_of_Birth
			(
    			type = date
				displayname = "Date of Birth"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Employee_ID
			(
				type = picklist	
				displayname = "Employee ID"
				values  = Add_Employee.ID
    			bidirectional = Dependent_Details
    			displayformat = [ID]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "users-2-contacts-44"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Dependent_Details
		{
			displayName = "All Dependent Details"
   			hide = true
			show all rows from Dependent_Details    
			(
				Name
				Relationship
				Date_of_Birth as "Date of Birth"
				Employee_ID as "Employee ID"
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Name
							Relationship
							Date_of_Birth as "Date of Birth"
							Employee_ID as "Employee ID"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Name
							Relationship
							Date_of_Birth as "Date of Birth"
							Employee_ID as "Employee ID"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Leave_Tracker
	{
		displayname= "Leave Tracker"
		icon = "objects-leaf-38"
		form Apply_Leave
		{
			displayname = "Leave Application"
			success message = "Leave Applied Successfully!"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Employee_Email
			(
				type = picklist	
				displayname = "Employee Email"
				values  = Add_Employee.ID
    			displayformat = [Email_address]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Employee1
			(
    			type = picklist
				displayname = "Employee"
				module = users
				displayformat = [username]
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			Type
			(
				type = radiobuttons
				maxchar = 100
				values = {"Full Day", "Partial Day"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Date_field
			(
    			type = date
				displayname = "Date"
				initial value = "${zoho.currentdate}"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Form_Date
			(
    			type = date
				displayname = "Form Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			To_Date
			(
    			type = date
				displayname = "To Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Total_Day_s
			(
				type = decimal
				displayname = "Total Day(s)"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Leave_Taken_By
			(
    			type = text
				displayname = "Leave Taken Sofar"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Leave_Type
			(
				type = picklist	
				displayname = "Leave Type"
				values  = Add_Leave_Type.ID
    			displayformat = [Name]
				allow new entries = true
				[
					displayname = "Add New"
				]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Reason_for_leave
			(
    			type = textarea
				displayname = "Leave Description"
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Status
			(
				type = picklist
				maxchar = 100
				values = {"Draft", "Approved"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Employee_ID
			(
				type = picklist	
				displayname = "Employee ID"
				values  = Add_Employee.ID
    			displayformat = [ID]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Leave_Approvers
			(
				type = list	
				displayname = "Leave Approvers"
				values  = Add_Employee.ID
    			displayformat = [ID]
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "design-2-cursor-not-allowed"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Apply"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Leave_Types
	{
		displayname= "Leave Types"
		icon = "design-2-cursor-not-allowed"
		form Add_Leave_Type
		{
			displayname = "Add Leave Type"
			success message = "Leave Type Added Successfully"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Name
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			Type
			(
				type = picklist
				maxchar = 100
				values = {"Paid", "Unpaid"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Applicable_for
			(
				type = radiobuttons
				displayname = "Applicable for"
				maxchar = 100
				values = {"All Employees", "Specific Employees"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Employee
			(
    			type = picklist
				module = users
				displayformat = [username]
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			Department
			(
				type = picklist	
				values  = Add_Department.ID
    			displayformat = [Department_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Designation
			(
				type = picklist	
				values  = Add_Designation.ID
    			displayformat = [Designation_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Location
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			plain
			(
    			type = plaintext
				value = "<div><span class=\"size\" style=\"font-size: 16px\">​</span><b><span class=\"size\" style=\"font-size: 16px\">Leave Policy</span></b><br /></div>"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Leave_Cycle_Period
			(
				type = radiobuttons
				displayname = "Leave Cycle Period"
				maxchar = 100
				values = {"Yearly(Jan to Dec)", "Monthly"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Leave_Count
			(
				type = number
				displayname = "Leave Count"
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "users-2-a-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Leave_Types
		{
			displayName = "All Leave Types"
   			hide = true
			show all rows from Add_Leave_Type    
			(
				Name
				Type
				Applicable_for as "Applicable for"
				Leave_Cycle_Period as "Leave Cycle Period"
				Department
				Designation
				Location
				Employee
				Leave_Count as "Leave Count"
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Name
							Type
							Applicable_for as "Applicable for"
							Leave_Cycle_Period as "Leave Cycle Period"
							Department
							Designation
							Location
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Name
							Type
							Applicable_for as "Applicable for"
							Leave_Cycle_Period as "Leave Cycle Period"
							Department
							Designation
							Location
							Employee
							Leave_Count as "Leave Count"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Attachments
	{
		icon = "ui-1-attach-87"
		form File_Upload
		{
			displayname = "File Upload"
			success message = "Attachment Added Successfully"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Screenshot
			(
    			type = upload file
				browse = local_drive
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "weather-cloud-13"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Attachments
		{
			displayName = "All Attachments"
   			hide = true
			show all rows from File_Upload    
			(
				Screenshot
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Screenshot
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Screenshot
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section ToDo_List
	{
		displayname= "ToDo List"
		icon = "business-notes"
		form Add_Task
		{
			displayname = "Add Task"
			success message = "Task Added Successfully!"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Task_Owner
			(
    			type = picklist
				displayname = "Task Owner"
				module = users
				displayformat = [username]
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			must have Task_Name
			(
    			type = text
				displayname = "Task Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Task_Type
			(
				type = radiobuttons
				displayname = "Task Type"
				maxchar = 100
				values = {"One Off", "Recurring"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Recur_Type
			(
				type = picklist
				displayname = "Recur Type"
				maxchar = 100
				values = {"Weekly", "Monthly", "Yearly"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Number_of_Weeks
			(
				type = picklist
				displayname = "Frequency (every)"
				maxchar = 100
				values = {"1", "2", "3", "4"}
    			description
    			[
    				type = help_text
    			 	message = "Week(s)"
    			]
	 			row = 1
	 			column = 1   
				width = medium
			)
			Number_of_Month
			(
				type = picklist
				displayname = "Frequency (every)"
				maxchar = 100
				values = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"}
    			description
    			[
    				type = help_text
    			 	message = "Month(s)"
    			]
	 			row = 1
	 			column = 1   
				width = medium
			)
			Due_Date1
			(
    			type = datetime
				displayname = "Start Date"
				timedisplayoptions = "hh:mm:ss"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Due_Date
			(
    			type = date
				displayname = "Due Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			End_Date
			(
    			type = date
				displayname = "End Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Description
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Assign_to
			(
				type = picklist	
				displayname = "Assigned To"
				values  = Add_Employee.ID
    			displayformat = [First_Name + " " + Last_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Priority
			(
				type = picklist
				maxchar = 100
				values = {"High", "Moderate", "Low"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Status
			(
				type = picklist
				maxchar = 100
				values = {"Open", "In Progress", "Completed", "Overdue"}
				others option = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			Created_By
			(
    			type = picklist
				displayname = "Created By"
				module = users
				displayformat = [username]
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
	
			customize
			(
				icon = "tech-2-p-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Event_Categories
	{
		displayname= "Event Categories"
		icon = "ui-1-calendar-grid-58"
		form Add_Event_Category
		{
			displayname = "Add Event Category"
			success message = "Event Category Added Successfully"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Event_Category
			(
    			type = text
				displayname = "Event Category"
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "users-2-a-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Event_Categories
		{
			displayName = "All Event Categories"
   			hide = true
			show all rows from Add_Event_Category    
			(
				Event_Category as "Event Category"
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Event_Category as "Event Category"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Event_Category as "Event Category"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Available_Leaves
	{
		displayname= "Available Leaves"
		icon = "tech-ram"
		form Available_Leaves
		{
			displayname = "Available Leaves"
			success message = "Data Added Successfully!"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Employee
			(
				type = picklist	
				values  = Add_Employee.ID
    			displayformat = [First_Name + " " + Last_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Leave_Type
			(
				type = picklist	
				displayname = "Leave Type"
				values  = Add_Leave_Type.ID
    			displayformat = [Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Available
			(
				type = number
	 			row = 1
	 			column = 1   
				width = medium
			)
			Taken
			(
				type = number
	 			row = 1
	 			column = 1   
				width = medium
			)
			Permitted
			(
				type = number
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "tech-ram"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list Available_Leaves_Report
		{
			displayName = "Available Leaves Report"
   			hide = true
			show all rows from Available_Leaves    
			(
				Employee
				Leave_Type as "Leave Type"
				Available
				Taken
				Permitted
			)
			options
			(
				icon = "business-laptop-71"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Employee
							Leave_Type as "Leave Type"
							Available
							Taken
							Permitted
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Employee
							Leave_Type as "Leave Type"
							Available
							Taken
							Permitted
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Activities
	{
		icon = "health-pulse"
		form Add_Activities
		{
			displayname = "Add Activities"
			success message = "Activity Added Successfully"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Type
			(
				type = picklist
				maxchar = 100
				values = {"Scheduled Job", "Employee Time Off", "Bank Holiday's", "Event", "Employee Birthday", "Task"}
				initial value = "Event"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Employee_Name
			(
				type = picklist	
				displayname = "Employee Name"
				values  = Add_Employee.ID
    			displayformat = [First_Name + " " + Last_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Client_Name
			(
				type = picklist	
				displayname = "Client Name"
				values  = Add_Client.ID
    			displayformat = [First_Name + " " + Last_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Date_of_Birth1
			(
    			type = text
				displayname = "Date of Birth"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Type1
			(
				type = radiobuttons
				displayname = "Type"
				maxchar = 100
				values = {"Full Day", "Half Day"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Event_Name
			(
    			type = text
				displayname = "Event Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Date_field
			(
    			type = date
				displayname = "Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Start_Date
			(
    			type = date
				displayname = "Start Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			End_Date
			(
    			type = date
				displayname = "End Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Description
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Crew
			(
    			type = text
				displayname = "Crew Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			record_Id
			(
				type = number
				displayname = "record Id"
				maxchar = 19
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "users-2-a-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Activities
		{
			displayName = "All Activities"
   			hide = true
			show all rows from Add_Activities    
			(
				Event_Name as "Event Name"
				Start_Date as "Start Date"
				End_Date as "End Date"
				Description
				Type
				Employee_Name as "Employee Name"
				Type1 as "Type"
				Date_field as "Date"
				Client_Name as "Client Name"
				ID
				record_Id as "record Id"
				Date_of_Birth1 as "Date of Birth"
				Crew as "Crew Name"
			)
			filters
			(
				Type
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Event_Name as "Event Name"
							Start_Date as "Start Date"
							End_Date as "End Date"
							Description
							Type
							Employee_Name as "Employee Name"
							ID
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Event_Name as "Event Name"
							Start_Date as "Start Date"
							End_Date as "End Date"
							Description
							Type
							Employee_Name as "Employee Name"
							Type1 as "Type"
							Date_field as "Date"
							Client_Name as "Client Name"
							record_Id as "record Id"
							Date_of_Birth1 as "Date of Birth"
							Crew as "Crew Name"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		summary All_Event
		{
			displayName = "All Event"
   			hide = true
			show all rows from Add_Activities  [Type == "Event"]  
			(
				Type
				Employee_Name as "Employee Name"
				Type1 as "Type"
				Event_Name as "Event Name"
				Date_field as "Date"
				Start_Date as "Start Date"
				End_Date as "End Date"
				Description
			)
			options
			(
				display rows = 10
				display records per row = 2
				icon = "travel-world"
			)
			quickview
			(
				layout
				(
		 			type = -2
	     			recordsperrow = 2
					datablock1
					(
			 			layout type = -2
						fields
						(
							Type
							Event_Name as "Event Name"
							Start_Date as "Start Date"
							End_Date as "End Date"
							Description
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Type
							Employee_Name as "Employee Name"
							Type1 as "Type"
							Event_Name as "Event Name"
							Date_field as "Date"
							Start_Date as "Start Date"
							End_Date as "End Date"
							Description
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		summary All_Scheduled_Job
		{
			displayName = "All Scheduled Job"
   			hide = true
			show all rows from Add_Activities  [Type == "Scheduled Job"]  
			(
				Type
				Start_Date as "Start Date"
				End_Date as "End Date"
				Description
				Client_Name as "Client Name"
			)
			options
			(
				display rows = 10
				display records per row = 2
				icon = "media-1-button-next"
			)
			quickview
			(
				layout
				(
		 			type = -2
	     			recordsperrow = 2
					datablock1
					(
			 			layout type = -2
						fields
						(
							Client_Name as "Client Name"
							Description
							Start_Date as "Start Date"
							End_Date as "End Date"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Description
							Start_Date as "Start Date"
							End_Date as "End Date"
							Type
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		summary Employee_Time_Off1
		{
			displayName = "Employee Time Off"
   			hide = true
			show all rows from Add_Activities  [Type == "Employee Time Off"]  
			(
				Type
				Employee_Name as "Employee Name"
				Type1 as "Type"
				Date_field as "Date"
				Start_Date as "Start Date"
				End_Date as "End Date"
				Description
				ID
			)
			options
			(
				display rows = 10
				display records per row = 2
				icon = "users-2-a-time"
			)
			quickview
			(
				layout
				(
		 			type = -2
	     			recordsperrow = 2
					datablock1
					(
			 			layout type = -2
						fields
						(
							Type
							Employee_Name as "Employee Name"
							Type1 as "Type"
							Start_Date as "Start Date"
							End_Date as "End Date"
							Date_field as "Date"
							ID
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Type
							Employee_Name as "Employee Name"
							Date_field as "Date"
							Start_Date as "Start Date"
							End_Date as "End Date"
							Description
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		summary Bank_Holiday_s
		{
			displayName = "Bank Holiday's"
   			hide = true
			show all rows from Add_Activities  [Type == "Bank Holiday's"]  
			(
				Type
				Event_Name as "Event Name"
				Start_Date as "Start Date"
				End_Date as "End Date"
				Description
			)
			options
			(
				display rows = 10
				display records per row = 2
				icon = "business-bank"
			)
			quickview
			(
				layout
				(
		 			type = -2
	     			recordsperrow = 2
					datablock1
					(
			 			layout type = -2
						fields
						(
							Type
							Start_Date as "Start Date"
							End_Date as "End Date"
							Description
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Type
							Event_Name as "Event Name"
							Start_Date as "Start Date"
							End_Date as "End Date"
							Description
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Employee_Birthday
		{
			displayName = "Employee Birthday"
   			hide = true
			show all rows from Add_Activities  [Type == "Employee Birthday"]  
			(
				Type
				Employee_Name as "Employee Name"
				Event_Name as "Event Name"
			)
			options
			(
				icon = "business-business-contact-89"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Type
							Employee_Name as "Employee Name"
							Event_Name as "Event Name"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Type
							Employee_Name as "Employee Name"
							Event_Name as "Event Name"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Associate_Composite_Items
	{
		displayname= "Associate Composite Items"
		icon = "design-2-selection"
		form Associate_Composite_Items
		{
			displayname = "Associate Composite Items"
			success message = "Data Added Successfully!"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Combo_Item_Id
			(
    			type = text
				displayname = "Combo Item Id"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Location
			(
    			type = text
				displayname = "Location "
	 			row = 1
	 			column = 1   
				width = medium
			)
			Product_Id
			(
    			type = text
				displayname = "Product Id"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Composite_Items_Name
			(
				type = picklist	
				displayname = "Composite Items Name"
				values  = Composite_Items.ID
    			displayformat = [Composite_Items_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Product_Name
			(
				type = picklist	
				displayname = "Product Name"
				values  = Product.ID
    			displayformat = [Product_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Sqft
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			Rate
			(
				type = USD
				format = commadotwestern
	 			row = 1
	 			column = 1   
				width = medium
			)
			Amount
			(
				type = decimal
				displayname = "Total Value"
				maxchar = 15
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "design-2-selection"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list Associate_Composite_Items_Report
		{
			displayName = "Associate Composite Items Report"
   			hide = true
			show all rows from Associate_Composite_Items    
			(
				Sqft
				Composite_Items_Name as "Composite Items Name"
				Product_Name as "Product Name"
				Rate
				Product_Id as "Product Id"
				Combo_Item_Id as "Combo Item Id"
				Amount as "Total Value"
				Location as "Location "
			)
			options
			(
				icon = "design-2-group"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Sqft
							Composite_Items_Name as "Composite Items Name"
							Product_Name as "Product Name"
							Rate
							Product_Id as "Product Id"
							Combo_Item_Id as "Combo Item Id"
							Amount as "Total Value"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Sqft
							Composite_Items_Name as "Composite Items Name"
							Product_Name as "Product Name"
							Rate
							Product_Id as "Product Id"
							Combo_Item_Id as "Combo Item Id"
							Amount as "Total Value"
							Location as "Location "
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Products
	{
		icon = "shopping-gift"
		form Product
		{
			success message = "Product Added Successfully"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			unique Product_Name
			(
    			type = text
				displayname = "Product Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			SKU
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			Cost_Price
			(
				displayname = "Cost Price"
				type = INR
				format = commadotwestern
	 			row = 1
	 			column = 1   
				width = medium
			)
			Unit
			(
				type = picklist
				maxchar = 100
				values = {"sq ft", "Box", "kg"}
				others option = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			Description
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			unique Books_Id
			(
    			type = text
				displayname = "Books Id"
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "tech-2-pci-card"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Products
		{
			displayName = "All Products"
   			hide = true
			show all rows from Product    
			(
				Product_Name as "Product Name"
				SKU
				Cost_Price as "Cost Price"
				Description
				Unit
				Books_Id as "Books Id"
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Product_Name as "Product Name"
							SKU
							Cost_Price as "Cost Price"
							Description
							Unit
							Books_Id as "Books Id"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Product_Name as "Product Name"
							SKU
							Cost_Price as "Cost Price"
							Description
							Unit
							Books_Id as "Books Id"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Composite_Items
	{
		displayname= "Composite Items"
		icon = "design-2-selection"
		form Composite_Items
		{
			displayname = "Composite Items"
			success message = "Composite Item Added Successfully"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			unique Composite_Items_Name
			(
    			type = text
				displayname = "Composite Items Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Unit
			(
				type = picklist
				maxchar = 100
				values = {"sq ft", "box", "kg"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Section1
			(
				type = section
				displayname = "Section"
	 			row = 2
	 			column = 0   
				width = medium
			)
			plain
			(
    			type = plaintext
				value = "<div><span style=\"color: rgb(33, 37, 41); font-family: Inter, &quot;Source Sans Pro&quot;, Helvetica, Arial, sans-serif; font-size: 15px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; background-color: rgb(255, 255, 255); text-decoration-color: initial; display: inline !important; float: none\"><b><span class=\"font\" style=\"font-family: serif, sans-serif\">Purchase Information</span></b></span><br /></div>"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Cost_Price
			(
				displayname = "Cost Price"
				type = USD
				format = commadotwestern
	 			row = 2
	 			column = 1   
				width = medium
			)
			Purchase_Account
			(
    			type = text
				displayname = "Purchase Account"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Description1
			(
    			type = textarea
				displayname = "Description"
				height = 100px
	 			row = 2
	 			column = 1   
				width = medium
			)
			unique Books_id
			(
    			type = text
				displayname = "Books id"
	 			row = 2
	 			column = 1   
				width = medium
			)
			plain1
			(
    			type = plaintext
				value = "<div><span style=\"color: rgb(33, 37, 41); font-family: Inter, &quot;Source Sans Pro&quot;, Helvetica, Arial, sans-serif; font-size: 15px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; background-color: rgb(255, 255, 255); text-decoration-color: initial; display: inline !important; float: none\"><b><span class=\"font\" style=\"font-family: serif, sans-serif\">Sales Information</span></b></span><br /></div>"
	 			row = 2
	 			column = 2   
				width = medium
			)
			Sales_Price
			(
				displayname = "Sales Price"
				type = USD
				format = commadotwestern
	 			row = 2
	 			column = 2   
				width = medium
			)
			Sales_Account
			(
    			type = text
				displayname = "Sales Account"
	 			row = 2
	 			column = 2   
				width = medium
			)
			Description
			(
    			type = textarea
				height = 100px
	 			row = 2
	 			column = 2   
				width = medium
			)
	
			customize
			(
				icon = "design-2-selection"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Composite_Items
		{
			displayName = "All Composite Items"
   			hide = true
			show all rows from Composite_Items    
			(
				Composite_Items_Name as "Composite Items Name"
				Unit
				Cost_Price as "Cost Price"
				Sales_Price as "Sales Price"
				Description
				Sales_Account as "Sales Account"
				Purchase_Account as "Purchase Account"
				Books_id as "Books id"
				Description1 as "Description"
			)
			options
			(
				icon = "design-2-group"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Composite_Items_Name as "Composite Items Name"
							Unit
							Cost_Price as "Cost Price"
							Sales_Price as "Sales Price"
							Description
							Sales_Account as "Sales Account"
							Purchase_Account as "Purchase Account"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Composite_Items_Name as "Composite Items Name"
							Unit
							Cost_Price as "Cost Price"
							Sales_Price as "Sales Price"
							Description
							Sales_Account as "Sales Account"
							Purchase_Account as "Purchase Account"
							Books_id as "Books id"
							Description1 as "Description"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Line_Items
	{
		displayname= "Line Items"
		icon = "shopping-cart-simple"
		form Line_Items
		{
			displayname = "Line Items"
			success message = "Line Item Added Successfully"
			field alignment = left
					hide = true
			Composite_Items1
			(
				type = section
				displayname = "Composite Items"
	 			row = 1
	 			column = 0   
				width = medium
			)
			Item_Id
			(
    			type = text
				displayname = "Item Id"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Location
			(
    			type = text
				displayname = "Location "
	 			row = 1
	 			column = 1   
				width = medium
			)
			Product
			(
				type = picklist	
				values  = Product.ID
    			displayformat = [Product_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Product_Name
			(
    			type = text
				displayname = "Product Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Composite_Items
			(
				type = picklist	
				displayname = "Composite Items"
				values  = Composite_Items.ID
    			displayformat = [Composite_Items_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Sqft
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			Rate
			(
				type = USD
				format = commadotwestern
	 			row = 1
	 			column = 1   
				width = medium
			)
			Total_Value
			(
				displayname = "Total Value"
				type = USD
				format = commadotwestern
	 			row = 1
	 			column = 1   
				width = medium
			)
			Schedule_ID
			(
				type = picklist	
				displayname = "Schedule ID"
				values  = Add_Schedule.ID
    			bidirectional = Line_Items
    			displayformat = [ID]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "shopping-cart-simple"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Line_Items
		{
			displayName = "All Line Items"
   			hide = true
			show all rows from Line_Items    
			(
				Product
				Composite_Items as "Composite Items"
				Sqft
				Total_Value as "Total Value"
				Schedule_ID as "Schedule ID"
				Rate
				Product_Name as "Product Name"
				Item_Id as "Item Id"
				Location as "Location "
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Product
							Composite_Items as "Composite Items"
							Sqft
							Total_Value as "Total Value"
							Schedule_ID as "Schedule ID"
							Rate
							Product_Name as "Product Name"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Product
							Composite_Items as "Composite Items"
							Sqft
							Total_Value as "Total Value"
							Schedule_ID as "Schedule ID"
							Rate
							Product_Name as "Product Name"
							Item_Id as "Item Id"
							Location as "Location "
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Add_weekly_Logs
	{
		displayname= "Add weekly Logs"
		icon = "media-1-polaroid-add"
		default list Add_weekly_Logs_Report
		{
			displayName = "Add weekly Logs Report"
   			hide = true
			show all rows from Add_weekly_Logs    
			(
				From
				To
				Submitted_By as "Submitted By"
				Logs.Job_Name as "Logs"
				Test_Field as "Test Field"
				TimeLog_Approvers as "TimeLog Approvers"
				Employee_Email as "Employee Email"
				Date_Range as "Date Range"
			)
			options
			(
				icon = "business-laptop-71"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							From
							To
							Logs.Job_Name as "Logs"
							Submitted_By as "Submitted By"
							Test_Field as "Test Field"
							TimeLog_Approvers as "TimeLog Approvers"
							Employee_Email as "Employee Email"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							From
							To
							Logs.Job_Name as "Logs"
							Submitted_By as "Submitted By"
							Test_Field as "Test Field"
							TimeLog_Approvers as "TimeLog Approvers"
							Employee_Email as "Employee Email"
							Date_Range as "Date Range"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Associate_Completed_Job
	{
		displayname= "Associate Completed Job"
		icon = "users-2-a-time"
		form Associate_Completed_Job
		{
			displayname = "Job Completion Notes"
			success message = "Brilliant! Job Completion notes Added."
			field alignment = left
			feature property = 8
			record owner = User_Added_By
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Job_Notes
			(
    			type = textarea
				displayname = "Job Notes"
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Screenshot
			(
    			type = image
				displayname = "Screenshot "
				source  = file
				aspect ratio = original
				camera = primary
				show gallery = true
				switch camera = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			Video
			(
    			type = video
    			duration=30
	 			row = 1
	 			column = 1   
				width = medium
			)
			User_Added_By
			(
    			type = picklist
				displayname = "User Added By"
				module = users
				displayformat = [username]
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			Job_Id
			(
				type = picklist	
				displayname = "Job Id"
				values  = Add_Schedule.ID
    			bidirectional = Associate_Completed_Job
    			displayformat = [ID]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "users-2-a-time"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list Associate_Completed_Job_Report
		{
			displayName = "Job Completion Notes"
   			hide = true
			show all rows from Associate_Completed_Job    
			(
				Job_Notes as "Job Notes"
				Screenshot as "Screenshot "
				Video
				User_Added_By as "User Added By"
				Job_Id as "Job Id"
			)
			options
			(
				icon = "users-2-a-time"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Job_Notes as "Job Notes"
							Screenshot as "Screenshot "
							Video
							User_Added_By as "User Added By"
							Job_Id as "Job Id"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Job_Notes as "Job Notes"
							Screenshot as "Screenshot "
							Video
							User_Added_By as "User Added By"
							Job_Id as "Job Id"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Clock_In
	{
		displayname= "Clock-In"
		icon = "tech-desktop"
		form Clock_In
		{
			displayname = "Clock-In"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 8
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Job_Name
			(
				type = picklist	
				displayname = "Job Name"
				values  = Add_Schedule.ID
    			displayformat = [Deal_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Task_Name
			(
    			type = text
				displayname = "Task Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Description
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			users
			(
    			type = picklist
				displayname = "Users"
				module = users
				displayformat = [username]
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			Start_Time
			(
    			type = datetime
				displayname = "Start Time"
				timedisplayoptions = "hh:mm:ss"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Time_Logs_Id
			(
				type = picklist	
				displayname = "Time Logs Id"
				values  = Time_Logs.ID
    			bidirectional = Clock_In
    			displayformat = [ID]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list Clock_In_Report
		{
			displayName = "Clock-In Report"
   			hide = true
			show all rows from Clock_In    
			(
				Job_Name as "Job Name"
				Task_Name as "Task Name"
				Description
				users as "Users"
				Start_Time as "Start Time"
				Time_Logs_Id as "Time Logs Id"
			)
			options
			(
				icon = "business-laptop-71"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Job_Name as "Job Name"
							Task_Name as "Task Name"
							Description
							users as "Users"
							Start_Time as "Start Time"
							Time_Logs_Id as "Time Logs Id"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Job_Name as "Job Name"
							Task_Name as "Task Name"
							Description
							users as "Users"
							Start_Time as "Start Time"
							Time_Logs_Id as "Time Logs Id"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Clock_Out
	{
		displayname= "Clock-Out"
		icon = "tech-desktop"
		form Clock_Out
		{
			displayname = "Clock-Out"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 8
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Job_Name
			(
				type = picklist	
				displayname = "Job Name"
				values  = Add_Schedule.ID
    			displayformat = [Deal_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Task_Name
			(
    			type = text
				displayname = "Task Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Description
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			users
			(
    			type = picklist
				displayname = "Users"
				module = users
				displayformat = [username]
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			End_Time
			(
    			type = datetime
				displayname = "End Time"
				timedisplayoptions = "hh:mm:ss"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Time_Logs_Id
			(
				type = picklist	
				displayname = "Time Logs Id"
				values  = Time_Logs.ID
    			bidirectional = Clock_Out
    			displayformat = [ID]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list Clock_Out_Report
		{
			displayName = "Clock-Out Report"
   			hide = true
			show all rows from Clock_Out    
			(
				Job_Name as "Job Name"
				Task_Name as "Task Name"
				Description
				users as "Users"
				End_Time as "End Time"
				Time_Logs_Id as "Time Logs Id"
			)
			options
			(
				icon = "business-laptop-71"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Job_Name as "Job Name"
							Task_Name as "Task Name"
							Description
							users as "Users"
							End_Time as "End Time"
							Time_Logs_Id as "Time Logs Id"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Job_Name as "Job Name"
							Task_Name as "Task Name"
							Description
							users as "Users"
							End_Time as "End Time"
							Time_Logs_Id as "Time Logs Id"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Approvers
	{
		icon = "tech-desktop"
		form Leave_Approvers
		{
			displayname = "Leave Approvers"
			success message = "Approver Left Successfully"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Leave_Approvers
			(
				type = picklist	
				displayname = "Leave Approvers"
				values  = Add_Employee.ID
    			displayformat = [First_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "travel-hut"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Leave"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Approvers
		{
			displayName = "All Approvers"
   			hide = true
			show all rows from Leave_Approvers    
			(
				Leave_Approvers as "Leave Approvers"
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Leave_Approvers as "Leave Approvers"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Leave_Approvers as "Leave Approvers"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Timelog_Approvers
	{
		displayname= "Timelog Approvers"
		icon = "tech-desktop"
		form TimeLog_Approvers
		{
			displayname = "TimeLog Approvers"
			success message = "Timelog Approver Added Successfully"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			users
			(
    			type = picklist
				displayname = "Users"
				module = users
				displayformat = [username]
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Timelog_Approvers
		{
			displayName = "All Timelog Approvers"
   			hide = true
			show all rows from TimeLog_Approvers    
			(
				users as "Users"
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							users as "Users"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							users as "Users"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Crew_Histories
	{
		displayname= "Crew Histories"
		icon = "tech-2-l-search"
		form Crew_History
		{
			displayname = "Crew History"
			success message = "Crew History Added Successfully"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Crew_Name
			(
    			type = text
				displayname = "Crew Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			SuperIntendent
			(
				type = picklist	
				values  = Add_Employee.ID
    			displayformat = [First_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Crew_Lead
			(
				type = picklist	
				displayname = "Crew Lead"
				values  = Add_Employee.ID
    			displayformat = [First_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Crew_Members
			(
				type = list	
				displayname = "Crew Members"
				values  = Add_Employee.ID
    			displayformat = [Nick_Name]
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "travel-octopus"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Leave_Application
	{
		displayname= "Leave Application"
		icon = "design-2-cursor-not-allowed"
		pivotchart Leave_Count_By_Employee
		{ 
			displayname = "Leave Count By Employee"
			legend = RIGHT
			report properties
			(
				records displayed = all_records
				allow export = false
				allow drilldown and view underlying data = false
		
			)

			based on Autoview_1654275576479_Apply_Leave
					hide = true
							icon = "sport-cardio"				show all rows from Apply_Leave
				(
			Employee_Email  as "Employee Email"
			Employee1  as "Employee"
			Type 
			Date_field  as "Date"
			Form_Date  as "Form Date"
			To_Date  as "To Date"
			Leave_Taken_By  as "Leave Taken Sofar"
			Leave_Type  as "Leave Type"
			Status 
			Employee_ID  as "Employee ID"
			Total_Day_s  as "Total Day(s)1"
				)
		}
	}
	section Add_Task1
	{
		displayname= "Add Task"
		icon = "tech-2-p-add"
		calendar Task
		{
			displayName = "Task"
   			hide = true
			show all rows from Add_Task    
			(
				Task_Owner as "Task Owner"
				Task_Name as "Task Name"
				Task_Type as "Task Type"
				End_Date as "End Date"
				Recur_Type as "Recur Type"
				Number_of_Weeks as "Frequency (every)"
				Number_of_Month as "Frequency (every)"
				Description
				Assign_to as "Assigned To"
				Priority
				Status
				Created_By as "Created By"
				Due_Date1 as "Start Date"
			)
			options
			(
				display type = week
				week start day = monday
				display field = Task_Name
				start date = Due_Date1
				default date 
				(
	    			day   = Today
	    			month = Currentmonth
	    			year  = Currentyear
				)
				icon = "design-todo"
			)
			quickview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = 1
						fields
						(
							Task_Owner as "Task Owner"
							Task_Name as "Task Name"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Task_Owner as "Task Owner"
							Task_Name as "Task Name"
							Task_Type as "Task Type"
							End_Date as "End Date"
							Recur_Type as "Recur Type"
							Number_of_Weeks as "Frequency (every)"
							Number_of_Month as "Frequency (every)"
							Description
							Assign_to as "Assigned To"
							Priority
							Status
							Created_By as "Created By"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Job_Infos
	{
		displayname= "Job Infos"
		icon = "users-2-a-time"
		form Job_Info
		{
			displayname = "Job Info"
			success message = "Job Info Added Successfully"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Job_Id
			(
    			type = text
				displayname = "Job Id"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Status
			(
				type = picklist
				maxchar = 100
				values = {"Open", "Closed"}
				initial value = "Open"
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "users-2-a-time"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Job_Infos
		{
			displayName = "All Job Infos"
   			hide = true
			show all rows from Job_Info    
			(
				Job_Id as "Job Id"
				Status
			)
			options
			(
				icon = "education-award-55"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Job_Id as "Job Id"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Job_Id as "Job Id"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
		 functions
		 {
			 Deluge
			 {
				 string TimeCalculations.getStringTime(int hrsVal, int minsVal)
         {
         	strhrs = hrsVal.toString();
         	strmins = minsVal.toString();
         	if(input.hrsVal < 10)
         	{
         		strhrs = "0" + hrsVal;
         	}
         	if(input.minsVal < 10)
         	{
         		strmins = "0" + minsVal;
         	}
         	return strhrs + ":" + strmins;
         }
				 bool TimeCalculations.timeVal(string timeVal)
         {
         	//Validating the time format here
         	hrsVal = timeVal.getPrefix(":");
         	minsVal = timeVal.getSuffix(":");
         	if(isNumber(hrsVal) && isNumber(minsVal))
         	{
         		hrsValInt = hrsVal.toLong();
         		minsValInt = minsVal.toLong();
         		if(hrsValInt < 24 && minsValInt < 60)
         		{
         			return true;
         		}
         		else
         		{
         			return false;
         		}
         	}
         	else
         	{
         		return false;
         	}
         }
				 date TimeCalculations.addHoursToDate(date logDate, string hrs)
         {
         	//Here adding hours to the given date
         	hrsVal = hrs.getPrefix(":").toLong();
         	minsVal = hrs.getSuffix(":").toLong();
         	return logDate.toTime().addHour(hrsVal).addMinutes(minsVal);
         }
				 string TimeCalculations.getDifference(date startDate, date endDate)
         {
         	//Calculating the hours difference from given two dates
         	millihrs = (endDate - startDate);
         	if(millihrs <= 0)
         	{
         		timeVal = "00:00";
         	}
         	else
         	{
         		hrsVal = ((millihrs % 86400000) / 3600000).toLong();
         		minsVal = ((millihrs % 86400000 % 3600000) / 60000).toLong();
         		timeVal = thisapp.TimeCalculations.getStringTime(hrsVal,minsVal);
         	}
         	return timeVal;
         }
				 string TimeCalculations.hoursCalculation(string startTime, string endTime, date dateVal)
         {
         	startDate = thisapp.TimeCalculations.addHoursToDate(dateVal,startTime);
         	endDate = thisapp.TimeCalculations.addHoursToDate(dateVal,endTime);
         	timeVal = thisapp.TimeCalculations.getDifference(startDate,endDate);
         	return timeVal;
         }
				 bool TimeCalculations.timeValidation(string timeVal)
         {
         	//Validating the time format here
         	hrsVal = timeVal.getPrefix(":");
         	minsVal = timeVal.getSuffix(":");
         	if(isNumber(hrsVal) && isNumber(minsVal))
         	{
         		hrsValInt = hrsVal.toLong();
         		minsValInt = minsVal.toLong();
         		if(hrsValInt <= 24 && minsValInt < 60)
         		{
         			return true;
         		}
         		else
         		{
         			return false;
         		}
         	}
         	else
         	{
         		return false;
         	}
         }
				 void redirect_activity(Add_Activities add_act_obj)
         {
         	type = add_act_obj.Type;
         	if(type == "Employee Time Off")
         	{
         		// redirect to employee time off
         		openUrl("https://creatorapp.zoho.com/lifetimeepoxyutah/fms-app/record-summary/Leave_Approvals/" + add_act_obj.record_Id + "/","Popup window","height=500,width=500");
         	}
         	else if(type == "Task")
         	{
         		// redirect to employee time off
         		openUrl("https://creatorapp.zoho.com/lifetimeepoxyutah/fms-app/record-summary/All_Open_Tasks/" + add_act_obj.record_Id + "/","Popup window","height=500,width=500");
         	}
         	else if(type == "Event")
         	{
         		// redirect to event
         		openUrl("https://creatorapp.zoho.com/lifetimeepoxyutah/fms-app/record-summary/Open_Events/" + add_act_obj.record_Id + "/","Popup window","height=500,width=500");
         	}
         	else if(type == "Bank Holiday's")
         	{
         		// redirect to bank holidays
         		openUrl("https://creatorapp.zoho.com/lifetimeepoxyutah/fms-app/record-summary/All_Holidays/" + add_act_obj.record_Id + "/","Popup window","height=500,width=500");
         	}
         	else if(type == "Scheduled Job")
         	{
         		//openUrl("#Report:All_Scheduled_Job?ID=" + add_act_obj.ID,"same window");
         		openUrl("https://creatorapp.zoho.com/lifetimeepoxyutah/fms-app/record-summary/All_Jobs/" + add_act_obj.record_Id + "/","Popup window","height=500,width=500");
         	}
         	//https://creatorapp.zoho.com/lifetimeepoxyutah/fms-app/summary/All_Schedules/4264835000000204039
         	else if(type == "Employee Birthday")
         	{
         		openUrl("https://creatorapp.zoho.com/lifetimeepoxyutah/fms-app/record-summary/Employee_Birthday/" + add_act_obj.record_Id + "/","Popup window","height=500,width=500");
         	}
         }
				 void time_logs.checin_check_out(Add_Schedule add_job_obj)
         {
         	//add_job_obj.Log_Status="Checked In";
         	// 	info add_job_obj.Log_Status;
         }
				 void time_logs.log_checkedOut(Add_Schedule add_job_obj)
         {
         	add_job_obj.Log_Status="Checked Out";
         	//info add_job_obj.Log_Status;
         	log_data = Time_Logs[Log_Time_Id == add_job_obj.ID.toString()];
         	close_currenttime = add_job_obj.Closing_Date.toTime();
         	close_currenttime = zoho.currenttime;
         	log_data.End_Time1=close_currenttime.toString();
         	hrs_cal = add_job_obj.Start_Date.hoursBetween(add_job_obj.Closing_Date);
         	log_data.Hours1=hrs_cal;
         }
				 void time_logs.checin(Add_Schedule add_job_obj)
         {
         	add_job_obj.Log_Status="Checked In";
         	add_job_obj.Status="In Progress";
         	// 	info add_job_obj.Log_Status;
         	start_currenttime = add_job_obj.Start_Date;
         	start_currenttime = zoho.currenttime;
         	time_sheet_data = insert into Time_Logs
         	[
         		Added_User=zoho.loginuser
         		From_Time=start_currenttime
         		Task=add_job_obj.Additional_Job_Notes
         		Description=add_job_obj.Additional_Job_Notes
         		Date_field=zoho.currentdate
         		Status="Open"
         		Track_as="Start & End"
         		Log_Time_Id=add_job_obj.ID
         		users=zoho.loginuser
         	];
         }
				 void time_logs.checkedOut(Add_Schedule add_job_obj)
         {
         	add_job_obj.Log_Status="Checked Out";
         	//info add_job_obj.Log_Status;
         	log_data = Time_Logs[Log_Time_Id == add_job_obj.ID.toString()];
         	close_currenttime = add_job_obj.Closing_Date.toTime();
         	close_currenttime = zoho.currenttime;
         	log_data.End_Time1=close_currenttime.toString();
         	hrs_cal = add_job_obj.Start_Date.hoursBetween(add_job_obj.Closing_Date);
         	log_data.Hours1=hrs_cal;
         }
				 void EmployeeBirthday.Employee_Birthday()
         {
         	// 	data = zoho.currenttime;
         	// 	info toString(data, "dd-mm");
         }
				 void Test.hrsbettween(int id)
         {
         	// 	start_time = '18-Dec-2019 09:30:00';
         	// 	end_time = '18-Dec-2019 09:35:00';
         	// 	mil_sec = (end_time - start_time);
         	// 	actual_minutes = mil_sec / (1000 * 60);
         	// 	mins = actual_minutes.toLong() % 60;
         	// 	hours = (actual_minutes / 60).toLong();
         	// 	time_string = hours + " : " + mins;
         	// 	info time_string;
         	Thursday_val = 0;
         	Hours = '13:60';
         	//13.4166666666666667
         	or_time = Hours.toList(":");
         	info "or_time" + or_time;
         	hrs = or_time.get(0).toLong();
         	info "hrs" + hrs;
         	mins = or_time.get(1).toLong();
         	info "mins" + mins;
         	total_mins = ifnull(hrs,0) * 60 + ifnull(mins,0);
         	info "total_mins" + total_mins;
         	Thursday_val = Thursday_val + total_mins;
         	//info "Thursday_val"+Thursday_val;
         	var = Thursday_val.toNumber();
         	info "var" + var;
         	hours_Thursday = var / 60;
         	info "hours_Thursday" + hours_Thursday.round(0);
         	// 	num = 5/60;
         	// 	info num;
         }
				 void Test.Dob_Test(int Id)
         {
         	emp_data = Add_Employee[ID == Id];
         	// 	info emp_data;
         	Date_of_Birth1 = emp_data.Date_of_Birth.toString("MMM dd");
         	Start_Date = emp_data.Date_of_Birth.getYear() + 1;
         	// 	info Start_Date;
         }
				 void Time_Tracking.Clock_In(int job_id)
         {
         	Job_data = Add_Schedule[ID == job_id];
         	start_currenttime = Job_data.Start_Date.toTime();
         	start_currenttime = zoho.currenttime;
         	time_sheet_data = insert into Time_Logs
         	[
         		Added_User=zoho.loginuser
         		From_Time=start_currenttime
         		Task=Job_data.Additional_Job_Notes
         		Description=Job_data.Additional_Job_Notes
         		Date_field=zoho.currentdate
         		Status="Open"
         		Track_as="Start & End"
         		Log_Time_Id=Job_data.ID
         	];
         	Status = "In Progress";
         }
				 void update_approvers(Add_Crew record_id)
         {
         	fet = Add_Crew[ID == record_id];
         	SuperIntendent = fet.SuperIntendent;
         	CrewLead = fet.Crew_Lead;
         	crewMembers = fet.Crew_Members;
         	// 	info "SuperIntendent" + SuperIntendent;
         	// 	info "CrewLead" + CrewLead;
         	// 	info "crewMembers" + crewMembers;
         	Approverlist = {};
         	Approverlist.add(CrewLead);
         	Approverlist.add(SuperIntendent);
         	for each  crewMem in crewMembers
         	{
         		// 		info "the current mem is " + crewMem;
         		fetcrewmem = Add_Employee[ID == crewMem];
         		// 		Approverlist.add(fetcrewmem.owner);
         		// 		fetcrewmem.Leave_Approvers.clear();
         		// 		info "Approverlist" + Approverlist;
         		fetcrewmem.Leave_Approvers=Approverlist;
         		//fetcrewmem.Leave_Approver_1=SuperIntendent;
         		//fetcrewmem.Leave_Approver_2=CrewLead;
         		//fetcrewmem.Leave_Approvers1=Approverlist;
         		// 		fetcrewmem.TimeLog_Approvers.clear();
         		// 		fetcrewmem.TimeLog_Approvers=Approverlist;
         		fetcrewmem.TimeLog_Approvers.add(fetcrewmem.owner);
         		//fetcrewmem.TimeLog_Approver_1=SuperIntendent;
         		//fetcrewmem.TimeLog_Approver_2=CrewLead;
         	}
         	fetCrewLead = Add_Employee[ID == CrewLead];
         	Approverlist = {};
         	Approverlist.add(SuperIntendent);
         	Approverlist.add(fetCrewLead.owner);
         	//fetCrewLead.Leave_Approver_1=SuperIntendent;
         	fetCrewLead.Leave_Approvers.clear();
         	fetCrewLead.Leave_Approvers=Approverlist;
         	//fetCrewLead.TimeLog_Approver_1=SuperIntendent;
         	fetCrewLead.TimeLog_Approvers.clear();
         	fetCrewLead.TimeLog_Approvers=Approverlist;
         	//fetCrewLead.TimeSheet_Approvers=SuperIntendent;
         	//4264835000000297027
         	//4264835000000297031
         	//return "Hello";
         }
				 void Calculate_time_in_decimal(Time_Logs hours)
         {
         	time = hours;
         	timeList = time.toList(":");
         	hour = timeList.get(0);
         	minutes = timeList.get(1);
         	timeindecimal = (hour + minutes / 60).toNumber();
         	Time_in_Hours = timeindecimal;
         	// 	info timeList;
         	// 	info hour;
         	// 	info minutes;
         	// 	info timeindecimal;
         }
				 void test()
         {
         	timelogs = Time_Logs[Emp_email == zoho.loginuserid && Status1 == "Draft" && Date_Range == "05-Jun-2022 - 11-Jun-2022"];
         	info timelogs.Log_Type;
         	timelogs.Log_Type="Weekly Logs";
         	// 	fet = Add_Crew[ID == record_id];
         	// 	SuperIntendent = fet.SuperIntendent;
         	// 	CrewLead = fet.Crew_Lead;
         	// 	crewMembers = fet.Crew_Members;
         	// 	info "SuperIntendent" + SuperIntendent;
         	// 	info "CrewLead" + CrewLead;
         	// 	info "crewMembers" + crewMembers;
         	// 	Approverlist = {};
         	// 	Approverlist.add(CrewLead);
         	// 	Approverlist.add(SuperIntendent);
         	// 	for each  crewMem in crewMembers
         	// 	{
         	// 		fetcrewmem = Add_Employee[ID == crewMem];
         	// 		fetcrewmem.Leave_Approvers=Approverlist;
         	// 		//fetcrewmem.Leave_Approver_1=SuperIntendent;
         	// 		//fetcrewmem.Leave_Approver_2=CrewLead;
         	// 		//fetcrewmem.Leave_Approvers1=Approverlist;
         	// 		fetcrewmem.TimeLog_Approvers=Approverlist;
         	// 		//fetcrewmem.TimeLog_Approver_1=SuperIntendent;
         	// 		//fetcrewmem.TimeLog_Approver_2=CrewLead;
         	// 	}
         	// 	fetCrewLead = Add_Employee[ID == CrewLead];
         	// 	//fetCrewLead.Leave_Approver_1=SuperIntendent;
         	// 	fetCrewLead.Leave_Approvers=SuperIntendent;
         	// 	//fetCrewLead.TimeLog_Approver_1=SuperIntendent;
         	// 	fetCrewLead.TimeLog_Approvers=SuperIntendent;
         	//fetCrewLead.TimeSheet_Approvers=SuperIntendent;
         	//4264835000000297027
         	//4264835000000297031
         	//return "Hello";
         }
				 void updateOwners()
         {
         	fetowners = Add_Employee[ID != 0 && Role == "Owner"];
         	Ownerlist1 = {};
         	OwnerEmails = {};
         	for each  owner in fetowners
         	{
         		// 		info owner.Email_address;
         		Ownerlist1.add(owner);
         		OwnerEmails.add(owner.Email_address);
         	}
         	// // 	info Ownerlist1;
         	fetemp = Add_Employee[ID != 0];
         	for each  emp in fetemp
         	{
         		emp.owner=Ownerlist1;
         		emp.Owners_Email=OwnerEmails;
         		// 		info emp.owner;
         	}
         }
				 void time_logs.updateTimeLog2Weekly(string date_range)
         {
         	timelogs = Time_Logs[Emp_email == zoho.loginuserid && Status1 == "Draft" && Date_Range == date_range];
         	// 	info timelogs;
         	//info timelogs.Log_Type;
         	for each  log in timelogs
         	{
         		log.Log_Type="Weekly Logs";
         		log.Status1="Pending Approval";
         	}
         }
				 void time_logs.updateApprovers(int empID)
         {
         	//4264835000000386199
         	fetemp = Time_Logs[ID == empID];
         	ApproverList = {};
         	ApproverEmails = {};
         	for each  emp in fetemp
         	{
         		// 		info owner.Email_address;
         		ApproverList.add(emp.TimeLog_Approvers);
         		approverEmail = emp.TimeLog_Approvers;
         		for each  approver in approverEmail
         		{
         			ApproverEmails.add(approver.Email_address);
         		}
         	}
         	// // 	info Ownerlist1;
         	fetemp.Approver_Emails=ApproverEmails;
         }
				 void Test.amformat(int id)
         {
         	data_val = Time_Logs[ID == id];
         	// 	date_time = data_val.Date_field.toString();
         	// 	from_time = data_val.From_Time.toString();
         	// 	start = date_time + " " + from_time;
         	// 	start_time = start.toTime();
         	// 	to_time = data_val.End_Time1.toString();
         	// 	end = date_time + " " + to_time;
         	// 	end_time = end.toTime();
         	// 	mil_sec = (end_time - start_time);
         	// 	actual_minutes = mil_sec / (1000 * 60);
         	// 	mins = actual_minutes % 60;
         	// 	hours = (actual_minutes / 60).toLong();
         	// 	time_string = hours + ":" + mins;
         	time = data_val.Hours1;
         	timeList = time.toList(":");
         	hour = timeList.get(0).toNumber();
         	minutes = timeList.get(1).toNumber();
         	min = minutes * 60;
         	total_min = min / 60;
         	timeindecimal = hour + ":" + total_min;
         	Hours = timeindecimal;
         	info "timeList" + timeList;
         	info "hour" + hour;
         	info "minutes" + minutes;
         	info "Hours" + Hours;
         }
				 void recurringtype.Monthlytaskcreating(int id)
         {
         	data_val = Add_Task[ID == id];
         	from_date = data_val.Due_Date1;
         	end_date = data_val.End_Date;
         	list_of_dates = List();
         	dummy_list = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53};
         	start_date = data_val.Due_Date1.toDate();
         	info start_date;
         	freeq = data_val.Number_of_Month;
         	recur_type = data_val.Recur_Type;
         	if(recur_type == "Monthly")
         	{
         		// 	info freeq ;
         		if(freeq == "1")
         		{
         			for each  new_var in dummy_list
         			{
         				if(start_date < end_date)
         				{
         					start_date = start_date.addMonth(1);
         					data_insert = insert into Add_Task
         					[
         						Task_Name=data_val.Task_Name
         						Due_Date1=start_date
         						End_Date=data_val.End_Date
         						Due_Date=data_val.Due_Date
         						Description=data_val.Description
         						Status=data_val.Status
         						Assign_to=data_val.Assign_to
         						Priority=data_val.Priority
         						Recur_Type=data_val.Recur_Type
         						Added_User=zoho.loginuser
         					];
         				}
         				else
         				{
         					info "no more records";
         					break;
         				}
         			}
         		}
         		if(freeq == "2")
         		{
         			for each  new_var in dummy_list
         			{
         				if(start_date < end_date)
         				{
         					start_date = start_date.addMonth(2);
         					data_insert = insert into Add_Task
         					[
         						Task_Name=data_val.Task_Name
         						Due_Date1=start_date
         						End_Date=data_val.End_Date
         						Due_Date=data_val.Due_Date
         						Description=data_val.Description
         						Status=data_val.Status
         						Assign_to=data_val.Assign_to
         						Priority=data_val.Priority
         						Recur_Type=data_val.Recur_Type
         						Added_User=zoho.loginuser
         					];
         				}
         				else
         				{
         					info "Exit more records";
         					break;
         				}
         			}
         		}
         		if(freeq == "3")
         		{
         			for each  new_var in dummy_list
         			{
         				if(start_date < end_date)
         				{
         					start_date = start_date.addMonth(3);
         					data_insert = insert into Add_Task
         					[
         						Task_Name=data_val.Task_Name
         						Due_Date1=start_date
         						End_Date=data_val.End_Date
         						Due_Date=data_val.Due_Date
         						Description=data_val.Description
         						Status=data_val.Status
         						Assign_to=data_val.Assign_to
         						Priority=data_val.Priority
         						Recur_Type=data_val.Recur_Type
         						Added_User=zoho.loginuser
         					];
         				}
         				else
         				{
         					info "Exit more records";
         					break;
         				}
         			}
         		}
         		if(freeq == "4")
         		{
         			for each  new_var in dummy_list
         			{
         				if(start_date < end_date)
         				{
         					start_date = start_date.addMonth(4);
         					data_insert = insert into Add_Task
         					[
         						Task_Name=data_val.Task_Name
         						Due_Date1=start_date
         						End_Date=data_val.End_Date
         						Due_Date=data_val.Due_Date
         						Description=data_val.Description
         						Status=data_val.Status
         						Assign_to=data_val.Assign_to
         						Priority=data_val.Priority
         						Recur_Type=data_val.Recur_Type
         						Added_User=zoho.loginuser
         					];
         				}
         				else
         				{
         					info "Exit more records";
         					break;
         				}
         			}
         		}
         		if(freeq == "5")
         		{
         			for each  new_var in dummy_list
         			{
         				if(start_date < end_date)
         				{
         					start_date = start_date.addMonth(5);
         					data_insert = insert into Add_Task
         					[
         						Task_Name=data_val.Task_Name
         						Due_Date1=start_date
         						End_Date=data_val.End_Date
         						Due_Date=data_val.Due_Date
         						Description=data_val.Description
         						Status=data_val.Status
         						Assign_to=data_val.Assign_to
         						Priority=data_val.Priority
         						Recur_Type=data_val.Recur_Type
         						Added_User=zoho.loginuser
         					];
         				}
         				else
         				{
         					info "Exit more records";
         					break;
         				}
         			}
         		}
         		if(freeq == "6")
         		{
         			for each  new_var in dummy_list
         			{
         				if(start_date < end_date)
         				{
         					start_date = start_date.addMonth(6);
         					data_insert = insert into Add_Task
         					[
         						Task_Name=data_val.Task_Name
         						Due_Date1=start_date
         						End_Date=data_val.End_Date
         						Due_Date=data_val.Due_Date
         						Description=data_val.Description
         						Status=data_val.Status
         						Assign_to=data_val.Assign_to
         						Priority=data_val.Priority
         						Recur_Type=data_val.Recur_Type
         						Added_User=zoho.loginuser
         					];
         				}
         				else
         				{
         					info "Exit more records";
         					break;
         				}
         			}
         		}
         		if(freeq == "7")
         		{
         			for each  new_var in dummy_list
         			{
         				if(start_date < end_date)
         				{
         					start_date = start_date.addMonth(7);
         					data_insert = insert into Add_Task
         					[
         						Task_Name=data_val.Task_Name
         						Due_Date1=start_date
         						End_Date=data_val.End_Date
         						Due_Date=data_val.Due_Date
         						Description=data_val.Description
         						Status=data_val.Status
         						Assign_to=data_val.Assign_to
         						Priority=data_val.Priority
         						Recur_Type=data_val.Recur_Type
         						Added_User=zoho.loginuser
         					];
         				}
         				else
         				{
         					info "Exit more records";
         					break;
         				}
         			}
         		}
         		if(freeq == "8")
         		{
         			for each  new_var in dummy_list
         			{
         				if(start_date < end_date)
         				{
         					start_date = start_date.addMonth(8);
         					data_insert = insert into Add_Task
         					[
         						Task_Name=data_val.Task_Name
         						Due_Date1=start_date
         						End_Date=data_val.End_Date
         						Due_Date=data_val.Due_Date
         						Description=data_val.Description
         						Status=data_val.Status
         						Assign_to=data_val.Assign_to
         						Priority=data_val.Priority
         						Recur_Type=data_val.Recur_Type
         						Added_User=zoho.loginuser
         					];
         				}
         				else
         				{
         					info "Exit more records";
         					break;
         				}
         			}
         		}
         		if(freeq == "9")
         		{
         			for each  new_var in dummy_list
         			{
         				if(start_date < end_date)
         				{
         					start_date = start_date.addMonth(9);
         					data_insert = insert into Add_Task
         					[
         						Task_Name=data_val.Task_Name
         						Due_Date1=start_date
         						End_Date=data_val.End_Date
         						Due_Date=data_val.Due_Date
         						Description=data_val.Description
         						Status=data_val.Status
         						Assign_to=data_val.Assign_to
         						Priority=data_val.Priority
         						Recur_Type=data_val.Recur_Type
         						Added_User=zoho.loginuser
         					];
         				}
         				else
         				{
         					info "Exit more records";
         					break;
         				}
         			}
         		}
         		if(freeq == "10")
         		{
         			for each  new_var in dummy_list
         			{
         				if(start_date < end_date)
         				{
         					start_date = start_date.addMonth(10);
         					data_insert = insert into Add_Task
         					[
         						Task_Name=data_val.Task_Name
         						Due_Date1=start_date
         						End_Date=data_val.End_Date
         						Due_Date=data_val.Due_Date
         						Description=data_val.Description
         						Status=data_val.Status
         						Assign_to=data_val.Assign_to
         						Priority=data_val.Priority
         						Recur_Type=data_val.Recur_Type
         						Added_User=zoho.loginuser
         					];
         				}
         				else
         				{
         					info "Exit more records";
         					break;
         				}
         			}
         		}
         		if(freeq == "11")
         		{
         			for each  new_var in dummy_list
         			{
         				if(start_date < end_date)
         				{
         					start_date = start_date.addMonth(11);
         					data_insert = insert into Add_Task
         					[
         						Task_Name=data_val.Task_Name
         						Due_Date1=start_date
         						End_Date=data_val.End_Date
         						Due_Date=data_val.Due_Date
         						Description=data_val.Description
         						Status=data_val.Status
         						Assign_to=data_val.Assign_to
         						Priority=data_val.Priority
         						Recur_Type=data_val.Recur_Type
         						Added_User=zoho.loginuser
         					];
         				}
         				else
         				{
         					info "Exit more records";
         					break;
         				}
         			}
         		}
         		if(freeq == "12")
         		{
         			for each  new_var in dummy_list
         			{
         				if(start_date < end_date)
         				{
         					start_date = start_date.addMonth(12);
         					data_insert = insert into Add_Task
         					[
         						Task_Name=data_val.Task_Name
         						Due_Date1=start_date
         						End_Date=data_val.End_Date
         						Due_Date=data_val.Due_Date
         						Description=data_val.Description
         						Status=data_val.Status
         						Assign_to=data_val.Assign_to
         						Priority=data_val.Priority
         						Recur_Type=data_val.Recur_Type
         						Added_User=zoho.loginuser
         					];
         				}
         				else
         				{
         					info "Exit more records";
         					break;
         				}
         			}
         		}
         	}
         }
				 void recurringtype.Yearlytaskcreating(int id)
         {
         	data_val = Add_Task[ID == id];
         	from_date = data_val.Due_Date1;
         	end_date = data_val.End_Date;
         	list_of_dates = List();
         	dummy_list = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53};
         	start_date = data_val.Due_Date1.toDate();
         	info start_date;
         	recur_type = data_val.Recur_Type;
         	//info recur_type ;
         	if(recur_type == "Yearly")
         	{
         		for each  new_var in dummy_list
         		{
         			if(start_date < end_date)
         			{
         				start_date = start_date.addYear(1);
         				info start_date;
         				data_insert = insert into Add_Task
         				[
         					Task_Name=data_val.Task_Name
         					Due_Date1=start_date
         					End_Date=data_val.End_Date
         					Due_Date=data_val.Due_Date
         					Description=data_val.Description
         					Status=data_val.Status
         					Assign_to=data_val.Assign_to
         					Priority=data_val.Priority
         					Recur_Type=data_val.Recur_Type
         					Added_User=zoho.loginuser
         				];
         			}
         			else
         			{
         				info "no more records";
         				break;
         			}
         		}
         	}
         }
				 void recurringtype.weeklytaskcreating(int id)
         {
         	data_val = Add_Task[ID == id];
         	from_date = data_val.Due_Date1;
         	end_date = data_val.End_Date;
         	list_of_dates = List();
         	dummy_list = {1,2,3,4,5,6,7,8,9,10};
         	start_date = data_val.Due_Date1.toDate();
         	info start_date;
         	freeq = data_val.Number_of_Weeks;
         	// 	info freeq ;
         	recur_type = data_val.Recur_Type;
         	if(recur_type == "Weekly")
         	{
         		if(freeq == "1")
         		{
         			for each  new_var in dummy_list
         			{
         				if(start_date < end_date)
         				{
         					info start_date;
         					start_date = start_date.addWeek(1);
         					data_insert = insert into Add_Task
         					[
         						Task_Name=data_val.Task_Name
         						Due_Date1=start_date
         						End_Date=data_val.End_Date
         						Due_Date=data_val.Due_Date
         						Description=data_val.Description
         						Status=data_val.Status
         						Assign_to=data_val.Assign_to
         						Priority=data_val.Priority
         						Recur_Type=data_val.Recur_Type
         						Added_User=zoho.loginuser
         					];
         				}
         				else
         				{
         					info "no more records";
         					break;
         				}
         			}
         		}
         		if(freeq == "2")
         		{
         			for each  new_var in dummy_list
         			{
         				if(start_date < end_date)
         				{
         					start_date = start_date.addWeek(2);
         					data_insert = insert into Add_Task
         					[
         						Task_Name=data_val.Task_Name
         						Due_Date1=start_date
         						End_Date=data_val.End_Date
         						Due_Date=data_val.Due_Date
         						Description=data_val.Description
         						Status=data_val.Status
         						Assign_to=data_val.Assign_to
         						Priority=data_val.Priority
         						Recur_Type=data_val.Recur_Type
         						Added_User=zoho.loginuser
         					];
         				}
         				else
         				{
         					info "Exit";
         					break;
         				}
         			}
         		}
         		if(freeq == "3")
         		{
         			for each  new_var in dummy_list
         			{
         				if(start_date < end_date)
         				{
         					start_date = start_date.addWeek(3);
         					data_insert = insert into Add_Task
         					[
         						Task_Name=data_val.Task_Name
         						Due_Date1=start_date
         						End_Date=data_val.End_Date
         						Due_Date=data_val.Due_Date
         						Description=data_val.Description
         						Status=data_val.Status
         						Assign_to=data_val.Assign_to
         						Priority=data_val.Priority
         						Recur_Type=data_val.Recur_Type
         						Added_User=zoho.loginuser
         					];
         				}
         				else
         				{
         					info "Exit";
         					break;
         				}
         			}
         		}
         		if(freeq == "4")
         		{
         			for each  new_var in dummy_list
         			{
         				if(start_date < end_date)
         				{
         					start_date = start_date.addWeek(4);
         					data_insert = insert into Add_Task
         					[
         						Task_Name=data_val.Task_Name
         						Due_Date1=start_date
         						End_Date=data_val.End_Date
         						Due_Date=data_val.Due_Date
         						Description=data_val.Description
         						Status=data_val.Status
         						Assign_to=data_val.Assign_to
         						Priority=data_val.Priority
         						Recur_Type=data_val.Recur_Type
         						Added_User=zoho.loginuser
         					];
         				}
         				else
         				{
         					info "Exit";
         					break;
         				}
         			}
         		}
         	}
         }
				 void Test.updateto_crm(int id)
         {
         	// 		data_resp = Add_Schedule [ ID == id ];
         	// 		deal_id = data_resp.Books_Id.toLong();
         	// 		data_map = Map();
         	//         data_map.put("Deal_Name",data_resp.Deal_Name);
         	//         data_map.put("Email",data_resp.Email);
         	//         data_map.put("Phone",data_resp.Phone_Number);
         	//         data_map.put("Closing_Date",data_resp.Closing_Date);
         	//         data_map.put("Start_Date",data_resp.Start_Date);
         	//         data_map.put("Installation_Crew",data_resp.Installation_Crew);
         	//         data_map.put("Flake_Color",data_resp.Flake_Color);
         	//         data_map.put("Floor_Sq_Ft",data_resp.Floor_Sq_Ft);
         	//         data_map.put("Stem_Walls_Stairs_Sq_Ft",data_resp.Stem_Walls_Stairs_Sq_Ft);
         	//         data_map.put("Additional_Job_Notes",data_resp.Additional_Job_Notes);
         	//         other_map = Map();
         	//         update_record = zoho.crm.updateRecord("Deals",deal_id,data_map,other_map,"crm");
         	//         info update_record;
         }
			 }
		 }




		workflow
		{
		form
		{
			Hide_Show_Field as "Hide & Show Field"
			{
				type =  form
				form = Add_Holiday
				record event = on add

				field rules
				{
				}

			}
			Hide_Show_Field1 as "Hide & Show Field"
			{
				type =  form
				form = Apply_Leave
				record event = on add

				field rules
				{
					actions  (Type == "Full Day")
					{
						show Form_Date,To_Date,Total_Day_s;
					}
					actions  (Type == "Partial Day" || Type == "Partial Day")
					{
						show Date_field,Total_Day_s;
					}
					actions 
					{
						disable Employee1;
					}
					actions 
					{
						hide Leave_Taken_By,Employee_ID,Leave_Approvers,Employee_Email;
					}
				}

			}
			Hide_Show_Field2 as "Hide & Show Field"
			{
				type =  form
				form = Add_Leave_Type
				record event = on add

				field rules
				{
					actions  (Applicable_for == "Specific Employees")
					{
						show Department,Designation,Location;
					}
				}

			}
			Hide_Show_Field3 as "Hide & Show Field"
			{
				type =  form
				form = Add_Schedule
				record event = on add

				field rules
				{
				}

			}
			number_of_days as "number of days"
			{
				type =  form
				form = Apply_Leave
				record event = on add

				on user input of To_Date
				{
					actions 
					{
						custom deluge script
						(
											date = days360(input.Form_Date,input.To_Date);
										//date = days360(input.Form_Date,input.To_Date);
										input.Total_Day_s = (date + 1).toDecimal();
										// data_rec = Apply_Leave[Employee == input.Employee];
										// //info data_rec;
										// i = 0;
										// for each  li_list in data_rec
										// {
										// 	i = i + ifnull(li_list.Total_Day_s,0);
										// }
										// input.Leave_Taken_By = i;
						)
					}
				}

			}
			Leave_Type as "Leave Type"
			{
				type =  form
				form = Apply_Leave
				record event = on add

				on user input of Leave_Type
				{
				}

			}
			Hide as "Hide"
			{
				type =  form
				form = Add_Schedule
				record event = on add or edit

				on load
				{
					actions 
					{
						custom deluge script
						(
											//hide Client_Name;
										//hide Employee_Name;
										hide Log_Status;
										hide Log_Time_Id;
						)
					}
				}

			}
			Sync_to_Reports as "Sync to Reports"
			{
				type =  form
				form = Add_Activities
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											if(input.Type == "Event")
										{
											event_data = insert into Add_Event
											[
												Event_Name=input.Event_Name
												Start_Date=input.Start_Date
												End_Date=input.End_Date
												Discription=input.Description
												Added_User=zoho.loginuser
											];
										}
										else if(input.Type == "Bank Holiday's")
										{
											bank_data = insert into Add_Holiday
											[
												Name=input.Event_Name
												Start_Date=input.Start_Date
												End_Date=input.Start_Date
												Description=input.Description
												Added_User=zoho.loginuser
											];
										}
										else if(input.Type == "Scheduled Job")
										{
											bank_data = insert into Add_Schedule
											[
												Client_Name=input.Client_Name
												Start_Date=input.Start_Date
												Closing_Date=input.End_Date
												Additional_Job_Notes=input.Description
												Deal_Name=input.Event_Name
												Added_User=zoho.loginuser
											];
										}
										else if(input.Type == "Employee Time Off")
										{
											bank_data = insert into Apply_Leave
											[
												Employee1=input.Employee_Name
												Type=input.Type1
												Form_Date=input.Start_Date
												To_Date=input.End_Date
												Date_field=input.Date_field
												Reason_for_leave=input.Description
												Added_User=zoho.loginuser
											];
										}
						)
					}
				}

			}
			Hide_Show_Field7 as "Hide & Show Field"
			{
				type =  form
				form = Add_Activities
				record event = on add

				field rules
				{
					actions  (Type == "Scheduled Job")
					{
						show Start_Date,End_Date,Description,Client_Name;
					}
					actions  (Type == "Employee Time Off")
					{
						show Type1,Start_Date,End_Date,Description,Event_Name,Employee_Name;
					}
					actions  (Type1 == "Half Day")
					{
						show Date_field;
					}
					actions  (Type == "Event")
					{
						show Event_Name,Start_Date,End_Date,Description;
					}
					actions  (Type == "Bank Holiday's")
					{
						show Event_Name,Start_Date,End_Date,Description;
					}
					actions  (Type == "Employee Birthday")
					{
						show Event_Name,Description,Employee_Name,Date_of_Birth1,Start_Date;
					}
					actions  (Type == "Task")
					{
						show Event_Name,Start_Date,End_Date;
					}
				}

			}
			Employee_Data_Map as "Employee Data Map"
			{
				type =  form
				form = Add_Activities
				record event = on add
					status = inactive

				on user input of Employee_Name
				{
					actions 
					{
						custom deluge script
						(
											// data_map = Add_Employee[First_Name == input.Employee_Name.First_Name];
										// // birth_date = toString(input.Date_of_Birth,"MMM dd");
										// input.Date_of_Birth1 = data_map.Date_of_Birth.toString("MMM dd");
										// input.Start_Date = data_map.Date_of_Birth;
										// input.End_Date = data_map.Date_of_Birth;
										// input.record_Id = data_map.ID;
						)
					}
				}

			}
			hide_field1 as "hide field"
			{
				type =  form
				form = Add_Schedule
				record event = on add or edit

				on load
				{
					actions 
					{
						custom deluge script
						(
											//hide Status;
										// hide Line_Items.Product;
										hide Line_Items.Composite_Items;
										hide Line_Items.Product_Name;
										// hide Line_Items.Item_Id;
										// hide Associated_Items.Product_Id;
										// hide Associated_Items.Combo_Item_Id;
										hide Client_Id;
										hide users;
										//hide job_users;
										hide Books_Id;
										hide Status;
										//hide Log_Status;
										hide Associate_Completed_Job.Job_Id;
										hide Job_Members;
						)
					}
				}

			}
			Status_Update2 as "Status Update"
			{
				type =  form
				form = Add_Schedule
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											input.Status = "Scheduled";
										input.Log_Status = "Yet to Check";
						)
					}
				}

			}
			Update_Product as "Update Product"
			{
				type =  form
				form = Add_Schedule
				record event = on add or edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											for each  li_list in input.Line_Items
										{
											product_data = Product[Books_Id == li_list.Item_Id];
											li_list.Product=product_data.ID;
											combo_product = Composite_Items[Books_id == li_list.Item_Id];
											li_list.Composite_Items=combo_product.ID;
										}
						)
					}
				}

			}
			Update_Combo_Product as "Update Combo Product"
			{
				type =  form
				form = Add_Schedule
				record event = on add or edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											for each  li_combo in input.Associated_Items
										{
											product_data = Product[Books_Id == li_combo.Combo_Item_Id];
											li_combo.Product_Name=product_data.ID;
											combo_item = Composite_Items[Books_id == li_combo.Product_Id];
											li_combo.Composite_Items_Name=combo_item.ID;
										}
						)
					}
				}

			}
			Cotact_Name_Update as "Cotact Name Update"
			{
				type =  form
				form = Add_Schedule
				record event = on add or edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											data_contact = Add_Client[Contact_Id == input.Client_Id];
										input.Client_Name = data_contact.ID;
						)
					}
				}

			}
			Update_Crew_Information as "Update Crew Information"
			{
				type =  form
				form = Add_Schedule
				record event = on add or edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											data_rec = Add_Crew[Crew_Name == input.Installation_Crew];
										input.Crew_Lead1 = data_rec.Crew_Lead;
										input.Crew_Lead = data_rec.Crew_Members;
										input.Superintendent = data_rec.SuperIntendent;
										//input.Associate_Completed_Job.User_Added_By = zoho.loginuser;
										// memList = {};
										// memList.add(input.Superintendent.First_Name);
										// memList.add(input.Crew_Lead1.First_Name);
										// memList.add(input.Crew_Lead.First_Name);
										// input.Job_Members = memList;
						)
					}
				}

			}
			Predefine_Date_Update as "Predefine Date Update"
			{
				type =  form
				form = Add_weekly_Logs
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											input.From = toStartOfWeek(zoho.currentdate);
										input.To = toStartOfWeek(zoho.currentdate).addDay(6);
										//disable From;
										disable To;
										fetemp = Add_Employee[Email_address == zoho.loginuserid];
										fetempID = fetemp.ID;
										input.Employee_Email = fetemp.ID;
										//info fetempID;
										//info fetemp.Leave_Approvers;
										// info fetemp.Leave_Approver2;
										input.TimeLog_Approvers = fetemp.TimeLog_Approvers;
										input.Date_Range = input.From + " - " + input.To;
						)
					}
				}

			}
			Subform_Update as "Subform Update"
			{
				type =  form
				form = Add_weekly_Logs
				record event = on add or edit

				on add row of Logs
				{
					actions 
					{
						custom deluge script
						(
											if(input.From != null && input.To != null)
										{
											if(input.From > zoho.currentdate)
											{
												row.Sunday="00:00";
											}
											if(From.addDay(1) > zoho.currentdate)
											{
												row.Monday="00:00";
											}
											if(From.addDay(2) > zoho.currentdate)
											{
												row.Tuesday="00:00";
											}
											if(From.addDay(3) > zoho.currentdate)
											{
												row.Wednesday="00:00";
											}
											if(From.addDay(4) > zoho.currentdate)
											{
												row.Thursday="00:00";
											}
											if(From.addDay(5) > zoho.currentdate)
											{
												row.Friday="00:00";
											}
											if(From.addDay(6) > zoho.currentdate)
											{
												row.Saturday="00:00";
											}
											trackedLogsForWeek = Time_Logs[Date_field >= input.From && Date_field <= input.To && users == zoho.loginuser].ID.getAll();
											logCount = 0;
											for each  eachRow in Logs
											{
												logCount = logCount + 1;
											}
											if(logCount > 0)
											{
												for each  eachRow in Logs
												{
													sameLogs = Time_Logs[Job_Name == eachRow.Job_Name && Task == eachRow.Task && Date_field >= input.From && Date_field <= input.To && users == zoho.loginuser].ID.getAll();
													trackedLogsForWeek.removeall(sameLogs);
												}
											}
											if(trackedLogsForWeek.size() > 0)
											{
												//Prefilling the log details with tracked time logs
												trackedLogs = Time_Logs[ID == trackedLogsForWeek.get(0)];
												row.Task=trackedLogs.Task;
												row.Job_Name=trackedLogs.Job_Name;
												repeatedLogs = Time_Logs[Job_Name == trackedLogs.Job_Name && Task == trackedLogs.Task && Date_field >= input.From && Date_field <= input.To && users == zoho.loginuser];
												info repeatedLogs;
												i = 0;
												sunday_val = 0;
												monday_val = 0;
												tuesday_val = 0;
												Wednesday_val = 0;
												hours_temp = 0;
												hours_monday = 0;
												hours_sunday = 0;
												hours_Wednesday = 0;
												Thursday_val = 0;
												hours_Thursday = 0;
												Saturday_val = 0;
												hours_Saturday = 0;
												Friday_val = 0;
												for each  li_val in repeatedLogs
												{
													date_of_day = li_val.Date_field.getDayOfWeek();
													info date_of_day;
													if(date_of_day == 1)
													{
														info "sunday";
														temp_hours = li_val.Hours1;
														or_time = li_val.Hours1.toList(":");
														hrs = or_time.get(0).toLong();
														mins = or_time.get(1).toLong();
														// 				total_mins = ifnull(hrs,0) * 60 + ifnull(mins,0);
														// 				sunday_val = sunday_val + total_mins;
														// 				var = sunday_val.toNumber();
														// 				// 				total_hours = tuesday_val / 60;
														// 				hours_sunday = var / 60;
														// 				info "hours_sunday"+hours_sunday;
														min = mins * 60;
														total_min = min / 60;
														hours_sunday = hrs + ":" + total_min;
														info "hours_sunday" + hours_sunday;
													}
													else if(date_of_day == 2)
													{
														info "monday";
														temp_hours = li_val.Hours1;
														or_time = li_val.Hours1.toList(":");
														hrs = or_time.get(0).toLong();
														mins = or_time.get(1).toLong();
														total_mins = ifnull(hrs,0) * 60 + ifnull(mins,0);
														monday_val = monday_val + total_mins;
														var = monday_val.toNumber();
														// 				total_hours = tuesday_val / 60;
														hours_monday = var / 60;
													}
													else if(date_of_day == 3)
													{
														info "tuesday";
														temp_hours = li_val.Hours1;
														info temp_hours;
														or_time = li_val.Hours1.toList(":");
														hrs = or_time.get(0).toLong();
														mins = or_time.get(1).toLong();
														total_mins = ifnull(hrs,0) * 60 + ifnull(mins,0);
														tuesday_val = tuesday_val + total_mins;
														var = tuesday_val.toNumber();
														hours_temp = var / 60;
													}
													else if(date_of_day == 4)
													{
														info "Wednesday";
														temp_hours = li_val.Hours1;
														info temp_hours;
														or_time = li_val.Hours1.toList(":");
														hrs = or_time.get(0).toLong();
														mins = or_time.get(1).toLong();
														total_mins = ifnull(hrs,0) * 60 + ifnull(mins,0);
														Wednesday_val = Wednesday_val + total_mins;
														var = Wednesday_val.toTime();
														hours_Wednesday = var / 60;
													}
													else if(date_of_day == 5)
													{
														//info "Thursday";
														temp_hours = li_val.Hours1;
														or_time = li_val.Hours1.toList(":");
														//info "or_time"+or_time;
														hrs = or_time.get(0).toLong();
														//info "hrs"+hrs;
														mins = or_time.get(1).toLong();
														//info "mins"+mins;
														total_mins = ifnull(hrs,0) * 60 + ifnull(mins,0);
														info "total_mins" + total_mins;
														Thursday_val = Thursday_val + total_mins;
														//info "Thursday_val"+Thursday_val;
														var = Thursday_val.toNumber();
														info "var" + var;
														hours_Thursday = var / 60;
														info "hours_Thursday" + hours_Thursday;
													}
													else if(date_of_day == 6)
													{
														info "Friday";
														temp_hours = li_val.Hours1;
														info temp_hours;
														or_time = li_val.Hours1.toList(":");
														hrs = or_time.get(0).toLong();
														mins = or_time.get(1).toLong();
														total_mins = ifnull(hrs,0) * 60 + ifnull(mins,0);
														Friday_val = Friday_val + total_mins;
														var = Friday_val.toTime();
														hours_Friday = var / 60;
													}
													else if(date_of_day == 7)
													{
														info "Saturday";
														temp_hours = li_val.Hours1;
														info temp_hours;
														or_time = li_val.Hours1.toList(":");
														hrs = or_time.get(0).toLong();
														mins = or_time.get(1).toLong();
														total_mins = ifnull(hrs,0) * 60 + ifnull(mins,0);
														Saturday_val = Saturday_val + total_mins;
														var = Saturday_val.toNumber();
														hours_Saturday = var / 60;
													}
												}
												for each  eachSameLog in repeatedLogs
												{
													dayVal = eachSameLog.Date_field.getDayOfWeek();
													if(dayVal == 1)
													{
														row.Sunday=hours_sunday;
													}
													else if(dayVal == 2)
													{
														row.Monday=hours_monday;
													}
													else if(dayVal == 3)
													{
														row.Tuesday=hours_temp;
													}
													else if(dayVal == 4)
													{
														row.Wednesday=hours_Wednesday;
													}
													else if(dayVal == 5)
													{
														row.Thursday=hours_Thursday;
													}
													else if(dayVal == 6)
													{
														row.Friday=hours_Friday;
													}
													else if(dayVal == 7)
													{
														row.Saturday=hours_Saturday;
													}
												}
											}
										}
						)
					}
				}

			}
			Sync_logs as "Sync logs"
			{
				type =  form
				form = Add_weekly_Logs
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											//Inserting the newly added logs into 'Add_Time_Logs' form
										weekDates = {input.From,input.From.addDay(1),input.From.addDay(2),input.From.addDay(3),input.From.addDay(4),input.From.addDay(5),input.From.addDay(6)};
										for each  eachDate in weekDates
										{
											for each  eachRow in input.Logs
											{
												existingLog = Time_Logs[Job_Name == eachRow.Job_Name && Task == eachRow.Task && Date_field == eachDate && users == zoho.loginuser && Employee_Email == input.Employee_Email];
												if(weekDates.indexOf(eachDate) == 0)
												{
													hrs = eachRow.Sunday;
												}
												else if(weekDates.indexOf(eachDate) == 1)
												{
													hrs = eachRow.Monday;
												}
												else if(weekDates.indexOf(eachDate) == 2)
												{
													hrs = eachRow.Tuesday;
												}
												else if(weekDates.indexOf(eachDate) == 3)
												{
													hrs = eachRow.Wednesday;
												}
												else if(weekDates.indexOf(eachDate) == 4)
												{
													hrs = eachRow.Thursday;
												}
												else if(weekDates.indexOf(eachDate) == 5)
												{
													hrs = eachRow.Friday;
												}
												else if(weekDates.indexOf(eachDate) == 6)
												{
													hrs = eachRow.Saturday;
												}
												if(existingLog.count() > 0)
												{
													if(existingLog.Hours1 != hrs)
													{
														existingLog.Hours1=hrs;
													}
												}
												else
												{
													if(hrs != "00:00")
													{
														insert into Time_Logs
														[
															Status="Tracked"
															Date_field=eachDate
															Track_as="Hours"
															Added_User=zoho.loginuser
															Job_Name=eachRow.Job_Name
															Task=eachRow.Task
															Hours1=hrs
															From_Time="00:00"
															End_Time1="00:00"
															users=zoho.loginuser
															TimeLog_Approvers=input.TimeLog_Approvers
															Employee_Email=input.Employee_Email
															Date_Range=input.Date_Range
														]
													}
												}
											}
										}
						)
					}
				}

			}
			Hide_Field as "Hide Field"
			{
				type =  form
				form = Time_Logs
				record event = on add or edit

				on load
				{
					actions 
					{
						custom deluge script
						(
											hide Status;
										hide Log_Time_Id;
										hide Status1;
										hide users;
										hide Date_Range;
										hide TimeLog_Approvers;
										hide Section1;
										hide Clock_In;
										hide Clock_Out;
										hide Hours1;
										disable Employee_Email;
										hide Add_weekly_Logs;
										//hide Time_in_Hours;
										hide Emp_email;
										hide Approver_Emails;
										hide Log_Type;
										hide Status1;
										hide Status;
						)
					}
				}

			}
			Hide_show_field as "Hide&show field"
			{
				type =  form
				form = Time_Logs
				record event = on add

				field rules
				{
					actions  (Track_as == "Hours")
					{
						show Hours;
					}
					actions 
					{
						hide TimeLog_Approvers;
					}
					actions  (Track_as == "Start & End")
					{
						show From_Time,End_Time1,Hours;
					}
				}

			}
			Calculation as "Calculation"
			{
				type =  form
				form = Add_Schedule
				record event = on add or edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											//
						)
					}
				}

			}
			updateToDate as "updateToDate"
			{
				type =  form
				form = Add_weekly_Logs
				record event = on add or edit

				on user input of From
				{
					actions 
					{
						custom deluge script
						(
											input.To = input.From.addDay(6);
						)
					}
				}

			}
			hours_calculation as "hours calculation"
			{
				type =  form
				form = Time_Logs
				record event = on add or edit
					status = inactive

				on user input of Hours1
				{
					actions 
					{
						custom deluge script
						(
											//Validating the time here
										if(thisapp.TimeCalculations.timeValidation(input.Hours1))
										{
											hrsVal = input.Hours1.getPrefix(":");
											minsVal = input.Hours1.getSuffix(":");
											if(hrsVal.length() < 2 || minsVal.length() < 2)
											{
												input.Hours1 = thisapp.TimeCalculations.getStringTime(hrsVal.toLong(),minsVal.toLong());
											}
										}
										else
										{
											alert "Please enter time in 24 hours format";
										}
						)
					}
				}

			}
			Hide_field as "Hide field"
			{
				type =  form
				form = Add_weekly_Logs
				record event = on add or edit

				on load
				{
					actions 
					{
						custom deluge script
						(
											hide Submitted_By;
										hide Test_Field;
										hide TimeLog_Approvers;
										hide Date_Range;
										hide Employee_Email;
										hide Section3;
						)
					}
				}

			}
			Update_ID as "Update ID"
			{
				type =  form
				form = Add_weekly_Logs
				record event = on add or edit

				on success
				{
				}

			}
			Overdue_Update_Status as "Overdue Update Status"
			{
				type =  form
				form = Time_Logs
				record event = on add or edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											// if(Due_Date < zoho.currentdate)
										// {
										// 	input.Status = "OverDue";
										// }
						)
					}
				}

			}
			Update_Status as "Update Status"
			{
				type =  form
				form = Add_Task
				record event = on add or edit

				on success
				{
				}

			}
			Update_Status1 as "Update Status"
			{
				type =  form
				form = Time_Logs
				record event = on add or edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											input.Status1 = "Draft";
						)
					}
				}

			}
			Update_Job as "Update Job"
			{
				type =  form
				form = Add_Schedule
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											// data_val = insert into Add_Job
										// [
										// 	Added_User=zoho.loginuser
										// 	Job_Name=input.Deal_Name
										// ];
						)
					}
				}

			}
			Assign_Login_User1 as "Assign Login User"
			{
				type =  form
				form = Add_Schedule
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											input.users = zoho.loginuser;
										hide Log_Time_Id;
										hide Log_Status;
						)
					}
				}

			}
			Assign_Login_User2 as "Assign Login User"
			{
				type =  form
				form = Add_Schedule
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											input.users = zoho.loginuser;
						)
					}
				}

			}
			Assign_Login_User3 as "Assign Login User"
			{
				type =  form
				form = Time_Logs
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											input.users = zoho.loginuser;
										// hide Hour;
										hide Clock_In.users;
										hide Clock_Out.users;
										fetemp = Add_Employee[Email_address == zoho.loginuserid];
										fetempID = fetemp.ID;
										input.Employee_Email = fetempID;
										input.TimeLog_Approvers = fetemp.TimeLog_Approvers;
										input.Emp_email = input.Employee_Email.Email_address;
										input.Approver_Emails = input.Employee_Email.TimeLog_Approvers.Email_address;
						)
					}
				}

			}
			Update_Status2 as "Update Status"
			{
				type =  form
				form = Add_Task
				record event = on add or edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											if(input.Due_Date1 < zoho.currentdate)
										{
											input.Status = "Overdue";
										}
						)
					}
				}

			}
			update_Job_Users as "update Job Users"
			{
				type =  form
				form = Add_Schedule
				record event = on add or edit
					status = inactive

				on user input of Installation_Crew
				{
					actions 
					{
						custom deluge script
						(
											mp_list = list();
										mp_list.add(input.Superintendent.Email_address);
										mp_list.add(input.Crew_Lead1.Email_address);
										//mp_list.addAll(Crew_Lead();
						)
					}
				}

			}
			Status_Update as "Status Update"
			{
				type =  form
				form = Time_Logs
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											input.Log_Type = "Daily Log";
						)
					}
				}

			}
			Status_update as "Status update"
			{
				type =  form
				form = Apply_Leave
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											input.Status = "Draft";
						)
					}
				}

			}
			Hide_Field1 as "Hide Field"
			{
				type =  form
				form = Apply_Leave
				record event = on add or edit

				on load
				{
					actions 
					{
						custom deluge script
						(
											hide Status;
										disable Employee_Email;
										hide Employee1;
						)
					}
				}

			}
			Status_Update1 as "Status Update"
			{
				type =  form
				form = Associate_Completed_Job
				record event = on add or edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											data_rec = Add_Schedule[ID == input.Job_Id];
										data_rec.Status="Completed";
										//data_rec.Log_Status="Completed";
						)
					}
				}

			}
			User_Update as "User Update"
			{
				type =  form
				form = Associate_Completed_Job
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											input.User_Added_By = zoho.loginuser;
						)
					}
				}

			}
			Update_Job_in_Activities as "Update Job  in Activities"
			{
				type =  form
				form = Add_Schedule
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											event_name = input.Deal_Name + " - " + input.Installation_Crew;
										activity_data = insert into Add_Activities
										[
											Client_Name=input.Client_Name.ID
											Start_Date=input.Start_Date
											End_Date=input.Closing_Date
											Description=input.Additional_Job_Notes
											Type="Scheduled Job"
											Added_User=zoho.loginuser
											Event_Name=event_name
											record_Id=input.ID
											Crew=input.Installation_Crew
										];
						)
					}
				}

			}
			Edit_Update_jon_in_Activi as "Edit(Update jon in  Activities)"
			{
				type =  form
				form = Add_Schedule
				record event = on edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											data_map = Add_Activities[record_Id == input.ID];
										data_map.Start_Date=input.Start_Date;
										data_map.End_Date=input.Closing_Date;
										data_map.Client_Name=input.Client_Name;
										data_map.Description=input.Additional_Job_Notes;
										data_map.Crew=input.Installation_Crew;
										data_map.Event_Name=input.Deal_Name.concat(input.Installation_Crew);
						)
					}
				}

			}
			Update_Event_in_activitie as "Update Event in activities"
			{
				type =  form
				form = Add_Event
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											data_event = insert into Add_Activities
										[
											Added_User=zoho.loginuser
											Start_Date=input.Start_Date
											End_Date=input.End_Date
											Description=input.Discription
											Event_Name=input.Event_Category.Event_Category + " - " + input.Event_Name
											record_Id=input.ID
											Type="Event"
										];
						)
					}
				}

			}
			Edit_Update_EVENT_in_Acti as "Edit(Update EVENT in  Activities)"
			{
				type =  form
				form = Add_Event
				record event = on edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											data_map = Add_Activities[record_Id == input.ID];
										data_map.Start_Date=input.Start_Date;
										data_map.End_Date=input.End_Date;
										data_map.Description=input.Discription;
										data_map.Event_Name=input.Event_Category + " - " + input.Event_Name;
										data_map.record_Id=input.ID;
										data_map.Type="Event";
						)
					}
				}

			}
			Update_Holiday_in_activit as "Update Holiday in activities"
			{
				type =  form
				form = Add_Holiday
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											input.End_Date = input.Start_Date;
										if(input.Holiday_Type.isEmpty() == false)
										{
											Event_Name = input.Holiday_Type + " - " + input.Name;
										}
										else
										{
											Event_Name = "Holiday - " + input.Name;
										}
										data_holiday = insert into Add_Activities
										[
											Added_User=zoho.loginuser
											Event_Name=Event_Name
											Start_Date=input.Start_Date
											End_Date=input.End_Date
											Description=input.Description
											record_Id=input.ID
											Type="Bank Holiday's"
										];
						)
					}
				}

			}
			Edit_Update_holiday_in_ac as "Edit(Update holiday in activities)"
			{
				type =  form
				form = Add_Holiday
				record event = on edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											if(input.Holiday_Type != null)
										{
											Event_Name = input.Holiday_Type + " - " + input.Name;
										}
										else
										{
											Event_Name = "Holiday - " + input.Name;
										}
										data_map = Add_Activities[record_Id == input.ID];
										data_map.Event_Name=Event_Name;
										data_map.Start_Date=input.Start_Date;
										data_map.End_Date=input.End_Date;
										data_map.Description=input.Description;
										data_map.record_Id=input.ID;
										data_map.Type="Bank Holiday's";
						)
					}
				}

			}
			Update_leave_in_activitie as "Update leave in activities"
			{
				type =  form
				form = Apply_Leave
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											data_leave = insert into Add_Activities
										[
											Added_User=zoho.loginuser
											Start_Date=input.Form_Date
											End_Date=input.To_Date
											Description=input.Reason_for_leave
											record_Id=input.ID
											Type="Employee Time Off"
											Event_Name="Time Off - " + input.Added_User
										];
						)
					}
				}

			}
			edit_Update_leave_in_acti as "edit(Update leave in activities)"
			{
				type =  form
				form = Apply_Leave
				record event = on edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											data_map = Add_Activities[record_Id == input.ID];
										data_map.Start_Date=input.Form_Date;
										data_map.End_Date=input.To_Date;
										data_map.Description=input.Reason_for_leave;
										data_map.record_Id=input.ID;
										data_map.Type="Employee Time Off";
						)
					}
				}

			}
			Get_Weekly_timelogs_to_Su as "Get Weekly timelogs to Subform"
			{
				type =  form
				form = Add_weekly_Logs
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											input.Test_Field = "";
										/* row_rec = Add_weekly_Logs.Logs();
										row_rec.Sunday="01.00";
										row_rec.Monday="00.00";
										row_rec.Tuesday="00.00";
										row_rec.Wednesday="00.00";
										row_rec.Thursday="00.00";
										row_rec.Friday="00.00";
										row_rec.Saturday="00.00";
										coll_variable = Collection();
										coll_variable.insert(row_rec);
										input.Logs.insert(coll_variable);
										 */
										// if(input.From != null && input.To != null)
										// {
										//	row_insert = Add_weekly_Logs.Logs();
										// 	if(input.From > zoho.currentdate)
										// 	{
										// 		row_insert.Sunday="00:00";
										// 	}
										// 	if(From.addDay(1) > zoho.currentdate)
										// 	{
										// 		row_insert.Monday="00:00";
										// 	}
										// 	if(From.addDay(2) > zoho.currentdate)
										// 	{
										// 		row_insert.Tuesday="00:00";
										// 	}
										// 	if(From.addDay(3) > zoho.currentdate)
										// 	{
										// 		row_insert.Wednesday="00:00";
										// 	}
										// 	if(From.addDay(4) > zoho.currentdate)
										// 	{
										// 		row_insert.Thursday="00:00";
										// 	}
										// 	if(From.addDay(5) > zoho.currentdate)
										// 	{
										// 		row_insert.Friday="00:00";
										// 	}
										// 	if(From.addDay(6) > zoho.currentdate)
										// 	{
										// 		row_insert.Saturday="00:00";
										// 	}
										// 	trackedLogsForWeek = Time_Logs[Date_field >= input.From && Date_field <= input.To && users == zoho.loginuser].ID.getAll();
										// 	logCount = 0;
										// 	for each  eachRow in Logs
										// 	{
										// 		logCount = logCount + 1;
										// 	}
										// 	if(logCount > 0)
										// 	{
										// 		for each  eachRow in Logs
										// 		{
										// 			sameLogs = Time_Logs[Job_Name == eachRow.Job_Name && Task == eachRow.Task && Date_field >= input.From && Date_field <= input.To && users == zoho.loginuser].ID.getAll();
										// 			trackedLogsForWeek.removeall(sameLogs);
										// 		}
										// 	}
										// 	if(trackedLogsForWeek.size() > 0)
										// 	{
										// 		//Prefilling the log details with tracked time logs
										// 		trackedLogs = Time_Logs[ID == trackedLogsForWeek.get(0)];
										// 		row_insert.Task=trackedLogs.Task;
										// 		alert row_insert ;
										// 		row_insert.Job_Name=trackedLogs.Job_Name;
										// 		repeatedLogs = Time_Logs[Job_Name == trackedLogs.Job_Name && Task == trackedLogs.Task && Date_field >= input.From && Date_field <= input.To && users == zoho.loginuser];
										// 		for each  eachSameLog in repeatedLogs
										// 		{
										// 			dayVal = eachSameLog.Date_field.getDayOfWeek();
										// 			if(dayVal == 1)
										// 			{
										// 				row_insert.Sunday=eachSameLog.Hours;
										// 			}
										// 			else if(dayVal == 2)
										// 			{
										// 				row_insert.Monday=eachSameLog.Hours;
										// 			}
										// 			else if(dayVal == 3)
										// 			{
										// 				row_insert.Tuesday=eachSameLog.Hours;
										// 			}
										// 			else if(dayVal == 4)
										// 			{
										// 				row_insert.Wednesday=eachSameLog.Hours;
										// 			}
										// 			else if(dayVal == 5)
										// 			{
										// 				row_insert.Thursday=eachSameLog.Hours;
										// 			}
										// 			else if(dayVal == 6)
										// 			{
										// 				row_insert.Friday=eachSameLog.Hours;
										// 			}
										// 			else if(dayVal == 7)
										// 			{
										// 				row_insert.Saturday=eachSameLog.Hours;
										// 			}
										// 		}
										// 	}
										// 	input.Logs.insert(row_insert);
										// }
										// else 
										// {
										// 	if(From.addDay(1) > zoho.currentdate)
										// 	{
										// 		row_rec = Add_weekly_Logs.Logs();
										// 		row_rec.Monday="00:00";
										// 		input.Logs.insert(row_rec);
										// 	}
										// }
						)
					}
				}

			}
			Hide_Field2 as "Hide Field"
			{
				type =  form
				form = Add_Activities
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											hide record_Id;
						)
					}
				}

			}
			Insert_Employee_Details as "Insert Employee Details"
			{
				type =  form
				form = Add_Employee
				record event = on add
					status = inactive

				on success
				{
					actions 
					{
						custom deluge script
						(
											current_year = zoho.currentdate.getYear();
										year = zoho.currentdate.getYear().toString();
										data_employee = insert into Add_Activities
										[
											Added_User=zoho.loginuser
											Employee_Name=input.ID
											Date_of_Birth1=input.Date_of_Birth.toString("MMM dd")
											Start_Date=(input.Date_of_Birth + " " + year).toDate()
											End_Date=(input.Date_of_Birth + " " + year).toDate()
											Type="Employee Birthday"
											record_Id=input.ID
											Event_Name=input.First_Name + "'s Birthday"
										];
						)
					}
				}

			}
			Employee_Assign as "Employee Assign"
			{
				type =  form
				form = Add_Leave_Type
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											input.Employee = zoho.loginuser;
						)
					}
				}

			}
			Leave_Taken as "Leave Taken"
			{
				type =  form
				form = Apply_Leave
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											// data_rec = Apply_Leave [ Employee == input.Employee ];
										// info data_rec;
						)
					}
				}

			}
			Alert_from_weeklylogs as "Alert from weeklylogs"
			{
				type =  form
				form = Add_weekly_Logs
				record event = on add

				on validate
				{
					actions 
					{
						custom deluge script
						(
											log = Add_weekly_Logs[From == input.From && To == input.To];
										// alert log;
										// if(log.count() > 0)
										// {
										// 	alert "Time log has been submitted by week.";
										// 	cancel submit;
										// }
										// else if(log.count() > 1)
										// {
										// 	info "Added";
										// }
										// else
										// {
										// 	info "next week";
										// }
						)
					}
				}

			}
			Status_update1 as "Status update"
			{
				type =  form
				form = Add_weekly_Logs
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											//
						)
					}
				}

			}
			User_Update1 as "User Update"
			{
				type =  form
				form = Time_Logs
				record event = on add or edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											input.Clock_In.users = zoho.loginuser;
										input.Clock_Out.users = zoho.loginuser;
						)
					}
				}

			}
			hrs_store as "hrs store"
			{
				type =  form
				form = Time_Logs
				record event = on add or edit
					status = inactive

				on success
				{
					actions 
					{
						custom deluge script
						(
											// thisapp.TextTimetoRealTime(input.ID);
						)
					}
				}

			}
			DELETE_THE_JOB as "DELETE THE JOB"
			{
				type =  form
				form = Add_Schedule
				record event = on delete

				on success
				{
					actions 
					{
						custom deluge script
						(
											delete from Add_Activities[record_Id == input.ID];
						)
					}
				}

			}
			DELETE_THE_REC as "DELETE THE REC"
			{
				type =  form
				form = Add_Holiday
				record event = on delete

				on success
				{
					actions 
					{
						custom deluge script
						(
											delete from Add_Activities[record_Id == input.ID];
						)
					}
				}

			}
			Delete_the_Event as "Delete the Event"
			{
				type =  form
				form = Add_Event
				record event = on delete

				on success
				{
					actions 
					{
						custom deluge script
						(
											delete from Add_Activities[record_Id == input.ID];
						)
					}
				}

			}
			Delete_the_leave_rec as "Delete the leave rec"
			{
				type =  form
				form = Apply_Leave
				record event = on delete

				on success
				{
					actions 
					{
						custom deluge script
						(
											delete from Add_Activities[record_Id == input.ID];
						)
					}
				}

			}
			Hide_Show_Field4 as "Hide & Show Field"
			{
				type =  form
				form = Add_Task
				record event = on add or edit

				field rules
				{
					actions  (Task_Type == "Recurring")
					{
						show Recur_Type;
						hide Due_Date;
						show Due_Date1,End_Date;
					}
					actions  (Recur_Type == "Weekly")
					{
						show Number_of_Weeks;
					}
					actions  (Recur_Type == "Monthly")
					{
						show Number_of_Month;
					}
					actions  (Task_Type == "One Off")
					{
						hide Due_Date1,End_Date;
						show Due_Date;
					}
					actions 
					{
						hide Status;
						hide Due_Date,End_Date,Due_Date1;
					}
					actions 
					{
						hide Status;
					}
				}

			}
			row_insert as "row insert"
			{
				type =  form
				form = Add_weekly_Logs
				record event = on add

				on user input of Test_Field
				{
					actions 
					{
						custom deluge script
						(
											//trackedLogsForWeek = Time_Logs[Date_field >= input.From && Date_field <= input.To && users == zoho.loginuser].ID.getAll();
										//Time_Logs[Date_field >= input.From && Date_field <= input.To && users == zoho.loginuser]
										for each  line_data in Time_Logs[Date_field >= input.From && Date_field <= input.To && users == zoho.loginuser]
										{
											//alert "TASK =" + line_data.Task;
											if(input.From != null && input.To != null)
											{
												row_insert = Add_weekly_Logs.Logs();
												if(input.From > zoho.currentdate)
												{
													row_insert.Sunday="00:00";
												}
												if(From.addDay(1) > zoho.currentdate)
												{
													row_insert.Monday="00:00";
												}
												if(From.addDay(2) > zoho.currentdate)
												{
													row_insert.Tuesday="00:00";
												}
												if(From.addDay(3) > zoho.currentdate)
												{
													row_insert.Wednesday="00:00";
												}
												if(From.addDay(4) > zoho.currentdate)
												{
													row_insert.Thursday="00:00";
												}
												if(From.addDay(5) > zoho.currentdate)
												{
													row_insert.Friday="00:00";
												}
												if(From.addDay(6) > zoho.currentdate)
												{
													row_insert.Saturday="00:00";
												}
												trackedLogsForWeek = Time_Logs[Date_field >= input.From && Date_field <= input.To && users == zoho.loginuser].ID.getAll();
												//alert trackedLogsForWeek;
												logCount = 0;
												for each  eachRow in Logs
												{
													logCount = logCount + 1;
												}
												if(logCount > 0)
												{
													for each  eachRow in Logs
													{
														sameLogs = Time_Logs[Job_Name == eachRow.Job_Name && Task == eachRow.Task && Date_field >= input.From && Date_field <= input.To && users == zoho.loginuser].ID.getAll();
														trackedLogsForWeek.removeall(sameLogs);
													}
												}
												if(trackedLogsForWeek.size() > 0)
												{
													//Prefilling the log details with tracked time logs
													trackedLogs = Time_Logs[ID == trackedLogsForWeek];
													row_insert.Task=trackedLogs.Task;
													//row_insert.Job_Name=trackedLogs.Job_Name;
													//alert trackedLogs.Task;
													if(trackedLogs.Job_Name != null)
													{
														row_insert.Task=trackedLogs.Task;
													}
													if(trackedLogs.Job_Name != null)
													{
														row_insert.Job_Name=trackedLogs.Job_Name;
													}
													//alert "Job Name >>>>>>>>>"+ trackedLogs.Job_Name ;
													repeatedLogs = Time_Logs[Job_Name == trackedLogs.Job_Name && Task == trackedLogs.Task && Date_field >= input.From && Date_field <= input.To && users == zoho.loginuser];
													i = 0;
													sunday_val = 0;
													monday_val = 0;
													tuesday_val = 0;
													Wednesday_val = 0;
													hours_temp = 0;
													hours_monday = 0;
													hours_sunday = 0;
													hours_Wednesday = 0;
													Thursday_val = 0;
													hours_Thursday = 0;
													Saturday_val = 0;
													hours_Saturday = 0;
													Friday_val = 0;
													hours_Friday = 0;
													// 			for each  li_val in repeatedLogs
													// 			{
													// 				date_of_day = li_val.Date_field.getDayOfWeek();
													// 				// 				info date_of_day;
													// 				if(date_of_day == 1)
													// 				{
													// 					// 					info "sunday";
													// 					temp_hours = li_val.Hours;
													// 					or_time = li_val.Hours.toList(".");
													// 					hrs = or_time.get(0).toLong();
													// 					mins = or_time.get(1).toLong();
													// 					total_mins = ifnull(hrs,0) * 60 + ifnull(mins,0);
													// 					sunday_val = sunday_val + total_mins;
													// 					var = sunday_val.toNumber();
													// 					// 				total_hours = tuesday_val / 60;
													// 					hours_sunday = var / 60;
													// 					if(hours_sunday < 10)
													// 					{
													// 						num_sun = "0" + hours_sunday;
													// 					}
													// 					else
													// 					{
													// 						hours_sunday = var / 60;
													// 						num_sun = hours_sunday;
													// 					}
													// 				}
													// 				else if(date_of_day == 2)
													// 				{
													// 					// 					info "monday";
													// 					temp_hours = li_val.Hours;
													// 					or_time = li_val.Hours.toList(".");
													// 					hrs = or_time.get(0).toLong();
													// 					mins = or_time.get(1).toLong();
													// 					total_mins = ifnull(hrs,0) * 60 + ifnull(mins,0);
													// 					monday_val = monday_val + total_mins;
													// 					var = monday_val.toNumber();
													// 					// 				total_hours = tuesday_val / 60;
													// 					hours_monday = var / 60;
													// 					if(hours_monday < 10)
													// 					{
													// 						num_mon = "0" + hours_monday;
													// 					}
													// 					else
													// 					{
													// 						hours_monday = var / 60;
													// 						num_mon = hours_monday;
													// 					}
													// 				}
													// 				else if(date_of_day == 3)
													// 				{
													// 					// 				info "tuesday";
													// 					temp_hours = li_val.Hours;
													// 					// 					info temp_hours;
													// 					or_time = li_val.Hours.toList(".");
													// 					hrs = or_time.get(0).toLong();
													// 					mins = or_time.get(1).toLong();
													// 					total_mins = ifnull(hrs,0) * 60 + ifnull(mins,0);
													// 					tuesday_val = tuesday_val + total_mins;
													// 					var = tuesday_val.toNumber();
													// 					hours_temp = var / 60;
													// 					if(hours_temp < 10)
													// 					{
													// 						num_temp = "0" + hours_temp;
													// 					}
													// 					else
													// 					{
													// 						hours_temp = var / 60;
													// 						num_temp = hours_temp;
													// 					}
													// 				}
													// 				else if(date_of_day == 4)
													// 				{
													// 					// 					info "Wednesday";
													// 					temp_hours = li_val.Hours;
													// 					// 					info temp_hours;
													// 					or_time = li_val.Hours.toList(".");
													// 					hrs = or_time.get(0).toLong();
													// 					mins = or_time.get(1).toLong();
													// 					total_mins = ifnull(hrs,0) * 60 + ifnull(mins,0);
													// 					Wednesday_val = Wednesday_val + total_mins;
													// 					var = Wednesday_val.toNumber();
													// 					hours_Wednesday = var / 60;
													// 					if(hours_Wednesday < 10)
													// 					{
													// 						num_Wed = "0" + hours_Wednesday;
													// 					}
													// 					else
													// 					{
													// 						hours_Wednesday = var / 60;
													// 						num_Wed = hours_Wednesday;
													// 					}
													// 				}
													// 				else if(date_of_day == 5)
													// 				{
													// 					// 					info "Thursday";
													// 					temp_hours = li_val.Hours;
													// 					// 					info temp_hours;
													// 					or_time = li_val.Hours.toList(".");
													// 					hrs = or_time.get(0).toLong();
													// 					mins = or_time.get(1).toLong();
													// 					total_mins = ifnull(hrs,0) * 60 + ifnull(mins,0);
													// 					Thursday_val = Thursday_val + total_mins;
													// 					var = Thursday_val.toNumber();
													// 					hours_Thursday = var / 60;
													// 					if(hours_Thursday < 10)
													// 					{
													// 						num_Thu = "0" + hours_Thursday;
													// 					}
													// 					else
													// 					{
													// 						hours_Thursday = var / 60;
													// 						num_Thu = hours_Thursday;
													// 					}
													// 				}
													// 				else if(date_of_day == 6)
													// 				{
													// 					// 					info "Friday";
													// 					temp_hours = li_val.Hours;
													// 					// 					info temp_hours;
													// 					or_time = li_val.Hours.toList(".");
													// 					hrs = or_time.get(0).toLong();
													// 					mins = or_time.get(1).toLong();
													// 					total_mins = ifnull(hrs,0) * 60 + ifnull(mins,0);
													// 					Friday_val = Friday_val + total_mins;
													// 					var = Friday_val.toNumber();
													// 					hours_Friday = var / 60;
													// 					if(hours_Friday < 10)
													// 					{
													// 						num_Fri = "0" + hours_Friday;
													// 					}
													// 					else
													// 					{
													// 						hours_Friday = var / 60;
													// 						num_Fri = hours_Friday;
													// 					}
													// 				}
													// 				else if(date_of_day == 7)
													// 				{
													// 					// 					info "Saturday";
													// 					temp_hours = li_val.Hours;
													// 					// 					info temp_hours;
													// 					or_time = li_val.Hours.toList(".");
													// 					hrs = or_time.get(0).toLong();
													// 					mins = or_time.get(1).toLong();
													// 					total_mins = ifnull(hrs,0) * 60 + ifnull(mins,0);
													// 					Saturday_val = Saturday_val + total_mins;
													// 					var = Saturday_val.toNumber();
													// 					hours_Saturday = var / 60;
													// 					if(hours_Saturday < 10)
													// 					{
													// 						num_Sat = "0" + hours_Saturday;
													// 					}
													// 					else
													// 					{
													// 						hours_Saturday = var / 60;
													// 						num_Sat = hours_Saturday;
													// 					}
													// 				}
													//}
													for each  eachSameLog in repeatedLogs
													{
														dayVal = eachSameLog.Date_field.getDayOfWeek();
														if(dayVal == 1)
														{
															row_insert.Sunday=eachSameLog.Hours.toString();
														}
														else if(dayVal == 2)
														{
															row_insert.Monday=eachSameLog.Hours.toString();
														}
														else if(dayVal == 3)
														{
															row_insert.Tuesday=eachSameLog.Hours.toString();
														}
														else if(dayVal == 4)
														{
															row_insert.Wednesday=eachSameLog.Hours.toString();
														}
														else if(dayVal == 5)
														{
															row_insert.Thursday=eachSameLog.Hours.toString();
														}
														else if(dayVal == 6)
														{
															row_insert.Friday=eachSameLog.Hours.toString();
														}
														else if(dayVal == 7)
														{
															row_insert.Saturday=eachSameLog.Hours.toString();
														}
													}
													input.Logs.insert(row_insert);
												}
											}
										}
						)
					}
				}

			}
			hide_fields as "hide fields"
			{
				type =  form
				form = Add_Event
				record event = on add

				field rules
				{
					actions 
					{
						hide Ticket_Type,Number_of_entries,Event_Status1;
					}
				}

			}
			hide_fields1 as "hide fields"
			{
				type =  form
				form = Add_Event
				record event = on edit

				field rules
				{
					actions 
					{
						hide Ticket_Type,Number_of_entries;
					}
				}

			}
			disable_Fields as "disable Fields"
			{
				type =  form
				form = Add_Event
				record event = on edit

				field rules
				{
					actions 
					{
						disable Event_Status1;
					}
				}

			}
			update_Fields as "update Fields"
			{
				type =  form
				form = Add_Event
				record event = on add

				field rules
				{
				}

			}
			update_status as "update status"
			{
				type =  form
				form = Add_Event
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											input.Event_Status1 = "Planned";
						)
					}
				}

			}
			hide_fields2 as "hide fields"
			{
				type =  form
				form = Associate_Completed_Job
				record event = on add or edit

				field rules
				{
					actions 
					{
						hide Job_Id,User_Added_By;
					}
				}

			}
			update_Date_Range as "update Date Range"
			{
				type =  form
				form = Time_Logs
				record event = on add
					status = inactive

				on user input of Date_field
				{
					actions 
					{
						custom deluge script
						(
											currentDate = input.Date_field;
										dayNumber = currentDate.getDayOfWeek();
										info dayNumber;
										if(dayNumber == 1)
										{
											EndDate = currentDate.addDay(6);
											info EndDate;
											input.Date_Range = currentDate + " - " + EndDate;
										}
										else if(dayNumber == 2)
										{
											EndDate = currentDate.addDay(5);
											info EndDate;
											StartDate = currentDate.subDay(1);
											input.Date_Range = StartDate + " - " + EndDate;
										}
										else if(dayNumber == 3)
										{
											EndDate = currentDate.addDay(4);
											info EndDate;
											StartDate = currentDate.subDay(2);
											input.Date_Range = StartDate + " - " + EndDate;
										}
										else if(dayNumber == 4)
										{
											EndDate = currentDate.addDay(3);
											info EndDate;
											StartDate = currentDate.subDay(3);
											input.Date_Range = StartDate + " - " + EndDate;
										}
										else if(dayNumber == 5)
										{
											EndDate = currentDate.addDay(2);
											info EndDate;
											StartDate = currentDate.subDay(4);
											input.Date_Range = StartDate + " - " + EndDate;
										}
										else if(dayNumber == 6)
										{
											EndDate = currentDate.addDay(1);
											info EndDate;
											StartDate = currentDate.subDay(5);
											input.Date_Range = StartDate + " - " + EndDate;
										}
										else if(dayNumber == 7)
										{
											EndDate = currentDate;
											info EndDate;
											StartDate = currentDate.subDay(6);
											input.Date_Range = StartDate + " - " + EndDate;
										}
						)
					}
				}

			}
			update_Date_Range1 as "update Date Range"
			{
				type =  form
				form = Time_Logs
				record event = on add
					status = inactive

				on success
				{
					actions 
					{
						custom deluge script
						(
											currentDate = input.Date_field;
										dayNumber = currentDate.getDayOfWeek();
										info dayNumber;
										if(dayNumber == 1)
										{
											EndDate = currentDate.addDay(6);
											info EndDate;
											input.Date_Range = currentDate + " - " + EndDate;
										}
										else if(dayNumber == 2)
										{
											EndDate = currentDate.addDay(5);
											info EndDate;
											StartDate = currentDate.subDay(1);
											input.Date_Range = StartDate + " - " + EndDate;
										}
										else if(dayNumber == 3)
										{
											EndDate = currentDate.addDay(4);
											info EndDate;
											StartDate = currentDate.subDay(2);
											input.Date_Range = StartDate + " - " + EndDate;
										}
										else if(dayNumber == 4)
										{
											EndDate = currentDate.addDay(3);
											info EndDate;
											StartDate = currentDate.subDay(3);
											input.Date_Range = StartDate + " - " + EndDate;
										}
										else if(dayNumber == 5)
										{
											EndDate = currentDate.addDay(2);
											info EndDate;
											StartDate = currentDate.subDay(4);
											input.Date_Range = StartDate + " - " + EndDate;
										}
										else if(dayNumber == 6)
										{
											EndDate = currentDate.addDay(1);
											info EndDate;
											StartDate = currentDate.subDay(5);
											input.Date_Range = StartDate + " - " + EndDate;
										}
										else if(dayNumber == 7)
										{
											EndDate = currentDate;
											info EndDate;
											StartDate = currentDate.subDay(6);
											input.Date_Range = StartDate + " - " + EndDate;
										}
						)
					}
				}

			}
			hide_fields3 as "hide fields"
			{
				type =  form
				form = Add_Holiday
				record event = on add or edit

				field rules
				{
					actions 
					{
						hide End_Date;
					}
				}

			}
			update_Fields1 as "update Fields"
			{
				type =  form
				form = Apply_Leave
				record event = on add or edit
					status = inactive

				on load
				{
					actions 
					{
						custom deluge script
						(
											//udpate leave requester email based on login user email
										input.Employee1 = zoho.loginuser;
										fetemp = Add_Employee[Email_address == zoho.loginuserid];
										fetempID = fetemp.ID;
										input.Employee_Email = fetempID;
										info fetempID;
										//update leave approvers
										//approvelist = [4264835000000201003, 4264835000000201027];
										// 	approvelist = fetemp.Leave_Approvers.Leave_Approvers.Email_address;
										// 	input.Leave_Approvers = approvelist;
						)
					}
				}

			}
			Close_Window as "Close Window"
			{
				type =  form
				form = Associate_Completed_Job
				record event = on add or edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											openUrl("#Script:Associate_Completed_Job","same window");
						)
					}
				}

			}
			Assign_Login_User as "Assign Login User"
			{
				type =  form
				form = Add_Task
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											input.Created_By = zoho.loginuser;
										hide Created_By;
										input.Task_Owner = zoho.loginuser;
										disable Task_Owner;
						)
					}
				}

			}
			update_total_leaves as "update total leaves"
			{
				type =  form
				form = Apply_Leave
				record event = on add or edit

				on user input of Type
				{
					actions 
					{
						custom deluge script
						(
											if(input.Type == "Partial Day")
										{
											disable Total_Day_s;
											input.Total_Day_s = 0.5;
										}
						)
					}
				}

			}
			update_Approvers as "update Approvers"
			{
				type =  form
				form = Add_Crew
				record event = on add or edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											SIntendent = input.SuperIntendent;
										CrewLead = input.Crew_Lead;
										crewMembers = input.Crew_Members;
										// info "SuperIntendent" + SIntendent;
										// info "CrewLead" + CrewLead;
										// info "crewMembers" + crewMembers;
										Approverlist = {};
										Approverlist.add(CrewLead);
										Approverlist.add(SIntendent);
										for each  crewMem in crewMembers
										{
											// 	info "the current mem is " + crewMem;
											fetcrewmem = Add_Employee[ID == crewMem];
											Approverlist1 = {};
											Approverlist1 = fetcrewmem.owner;
											Approverlist1.addAll(Approverlist);
											fetcrewmem.Leave_Approvers.clear();
											fetcrewmem.Leave_Approvers=Approverlist1;
											fetcrewmem.TimeLog_Approvers.clear();
											fetcrewmem.TimeLog_Approvers=Approverlist1;
										}
										fetCrewLead = Add_Employee[ID == CrewLead];
										Approverlist2 = {};
										Approverlist2.add(SIntendent);
										Approverlist3 = {};
										Approverlist3 = fetCrewLead.owner;
										Approverlist3.addAll(Approverlist2);
										//fetCrewLead.Leave_Approver_1=SuperIntendent;
										fetCrewLead.Leave_Approvers.clear();
										fetCrewLead.Leave_Approvers=Approverlist3;
										//fetCrewLead.TimeLog_Approver_1=SuperIntendent;
										fetCrewLead.TimeLog_Approvers.clear();
										fetCrewLead.TimeLog_Approvers=Approverlist3;
						)
					}
				}

			}
			update_Fields2 as "update Fields"
			{
				type =  form
				form = Apply_Leave
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											input.Employee1 = zoho.loginuser;
										fetemp = Add_Employee[Email_address == zoho.loginuserid];
										fetempID = fetemp.ID;
										input.Employee_Email = fetempID;
										//info fetempID;
										//info fetemp.Leave_Approvers;
										// info fetemp.Leave_Approver2;
										//input.Leave_Approver_1 = fetemp.Leave_Approver_1;
										//input.Leave_Approver_2 = fetemp.Leave_Approver_2;
										input.Leave_Approvers = fetemp.Leave_Approvers;
						)
					}
				}

			}
			update_Date_Range2 as "update Date Range"
			{
				type =  form
				form = Time_Logs
				record event = on add or edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											currentDate = input.Date_field;
										dayNumber = currentDate.getDayOfWeek();
										info dayNumber;
										if(dayNumber == 1)
										{
											EndDate = currentDate.addDay(6);
											info EndDate;
											input.Date_Range = currentDate + " - " + EndDate;
										}
										else if(dayNumber == 2)
										{
											EndDate = currentDate.addDay(5);
											info EndDate;
											StartDate = currentDate.subDay(1);
											input.Date_Range = StartDate + " - " + EndDate;
										}
										else if(dayNumber == 3)
										{
											EndDate = currentDate.addDay(4);
											info EndDate;
											StartDate = currentDate.subDay(2);
											input.Date_Range = StartDate + " - " + EndDate;
										}
										else if(dayNumber == 4)
										{
											EndDate = currentDate.addDay(3);
											info EndDate;
											StartDate = currentDate.subDay(3);
											input.Date_Range = StartDate + " - " + EndDate;
										}
										else if(dayNumber == 5)
										{
											EndDate = currentDate.addDay(2);
											info EndDate;
											StartDate = currentDate.subDay(4);
											input.Date_Range = StartDate + " - " + EndDate;
										}
										else if(dayNumber == 6)
										{
											EndDate = currentDate.addDay(1);
											info EndDate;
											StartDate = currentDate.subDay(5);
											input.Date_Range = StartDate + " - " + EndDate;
										}
										else if(dayNumber == 7)
										{
											EndDate = currentDate;
											info EndDate;
											StartDate = currentDate.subDay(6);
											input.Date_Range = StartDate + " - " + EndDate;
										}
						)
					}
				}

			}
			update_Leave_Approvers as "update Leave Approvers"
			{
				type =  form
				form = Apply_Leave
				record event = on add or edit

				on success
				{
				}

			}
			hide_field as "hide field"
			{
				type =  form
				form = Add_Crew
				record event = on add or edit

				on load
				{
				}

			}
			Provide_Application_Acces as "Provide Application Access"
			{
				type =  form
				form = Add_Employee
				record event = on add or edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											if(input.FSM_Access != True)
										{
											thisapp.permissions.deleteUser(input.Email_address);
										}
										if(input.FSM_Access == True)
										{
											thisapp.permissions.assignUserInProfile(input.Email_address,input.Role);
										}
						)
					}
				}

			}
			Field_Visbility as "Field Visbility"
			{
				type =  form
				form = Add_Employee
				record event = on add or edit

				on load
				{
					actions 
					{
						custom deluge script
						(
											roleName = thisapp.permissions.roleForUser(zoho.loginuserid);
										//info roleName;
										if(roleName == "Owner")
										{
											show FSM_Access;
											show Employee_Status1;
											//hide Approvers;
										}
										else
										{
											hide FSM_Access;
											hide Employee_Status1;
											hide Admin;
											hide Approvers;
										}
										input.FSM_Access = True;
										input.Employee_Status1 = "Active";
										hide Leave_Approvers;
										hide TimeLog_Approvers;
										hide owner;
										hide Owners_Email;
										hide Status;
										hide users;
						)
					}
				}

			}
			Insert_Crew_Data as "Insert Crew Data"
			{
				type =  form
				form = Add_Crew
				record event = on edit

				on success
				{
				}

			}
			Crew_History_update as "Crew History update"
			{
				type =  form
				form = Add_Crew
				record event = on edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											data_resp = insert into Crew_History
										[
											Crew_Members=input.Crew_Members
											Crew_Name=input.Crew_Name
											SuperIntendent=input.SuperIntendent
											Crew_Lead=input.Crew_Lead
											Added_User=zoho.loginuser
										];
						)
					}
				}

			}
			Direct_to_Form_Properties1 as "Direct to - Form Properties"
			{
				type =  presuccess
				form = Add_Employee
				on start
				{
					actions 
					{
						openURL("#Report:All_Employees","new window");
					}
				}
			}
			Direct_to_Form_Properties2 as "Direct to - Form Properties"
			{
				type =  presuccess
				form = Add_weekly_Logs
				on start
				{
					actions 
					{
						openURL("#Page:TimeLog","parent window");
					}
				}
			}
			Direct_to_Form_Properties3 as "Direct to - Form Properties"
			{
				type =  presuccess
				form = Time_Logs
				on start
				{
					actions 
					{
						openURL("#Page:TimeLog","new window");
					}
				}
			}
			timeToDecimal as "timeToDecimal"
			{
				type =  form
				form = Time_Logs
				record event = on add or edit
					status = inactive

				on success
				{
					actions 
					{
						custom deluge script
						(
											time = input.Hours1;
										timeList = time.toList(":");
										hour = timeList.get(0).toNumber();
										minutes = timeList.get(1).toNumber();
										min = minutes / 60;
										timeindecimal = hour + min;
										input.Hours = timeindecimal;
										info timeList;
										info hour;
										info minutes;
										info timeindecimal;
						)
					}
				}

			}
			Direct_to_Form_Properties4 as "Direct to - Form Properties"
			{
				type =  presuccess
				form = Apply_Leave
				on start
				{
					actions 
					{
						openURL("#Page:Leaves","parent window");
					}
				}
			}
			timeToDecimal1 as "timeToDecimal"
			{
				type =  form
				form = Time_Logs
				record event = on add or edit

				on user input of Hours1
				{
					actions 
					{
						custom deluge script
						(
											time = input.Hours1;
										timeList = time.toList(":");
										hour = timeList.get(0).toNumber();
										minutes = timeList.get(1).toNumber();
										min = minutes / 60;
										timeindecimal = hour + min;
										input.Hours = timeindecimal;
										// info "timeList" + timeList;
										// info "hour" + hour;
										// info "minutes" + minutes;
										// info "timeindecimal" + timeindecimal;
						)
					}
				}

			}
			update_Employee_s_birthda as "update Employee's birthday"
			{
				type =  form
				form = Add_Employee
				record event = on add or edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											current_year = zoho.currentdate.getYear();
										year = zoho.currentdate.getYear().toString();
										DOB = input.Date_of_Birth.toString("MMM dd");
										data_employee = insert into Add_Activities
										[
											Added_User=zoho.loginuser
											Employee_Name=input.ID
											Date_of_Birth1=input.Date_of_Birth.toString("MMM dd")
											Start_Date=(DOB + " " + year).toDate()
											End_Date=(DOB + " " + year).toDate()
											Type="Employee Birthday"
											record_Id=input.ID
											Event_Name=input.First_Name + "'s Birthday"
										];
						)
					}
				}

			}
			update_approvers_for_empl as "update approvers for employees"
			{
				type =  form
				form = Add_Employee
				record event = on add or edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											thisapp.updateOwners();
						)
					}
				}

			}
			Status_update2 as "Status update"
			{
				type =  form
				form = Add_Task
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											input.Status = "Open";
						)
					}
				}

			}
			Weekly_Monthly_Yearly_Tas as "Weekly, Monthly, Yearly Task Trigger"
			{
				type =  form
				form = Add_Task
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											thisapp.recurringtype.weeklytaskcreating(input.ID);
										thisapp.recurringtype.Monthlytaskcreating(input.ID);
										thisapp.recurringtype.Yearlytaskcreating(input.ID);
						)
					}
				}

			}
			updateLogType as "updateLogType"
			{
				type =  form
				form = Add_weekly_Logs
				record event = on add or edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											thisapp.time_logs.updateTimeLog2Weekly(input.Date_Range);
						)
					}
				}

			}
			updateApprovers as "updateApprovers"
			{
				type =  form
				form = Time_Logs
				record event = on add or edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											thisapp.time_logs.updateApprovers(input.ID);
						)
					}
				}

			}
			time_between as "time between"
			{
				type =  form
				form = Time_Logs
				record event = on add or edit

				on user input of End_Time1
				{
					actions 
					{
						custom deluge script
						(
											// date_time = input.From_Time.hoursBetween(input.End_Time1);
										// input.Hours = date_time + ":00";
										date_time = input.Date_field.toString();
										from_time = input.From_Time.toString();
										start = date_time + " " + from_time;
										start_time = start.toTime();
										to_time = input.End_Time1.toString();
										end = date_time + " " + to_time;
										end_time = end.toTime();
										mil_sec = (end_time - start_time);
										actual_minutes = mil_sec / (1000 * 60);
										mins = actual_minutes % 60;
										hours = (actual_minutes / 60).toLong();
										time_string = hours + "." + mins;
										input.Hours = time_string;
						)
					}
				}

			}
			Task_Assignment_Notificat as "Task Assignment Notification"
			{
				type =  form
				form = Add_Task
				record event = on add

				on success
				{
				}

			}
			Validation_on_negative_Va as "Validation on negative Values"
			{
				type =  form
				form = Time_Logs
				record event = on add or edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(input.From_Time > input.End_Time1)
										{
											alert "Please Enter a Valid Time";
											cancel submit;
										}
						)
					}
				}

			}
			job_update_to_CRM as "job update to CRM"
			{
				type =  form
				form = Add_Schedule
				record event = on edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											deal_id = input.Books_Id.toLong();
										data_map = Map();
										data_map.put("Deal_Name",input.Deal_Name);
										data_map.put("Email",input.Email);
										data_map.put("Phone",input.Phone_Number);
										data_map.put("Closing_Date",input.Closing_Date);
										data_map.put("Start_Date",input.Start_Date);
										data_map.put("Installation_Crew",input.Installation_Crew);
										data_map.put("Flake_Color",input.Flake_Color);
										data_map.put("Floor_Sq_Ft",input.Floor_Sq_Ft);
										data_map.put("Stem_Walls_Stairs_Sq_Ft",input.Stem_Walls_Stairs_Sq_Ft);
										data_map.put("Additional_Job_Notes",input.Additional_Job_Notes);
										other_map = Map();
										update_record = zoho.crm.updateRecord("Deals",deal_id,data_map,other_map,"crm");
										info update_record;
						)
					}
				}

			}
			hide_fields4 as "hide fields"
			{
				type =  form
				form = Add_Schedule
				record event = on edit

				field rules
				{
					actions 
					{
						hide Crew_Information;
					}
					actions 
					{
						disable Discount,Total,Balance_Due;
					}
					actions 
					{
					hide add row of Associated_Items,Line_Items;
					}
				}

			}
		}

		schedule
		{
			update_task_status as "update task status"
			{
				type =  schedule
				form = Add_Task[Status != "Completed"]
				start = after 1 days from End_Date at "00:00:01"
				time zone = "America/Denver"
				on start
				{
					actions 
					{
					on load
					(
						input.Status = "Overdue";
					)
					}
				}
			}
			Employee_Birthday_s as "Employee Birthday's"
			{
				type =  schedule
				start = "2021-12-31 12:00:00"
				frequency = yearly
				time zone = "America/Denver"
				on start
				{
					actions 
					{
					on load
					(
						emp_data = Add_Employee[ID != null];
										info emp_data;
										current_year = zoho.currentdate.getYear();
										// next_year = current_year + 1;
										for each  emp in emp_data
										{
											empData = Add_Employee[ID == emp];
											//info empDOB;
											BirthDM = empData.Date_of_Birth.toString("MMM dd");
											year = zoho.currentdate.getYear().toString();
											DOB = (BirthDM + " " + year).toDate();
											//info DOB;
											response = insert into Add_Activities
											[
												Added_User=zoho.loginuser
												Employee_Name=empData.ID
												Start_Date=DOB
												End_Date=DOB
												Type="Employee Birthday"
												record_Id=empData.ID
												Event_Name=empData.First_Name + "'s Birthday"
											];
											// data_employee = insert into Add_Activities [
											// // 	Added_User=zoho.loginuser
											// // 	Employee_Name=emp_data.ID
											// // 	Date_of_Birth1=emp_data.Date_of_Birth.toString("MMM dd")
											// 	//Start_Date=emp_data.Date_of_Birth.getYear() + 1
											// // 	Start_Date = DOB
											// // 	End_Date=DOB
											// // 	Type="Employee Birthday"
											// // 	record_Id=emp_data.ID
											// // 	Event_Name=emp_data.First_Name + "'s Birthday"
											//  ];	
										}
					)
					}
				}
			}
			Bi_Weekly as "Bi-Weekly"
			{
				type =  schedule
				start = "2022-06-05 12:45:00"
				frequency = weekly
				time zone = "America/Denver"
				on start
				{
					actions 
					{
					on load
					(
						task_rec = Add_Task[ID != null];
										currentday = zoho.currentdate.weekday();
										for each  task_data in task_rec
										{
											ta_data = Add_Task[ID == task_data];
											data_value = insert into Add_Activities
											[
												Added_User=zoho.loginuser
												Event_Name=ta_data.Task_Name
												Start_Date=ta_data.End_Date
												End_Date=ta_data.End_Date
												Type="Task"
											];
											info data_value;
										}
										for each  task_data in task_rec
										{
											ta_data = Add_Task[ID == task_data];
											ta_data.End_Date=zoho.currentdate;
											next_week = ta_data.End_Date.nextWeekDay("Monday");
											info next_week;
											data_value = insert into Add_Activities
											[
												Added_User=zoho.loginuser
												Event_Name=ta_data.Task_Name
												Start_Date=next_week
												End_Date=next_week
												Type="Task"
											];
											info data_value;
										}
					)
					}
				}
			}
		}


		blueprint
		{
    			Event_Process as "Event Process"
    			{
        			type = Blueprint
        			form = Add_Event
        			start
        			{
            			start stage = "Planned"
            			chart data
            			{
                			from port : B
                			to port   : T3
                			position  : "0 0"
                			path      : [27.849999999999994,36.84,27.849999999999994,46.84,27.849999999999994,48.42,31.622994995117185,48.42,31.622994995117185,50,31.622994995117185,60]
            			}
        			}
        			stages
        			{
           			"Planned"
           			{
               			chart data
               			{
                   			position : "-15.223052470852995 60"
               			}
           			}
           			"Held"
           			{
               			chart data
               			{
                   			position : "-16 207.60000000000002"
               			}
           			}
           			"Cancelled"
           			{
               			chart data
               			{
                   			position : "128.4615262354265 205.7103914897611"
               			}
           			}
           			"Not Held"
           			{
               			chart data
               			{
                   			position : "-178.69618441143376 214.7103914897611"
               			}
           			}
        			}
        			transitions
        			{
    				Cancelled as "Cancelled"
    				{
         				type = normal
         				from stage = "Planned"
         				to stage = "Cancelled"
         				before
         				{
         				}
         				after
         				{
							actions 
							{
								custom deluge script
								(
															input.Event_Status1 = "Cancelled";
								)
							}
         				}
         				chart data
         				{
             				from port : R1
             				to port   : T3
             				path      : [78.46904246108737,85.80391489761081,88.46904246108737,85.80391489761081,180.52256240989277,85.80391489761081,180.52256240989277,140.75715319368595,180.52256240989277,195.7103914897611,180.52256240989277,205.7103914897611]
        				}
  				}
    				Held as "Held"
    				{
         				type = normal
         				from stage = "Planned"
         				to stage = "Held"
         				before
         				{
         				}
         				after
         				{
							actions 
							{
								custom deluge script
								(
															input.Event_Status1 = "Held";
								)
							}
         				}
         				chart data
         				{
             				from port : B3
             				to port   : T3
             				path      : [31.622994995117185,111.60782979522162,31.622994995117185,121.60782979522162,31.622994995117185,159.60391489761082,20.60855967300143,159.60391489761082,20.60855967300143,197.60000000000002,20.60855967300143,207.60000000000002]
        				}
  				}
    				Not_Held as "Not Held"
    				{
         				type = normal
         				from stage = "Planned"
         				to stage = "Not Held"
         				before
         				{
         				}
         				after
         				{
							actions 
							{
								custom deluge script
								(
															input.Event_Status1 = "Not Held";
								)
							}
         				}
         				chart data
         				{
             				from port : L1
             				to port   : T3
             				path      : [-15.223052470852995,85.80391489761081,-25.223052470852995,85.80391489761081,-128.6441356637253,85.80391489761081,-128.6441356637253,145.25715319368595,-128.6441356637253,204.7103914897611,-128.6441356637253,214.7103914897611]
        				}
  				}
        			}
    			}
		}

		functions
		{
			Check_Out as "Check Out"
			{
				type =  functions
				form = Add_Schedule
					status = inactive
				on start
				{
					actions 
					{
					on click
					(
						log_data = Time_Logs[Log_Time_Id == input.ID.toString()];
										close_currenttime = input.Closing_Date.toTime();
										close_currenttime = zoho.currenttime;
										log_data.End_Time1=close_currenttime.toString();
										hrs_cal = input.Start_Date.hoursBetween(input.Closing_Date);
										log_data.Hours1=hrs_cal;
										input.Status = "Completed";
					)
					}
				}
			}
			Complete_Job as "Complete Job"
			{
				type =  functions
				form = Add_Schedule
				on start
				{
					actions 
					{
					on click
					(
						log_data = Time_Logs[Log_Time_Id == input.ID.toString()];
										close_currenttime = input.Closing_Date.toTime();
										close_currenttime = zoho.currenttime;
										start_currenttime = input.Start_Date.toTime();
										start_currenttime = zoho.currenttime;
										log_data.End_Time1=close_currenttime.toString();
										log_data.From_Time=start_currenttime.toString();
										openUrl("#Form:Associate_Completed_Job?Job_Id=" + input.ID,"popup window","height=540,width=500");
					)
					}
				}
			}
			Check_In1 as "Check In"
			{
				type =  functions
				form = Add_Schedule
					status = inactive
				on start
				{
					actions 
					{
					on click
					(
						start_currenttime = input.Start_Date.toTime();
										start_currenttime = zoho.currenttime;
										time_sheet_data = insert into Time_Logs
										[
											Added_User=zoho.loginuser
											From_Time=start_currenttime
											Task=input.Additional_Job_Notes
											Description=input.Additional_Job_Notes
											Date_field=zoho.currentdate
											Status="Open"
											Track_as="Start & End"
											Log_Time_Id=input.ID
										];
										input.Status = "In Progress";
					)
					}
					actions 
					{
					update Add_Schedule[ID == input.ID]
					[
							Log_Status = "Checked In"
					]
					}
				}
			}
			Approve as "Approve"
			{
				type =  functions
				form = Time_Logs
				on start
				{
					actions 
					{
					on click
					(
						input.Status1 = "Approved";
					)
					}
				}
			}
			Rejected as "Rejected"
			{
				type =  functions
				form = Time_Logs
				on start
				{
					actions 
					{
					on click
					(
						input.Status1 = "Rejected";
					)
					}
				}
			}
			Send_Back_Review as "Send Back Review"
			{
				type =  functions
				form = Time_Logs
				on start
				{
					actions 
					{
					on click
					(
						input.Status1 = "Corrections";
					)
					}
				}
			}
			Mark_As_Complete as "Mark As Complete"
			{
				type =  functions
				form = Add_Task
				on start
				{
					actions 
					{
					on click
					(
						input.Status = "Completed";
					)
					}
				}
			}
			Mark_As_Complete1 as "Mark As Complete"
			{
				type =  functions
				form = Add_Task
				on start
				{
					actions 
					{
					on click
					(
						input.Status = "Completed";
					)
					}
				}
			}
			Redirect_Activities as "Redirect Activities"
			{
				type =  functions
				form = Add_Activities
				on start
				{
					actions 
					{
						thisapp.redirect_activity(Add_Activities);
					}
				}
			}
			CHECK_IN as "CHECK-IN"
			{
				type =  functions
				form = Add_Schedule
				on start
				{
					actions 
					{
					on click
					(
						start_currenttime = input.Start_Date.toTime();
										start_currenttime = zoho.currenttime;
										time_sheet_data = insert into Time_Logs
										[
											Added_User=zoho.loginuser
											From_Time=start_currenttime
											Task=input.Additional_Job_Notes
											Description=input.Additional_Job_Notes
											Date_field=zoho.currentdate
											Status="Open"
											Track_as="Start & End"
											Log_Time_Id=input.ID
											users=zoho.loginuser
										];
					)
					}
					actions 
					{
					update Add_Schedule[ID == input.ID]
					[
							Log_Status = "Checked In"
					]
					}
				}
			}
			CHECK_OUT as "CHECK-OUT"
			{
				type =  functions
				form = Add_Schedule
					status = inactive
				on start
				{
					actions 
					{
					on click
					(
						log_data = Time_Logs[Log_Time_Id == input.ID.toString()];
										close_currenttime = input.Closing_Date.toTime();
										close_currenttime = zoho.currenttime;
										log_data.End_Time1=close_currenttime.toString();
										hrs_cal = input.Start_Date.hoursBetween(input.Closing_Date);
										log_data.Hours1=hrs_cal;
										input.Status = "Completed";
					)
					}
				}
			}
			Log_Status_CheckIn as "Log Status CheckIn"
			{
				type =  functions
				form = Add_Schedule
				on start
				{
					actions 
					{
						thisapp.time_logs.checin_check_out(Add_Schedule);
					}
				}
			}
			LogCheckedOut as "LogCheckedOut"
			{
				type =  functions
				form = Add_Schedule
				on start
				{
					actions 
					{
						thisapp.time_logs.log_checkedOut(Add_Schedule);
					}
				}
			}
			Check_In as "Check-In"
			{
				type =  functions
				form = Add_Schedule
				on start
				{
					actions 
					{
						thisapp.time_logs.checin(Add_Schedule);
					}
				}
			}
			Checkout_My_Open_job as "Checkout - My Open job"
			{
				type =  functions
				form = Add_Schedule
				on start
				{
					actions 
					{
						thisapp.time_logs.checkedOut(Add_Schedule);
					}
				}
			}
			Completed_Job_My_Open_job as "Completed Job - My Open jobs"
			{
				type =  functions
				form = Add_Schedule
				on start
				{
					actions 
					{
					on click
					(
						openUrl("#Form:Associate_Completed_Job?Job_Id=" + input.ID,"popup window","height=540,width=500");
					)
					}
				}
			}
			Approve1 as "Approve"
			{
				type =  functions
				form = Apply_Leave
				on start
				{
				}
			}
			Approved_Leave as "Approved - Leave"
			{
				type =  functions
				form = Apply_Leave
				on start
				{
					actions 
					{
					on click
					(
						input.Status = "Approved";
					)
					}
				}
			}
			Update_status as "Update status"
			{
				type =  functions
				form = Add_Task
				on start
				{
					actions 
					{
					on click
					(
						input.Status = "Completed";
					)
					}
				}
			}
			InProgress as "InProgress"
			{
				type =  functions
				form = Add_Task
				on start
				{
					actions 
					{
					on click
					(
						input.Status = "In Progress";
					)
					}
				}
			}
			InProgress1 as "InProgress"
			{
				type =  functions
				form = Add_Task
				on start
				{
					actions 
					{
					on click
					(
						input.Status = "In Progress";
					)
					}
				}
			}
			Start_Job as "Start Job"
			{
				type =  functions
				form = Add_Schedule
				on start
				{
					actions 
					{
					on click
					(
						// start_currenttime = input.Start_Date.toTime();
										// start_currenttime = zoho.currenttime;
										// time_sheet_data = insert into Time_Logs
										// [
										// 	Added_User=zoho.loginuser
										// 	Start_Time=start_currenttime
										// 	Task=input.Additional_Job_Notes
										// 	Description=input.Additional_Job_Notes
										// 	Date_field=zoho.currentdate
										// 	Status="Open"
										// 	Track_as="Start & End"
										// 	Log_Time_Id=input.ID
										// ];
										// input.Status = "In Progress";
										// input.Log_Status = "Start Job";
					)
					}
				}
			}
			Complete_Job1 as "Complete Job"
			{
				type =  functions
				form = Add_Schedule
				on start
				{
					actions 
					{
					on click
					(
						log_data = Time_Logs[Log_Time_Id == input.ID.toString()];
										close_currenttime = input.Closing_Date.toTime();
										close_currenttime = zoho.currenttime;
										start_currenttime = input.Start_Date.toTime();
										start_currenttime = zoho.currenttime;
										log_data.End_Time1=close_currenttime.toString();
										log_data.From_Time=start_currenttime.toString();
										openUrl("#Form:Associate_Completed_Job?Job_Id=" + input.ID,"popup window","height=540,width=500");
					)
					}
				}
			}
			Check_In2 as "Check-In"
			{
				type =  functions
				form = Add_Activities
				on start
				{
					actions 
					{
					on click
					(
						info "Checked In";
					)
					}
				}
			}
			Check_Out1 as "Check-Out"
			{
				type =  functions
				form = Add_Activities
				on start
				{
					actions 
					{
					on click
					(
						info "Checked Out";
					)
					}
				}
			}
			Start_Job1 as "Start Job"
			{
				type =  functions
				form = Add_Schedule
				on start
				{
					actions 
					{
					on click
					(
						start_currenttime = input.Start_Date.toTime();
										start_currenttime = zoho.currenttime;
										time_sheet_data = insert into Time_Logs
										[
											Added_User=zoho.loginuser
											From_Time=start_currenttime
											Task=input.Additional_Job_Notes
											Description=input.Additional_Job_Notes
											Date_field=zoho.currentdate
											Status="Open"
											Track_as="Start & End"
											Log_Time_Id=input.ID
										];
										input.Status = "In Progress";
										input.Log_Status = "Start Job";
					)
					}
				}
			}
		}
	}
	share_settings
	{
			"Read"
			{
				name = "Read"
				type = Users_Permissions
				permissions = {Chat:true, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This profile will have read permission for all components\n"
			}
			"Write"
			{
				name = "Write"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This profile will have write permission for all components\n"
				ModulePermissions
				{
					Add_Task
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Open_Tasks={"View","Edit","Delete"}
							Open_Tasks1={"View","Edit","Delete"}
							All_Tasks={"View","Edit","Delete"}
						}
					}
					Add_Your_Organization
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Add_Your_Organization_Report={"View","Edit","Delete"}
						}
					}
					Education_Details
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Education_Details={"View","Edit","Delete"}
						}
					}
					Apply_Leave
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Leave_Approvals={"View","Edit","Delete"}
							Leave_Approvals1={"View","Edit","Delete"}
							All_Leaves1={"View","Edit","Delete"}
							Approved_Leaves={"View","Edit","Delete"}
							Employee_Time_Off={"View","Edit","Delete"}
						}
					}
					Product
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Products={"View","Edit","Delete"}
						}
					}
					Dependent_Details
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Dependent_Details={"View","Edit","Delete"}
						}
					}
					Add_Employee
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							My_Profile={"View","Edit","Delete"}
							All_Employees={"View","Edit","Delete"}
							Employee_Birthdays={"View","Edit","Delete"}
						}
					}
					Composite_Items
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Composite_Items={"View","Edit","Delete"}
						}
					}
					Add_Department
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Departments={"View","Edit","Delete"}
						}
					}
					Crew_History
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Crew_Histories={"View","Edit","Delete"}
						}
					}
					File_Upload
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Attachments={"View","Edit","Delete"}
						}
					}
					Add_Client
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Clients={"View","Edit","Delete"}
						}
					}
					Add_Event
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Open_Events={"View","Edit","Delete"}
							All_Events={"View","Edit","Delete"}
						}
					}
					Add_weekly_Logs
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Add_weekly_Logs_Report={"View","Edit","Delete"}
						}
					}
					Add_Event_Category
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Event_Categories={"View","Edit","Delete"}
						}
					}
					Associate_Composite_Items
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Associate_Composite_Items_Report={"View","Edit","Delete"}
						}
					}
					Add_Holiday
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Holidays={"View","Edit","Delete"}
							Bank_Holidays={"View","Edit","Delete"}
						}
					}
					Add_Crew
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Crews_History={"View","Edit","Delete"}
							All_Crews={"View","Edit","Delete"}
						}
					}
					Add_Activities
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Employee_Time_Off1={"View","Edit","Delete"}
							Calendar_View={"View","Edit","Delete"}
							Employee_Birthday={"View","Edit","Delete"}
							Bank_Holiday_s={"View","Edit","Delete"}
							All_Scheduled_Job={"View","Edit","Delete"}
							All_Event={"View","Edit","Delete"}
							All_Activities={"View","Edit","Delete"}
						}
					}
					Clock_Out
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Clock_Out_Report={"View","Edit","Delete"}
						}
					}
					Leave_Approvers
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Approvers={"View","Edit","Delete"}
						}
					}
					Clock_In
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Clock_In_Report={"View","Edit","Delete"}
						}
					}
					Time_Logs
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							TimeLog_Approvals={"View","Edit","Delete"}
							All_Time_Logs={"View","Edit","Delete"}
							List_Of_Approved={"View","Edit","Delete"}
							My_Logs={"View","Edit","Delete"}
							Send_Back_Review={"View","Edit","Delete"}
							Rejected_List={"View","Edit","Delete"}
						}
					}
					TimeLog_Approvers
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Timelog_Approvers={"View","Edit","Delete"}
						}
					}
					Available_Leaves
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Available_Leaves_Report={"View","Edit","Delete"}
						}
					}
					Technician_Details
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Technician_Details={"View","Edit","Delete"}
						}
					}
					Add_Schedule
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							My_Jobs={"View","Edit","Delete"}
							All_Jobs={"View","Edit","Delete"}
							Job_Stats={"View"}
							Job_Calander={"View","Edit","Delete"}
						}
					}
					Add_Designation
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Designations={"View","Edit","Delete"}
						}
					}
					Work_Experience
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Work_Experiences={"View","Edit","Delete"}
						}
					}
					Associate_Completed_Job
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Associate_Completed_Job_Report={"View","Edit","Delete"}
						}
					}
					Line_Items
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Line_Items={"View","Edit","Delete"}
						}
					}
					Add_Leave_Type
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Leave_Types={"View","Edit","Delete"}
						}
					}
					Leaves
					{
						enabled = tab
					}
					TimeLog
					{
						enabled = tab
					}
					Org_Dashboard
					{
						enabled = tab
					}
				}
			}
			"Crew Member"
			{
				name = "Crew Member"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "Crew Member access permissions\n"
				ModulePermissions
				{
					Add_Task
					{
						enabled= Create,Tab,read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Open_Tasks={"View"}
							Open_Tasks1={"View","Edit","Delete"}
							All_Tasks={"View"}
						}
					}
					Add_Your_Organization
					{
						allFieldsVisible= true 
					}
					Education_Details
					{
						enabled= Create,Tab,read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Education_Details={"View","Edit"}
						}
					}
					Apply_Leave
					{
						enabled= Create,Tab,read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							Leave_Approvals={"View","Edit"}
							Leave_Approvals1={"View","Edit"}
							Approved_Leaves={"View","Edit"}
						}
					}
					Product
					{
						allFieldsVisible= true 
					}
					Dependent_Details
					{
						enabled= Create,Tab,read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Dependent_Details={"View","Edit"}
						}
					}
					Add_Employee
					{
						enabled= Viewall,Modifyall,read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							My_Profile={"View","Edit"}
						}
					}
					Composite_Items
					{
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Composite_Items={"View"}
						}
					}
					Add_Department
					{
						allFieldsVisible= true 
					}
					Crew_History
					{
						allFieldsVisible= true 
					}
					File_Upload
					{
						enabled= Create,Tab,read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Attachments={"View","Edit"}
						}
					}
					Add_Client
					{
						allFieldsVisible= true 
					}
					Add_Event
					{
						enabled= Create,Tab,read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							Open_Events={"View","Edit"}
						}
					}
					Add_weekly_Logs
					{
						enabled= Create,Tab,read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							Add_weekly_Logs_Report={"View","Edit"}
						}
					}
					Add_Event_Category
					{
						enabled= Create,Tab,read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Event_Categories={"View","Edit"}
						}
					}
					Associate_Composite_Items
					{
						enabled= read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							Associate_Composite_Items_Report={"View","Edit"}
						}
					}
					Add_Holiday
					{
						enabled= read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Holidays={"View"}
						}
					}
					Add_Crew
					{
						enabled= Viewall,read_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Crews={"View"}
						}
					}
					Add_Activities
					{
						enabled= Viewall,Modifyall,read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							Calendar_View={"View","Edit"}
						}
					}
					Clock_Out
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Clock_Out_Report={"View"}
						}
					}
					Leave_Approvers
					{
						allFieldsVisible= true 
					}
					Clock_In
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Clock_In_Report={"View"}
						}
					}
					Time_Logs
					{
						enabled= Create,Viewall,Modifyall,Tab,read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							TimeLog_Approvals={"View","Edit"}
							List_Of_Approved={"View","Edit"}
							My_Logs={"View","Edit"}
							Send_Back_Review={"View","Edit"}
							Rejected_List={"View"}
						}
					}
					TimeLog_Approvers
					{
						allFieldsVisible= true 
					}
					Available_Leaves
					{
						allFieldsVisible= true 
					}
					Technician_Details
					{
						allFieldsVisible= true 
					}
					Add_Schedule
					{
						enabled= Create,Viewall,Modifyall,Export,Tab,read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							My_Jobs={"View","Edit"}
							All_Jobs={"View","Edit"}
						}
					}
					Add_Designation
					{
						allFieldsVisible= true 
					}
					Work_Experience
					{
						enabled= Create,Tab,read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Work_Experiences={"View","Edit"}
						}
					}
					Associate_Completed_Job
					{
						enabled= Create,Tab,read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							Associate_Completed_Job_Report={"View","Edit"}
						}
					}
					Line_Items
					{
						allFieldsVisible= true 
					}
					Add_Leave_Type
					{
						enabled= Create,Tab,read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Leave_Types={"View","Edit"}
						}
					}
					My_Dashboard
					{
						enabled = tab
					}
					Leaves
					{
						enabled = tab
					}
					TimeLog
					{
						enabled = tab
					}
				}
			}
			"Owner"
			{
				name = "Owner"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This profile will have write permission for all components\n"
				ModulePermissions
				{
					Add_Task
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Open_Tasks={"View","Edit","Delete"}
							Open_Tasks1={"View","Edit","Delete"}
							All_Tasks={"View","Edit","Delete"}
						}
					}
					Add_Your_Organization
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Add_Your_Organization_Report={"View","Edit","Delete"}
						}
					}
					Education_Details
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Education_Details={"View","Edit","Delete"}
						}
					}
					Apply_Leave
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Leave_Approvals={"View","Edit","Delete"}
							Leave_Approvals1={"View","Edit","Delete"}
							All_Leaves1={"View","Edit","Delete"}
							Approved_Leaves={"View","Edit","Delete"}
							Employee_Time_Off={"View","Edit","Delete"}
						}
					}
					Product
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Products={"View","Edit","Delete"}
						}
					}
					Dependent_Details
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Dependent_Details={"View","Edit","Delete"}
						}
					}
					Add_Employee
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							My_Profile={"View","Edit","Delete"}
							All_Employees={"View","Edit","Delete"}
							Employee_Birthdays={"View","Edit","Delete"}
						}
					}
					Composite_Items
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Composite_Items={"View","Edit","Delete"}
						}
					}
					Add_Department
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Departments={"View","Edit","Delete"}
						}
					}
					Crew_History
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Crew_Histories={"View","Edit","Delete"}
						}
					}
					File_Upload
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Attachments={"View","Edit","Delete"}
						}
					}
					Add_Client
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Clients={"View","Edit","Delete"}
						}
					}
					Add_Event
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Open_Events={"View","Edit","Delete"}
							All_Events={"View","Edit","Delete"}
						}
					}
					Add_weekly_Logs
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Add_weekly_Logs_Report={"View","Edit","Delete"}
						}
					}
					Add_Event_Category
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Event_Categories={"View","Edit","Delete"}
						}
					}
					Associate_Composite_Items
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Associate_Composite_Items_Report={"View","Edit","Delete"}
						}
					}
					Add_Holiday
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Holidays={"View","Edit","Delete"}
							Bank_Holidays={"View","Edit","Delete"}
						}
					}
					Add_Crew
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Crews_History={"View","Edit","Delete"}
							All_Crews={"View","Edit","Delete"}
						}
					}
					Add_Activities
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Employee_Time_Off1={"View","Edit","Delete"}
							Calendar_View={"View","Edit","Delete"}
							Employee_Birthday={"View","Edit","Delete"}
							Bank_Holiday_s={"View","Edit","Delete"}
							All_Scheduled_Job={"View","Edit","Delete"}
							All_Event={"View","Edit","Delete"}
							All_Activities={"View","Edit","Delete"}
						}
					}
					Clock_Out
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Clock_Out_Report={"View","Edit","Delete"}
						}
					}
					Leave_Approvers
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Approvers={"View","Edit","Delete"}
						}
					}
					Clock_In
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Clock_In_Report={"View","Edit","Delete"}
						}
					}
					Time_Logs
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							TimeLog_Approvals={"View","Edit","Delete"}
							All_Time_Logs={"View","Edit","Delete"}
							List_Of_Approved={"View","Edit","Delete"}
							My_Logs={"View","Edit","Delete"}
							Send_Back_Review={"View","Edit","Delete"}
							Rejected_List={"View","Edit","Delete"}
						}
					}
					TimeLog_Approvers
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Timelog_Approvers={"View","Edit","Delete"}
						}
					}
					Available_Leaves
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Available_Leaves_Report={"View","Edit","Delete"}
						}
					}
					Technician_Details
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Technician_Details={"View","Edit","Delete"}
						}
					}
					Add_Schedule
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							My_Jobs={"View","Edit","Delete"}
							All_Jobs={"View","Edit","Delete"}
							Job_Stats={"View","Edit","Delete"}
							Job_Calander={"View","Edit","Delete"}
						}
					}
					Add_Designation
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Designations={"View","Edit","Delete"}
						}
					}
					Work_Experience
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Work_Experiences={"View","Edit","Delete"}
						}
					}
					Associate_Completed_Job
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Associate_Completed_Job_Report={"View","Edit","Delete"}
						}
					}
					Line_Items
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Line_Items={"View","Edit","Delete"}
						}
					}
					Add_Leave_Type
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Leave_Types={"View","Edit","Delete"}
						}
					}
					Leaves
					{
						enabled = tab
					}
					TimeLog
					{
						enabled = tab
					}
					Org_Dashboard
					{
						enabled = tab
					}
				}
			}
			"Administrator"
			{
				name = "Administrator"
				type = Users_Permissions
				permissions = {Chat:true, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This profile will have all the permissions.\n"
			}
			"Crew Lead"
			{
				name = "Crew Lead"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "Crew Lead\n"
				ModulePermissions
				{
					Add_Task
					{
						enabled= Create,Tab,read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Open_Tasks={"View"}
							Open_Tasks1={"View","Edit","Delete"}
							All_Tasks={"View"}
						}
					}
					Add_Your_Organization
					{
						allFieldsVisible= true 
					}
					Education_Details
					{
						enabled= Create,Tab,read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Education_Details={"View","Edit"}
						}
					}
					Apply_Leave
					{
						enabled= Create,Tab,read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							Leave_Approvals={"View","Edit"}
							Leave_Approvals1={"View","Edit"}
							Approved_Leaves={"View","Edit"}
						}
					}
					Product
					{
						allFieldsVisible= true 
					}
					Dependent_Details
					{
						enabled= Create,Tab,read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Dependent_Details={"View","Edit"}
						}
					}
					Add_Employee
					{
						enabled= Viewall,Modifyall,read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							My_Profile={"View","Edit"}
						}
					}
					Composite_Items
					{
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Composite_Items={"View"}
						}
					}
					Add_Department
					{
						allFieldsVisible= true 
					}
					Crew_History
					{
						allFieldsVisible= true 
					}
					File_Upload
					{
						enabled= Create,Tab,read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Attachments={"View","Edit"}
						}
					}
					Add_Client
					{
						allFieldsVisible= true 
					}
					Add_Event
					{
						enabled= Create,Tab,read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							Open_Events={"View","Edit"}
						}
					}
					Add_weekly_Logs
					{
						enabled= Create,Tab,read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							Add_weekly_Logs_Report={"View","Edit"}
						}
					}
					Add_Event_Category
					{
						enabled= Create,Tab,read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Event_Categories={"View","Edit"}
						}
					}
					Associate_Composite_Items
					{
						enabled= read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							Associate_Composite_Items_Report={"View","Edit"}
						}
					}
					Add_Holiday
					{
						enabled= read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Holidays={"View"}
						}
					}
					Add_Crew
					{
						enabled= Viewall,read_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Crews={"View"}
						}
					}
					Add_Activities
					{
						enabled= Viewall,Modifyall,read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							Calendar_View={"View","Edit"}
						}
					}
					Clock_Out
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Clock_Out_Report={"View"}
						}
					}
					Leave_Approvers
					{
						allFieldsVisible= true 
					}
					Clock_In
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Clock_In_Report={"View"}
						}
					}
					Time_Logs
					{
						enabled= Create,Viewall,Modifyall,Tab,read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							TimeLog_Approvals={"View","Edit"}
							List_Of_Approved={"View","Edit"}
							My_Logs={"View","Edit"}
							Send_Back_Review={"View","Edit"}
							Rejected_List={"View"}
						}
					}
					TimeLog_Approvers
					{
						allFieldsVisible= true 
					}
					Available_Leaves
					{
						allFieldsVisible= true 
					}
					Technician_Details
					{
						allFieldsVisible= true 
					}
					Add_Schedule
					{
						enabled= Create,Viewall,Modifyall,Export,Tab,read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							My_Jobs={"View","Edit"}
							All_Jobs={"View","Edit"}
						}
					}
					Add_Designation
					{
						allFieldsVisible= true 
					}
					Work_Experience
					{
						enabled= Create,Tab,read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Work_Experiences={"View","Edit"}
						}
					}
					Associate_Completed_Job
					{
						enabled= Create,Tab,read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							Associate_Completed_Job_Report={"View","Edit"}
						}
					}
					Line_Items
					{
						allFieldsVisible= true 
					}
					Add_Leave_Type
					{
						enabled= Create,Tab,read_comm,write_comm 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Leave_Types={"View","Edit"}
						}
					}
					Home1
					{
						enabled = tab
					}
					Leaves
					{
						enabled = tab
					}
					TimeLog
					{
						enabled = tab
					}
				}
			}
			"Developer"
			{
				name = "Developer"
				type = Developer
				permissions = {Chat:false, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "Developer Profile\n"
			}
			"Super Intendant"
			{
				name = "Super Intendant"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This profile will have write permission for all components\n"
				ModulePermissions
				{
					Add_Task
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Open_Tasks={"View","Edit","Delete"}
							Open_Tasks1={"View","Edit","Delete"}
							All_Tasks={"View","Edit","Delete"}
						}
					}
					Add_Your_Organization
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Add_Your_Organization_Report={"View","Edit","Delete"}
						}
					}
					Education_Details
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Education_Details={"View","Edit","Delete"}
						}
					}
					Apply_Leave
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Leave_Approvals={"View","Edit","Delete"}
							Leave_Approvals1={"View","Edit","Delete"}
							All_Leaves1={"View","Edit","Delete"}
							Approved_Leaves={"View","Edit","Delete"}
							Employee_Time_Off={"View","Edit","Delete"}
						}
					}
					Product
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Products={"View","Edit","Delete"}
						}
					}
					Dependent_Details
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Dependent_Details={"View","Edit","Delete"}
						}
					}
					Add_Employee
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							My_Profile={"View","Edit","Delete"}
							All_Employees={"View","Edit","Delete"}
							Employee_Birthdays={"View","Edit","Delete"}
						}
					}
					Composite_Items
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Composite_Items={"View","Edit","Delete"}
						}
					}
					Add_Department
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Departments={"View","Edit","Delete"}
						}
					}
					Crew_History
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Crew_Histories={"View","Edit","Delete"}
						}
					}
					File_Upload
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Attachments={"View","Edit","Delete"}
						}
					}
					Add_Client
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Clients={"View","Edit","Delete"}
						}
					}
					Add_Event
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Open_Events={"View","Edit","Delete"}
							All_Events={"View","Edit","Delete"}
						}
					}
					Add_weekly_Logs
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Add_weekly_Logs_Report={"View","Edit","Delete"}
						}
					}
					Add_Event_Category
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Event_Categories={"View","Edit","Delete"}
						}
					}
					Associate_Composite_Items
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Associate_Composite_Items_Report={"View","Edit","Delete"}
						}
					}
					Add_Holiday
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Holidays={"View","Edit","Delete"}
							Bank_Holidays={"View","Edit","Delete"}
						}
					}
					Add_Crew
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Crews_History={"View","Edit","Delete"}
							All_Crews={"View","Edit","Delete"}
						}
					}
					Add_Activities
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Employee_Time_Off1={"View","Edit","Delete"}
							Calendar_View={"View","Edit","Delete"}
							Employee_Birthday={"View","Edit","Delete"}
							Bank_Holiday_s={"View","Edit","Delete"}
							All_Scheduled_Job={"View","Edit","Delete"}
							All_Event={"View","Edit","Delete"}
							All_Activities={"View","Edit","Delete"}
						}
					}
					Clock_Out
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Clock_Out_Report={"View","Edit","Delete"}
						}
					}
					Leave_Approvers
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Approvers={"View","Edit","Delete"}
						}
					}
					Clock_In
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Clock_In_Report={"View","Edit","Delete"}
						}
					}
					Time_Logs
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							TimeLog_Approvals={"View","Edit","Delete"}
							All_Time_Logs={"View","Edit","Delete"}
							List_Of_Approved={"View","Edit","Delete"}
							My_Logs={"View","Edit","Delete"}
							Send_Back_Review={"View","Edit","Delete"}
							Rejected_List={"View","Edit","Delete"}
						}
					}
					TimeLog_Approvers
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Timelog_Approvers={"View","Edit","Delete"}
						}
					}
					Available_Leaves
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Available_Leaves_Report={"View","Edit","Delete"}
						}
					}
					Technician_Details
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Technician_Details={"View","Edit","Delete"}
						}
					}
					Add_Schedule
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							My_Jobs={"View","Edit","Delete"}
							All_Jobs={"View","Edit","Delete"}
							Job_Stats={"View","Edit","Delete"}
							Job_Calander={"View","Edit","Delete"}
						}
					}
					Add_Designation
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Designations={"View","Edit","Delete"}
						}
					}
					Work_Experience
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Work_Experiences={"View","Edit","Delete"}
						}
					}
					Associate_Completed_Job
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Associate_Completed_Job_Report={"View","Edit","Delete"}
						}
					}
					Line_Items
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Line_Items={"View","Edit","Delete"}
						}
					}
					Add_Leave_Type
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Leave_Types={"View","Edit","Delete"}
						}
					}
					Home1
					{
						enabled = tab
					}
					Leaves
					{
						enabled = tab
					}
					TimeLog
					{
						enabled = tab
					}
				}
			}
			"Admin"
			{
				name = "Admin"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This profile will have write permission for all components\n"
				ModulePermissions
				{
					Add_Task
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Open_Tasks={"View","Edit","Delete"}
							Open_Tasks1={"View","Edit","Delete"}
							All_Tasks={"View","Edit","Delete"}
						}
					}
					Add_Your_Organization
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Add_Your_Organization_Report={"View","Edit","Delete"}
						}
					}
					Education_Details
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Education_Details={"View","Edit","Delete"}
						}
					}
					Apply_Leave
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Leave_Approvals={"View","Edit","Delete"}
							Leave_Approvals1={"View","Edit","Delete"}
							All_Leaves1={"View","Edit","Delete"}
							Approved_Leaves={"View","Edit","Delete"}
							Employee_Time_Off={"View","Edit","Delete"}
						}
					}
					Product
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Products={"View","Edit","Delete"}
						}
					}
					Dependent_Details
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Dependent_Details={"View","Edit","Delete"}
						}
					}
					Add_Employee
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							My_Profile={"View","Edit","Delete"}
							All_Employees={"View","Edit","Delete"}
							Employee_Birthdays={"View","Edit","Delete"}
						}
					}
					Composite_Items
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Composite_Items={"View","Edit","Delete"}
						}
					}
					Add_Department
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Departments={"View","Edit","Delete"}
						}
					}
					Crew_History
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Crew_Histories={"View","Edit","Delete"}
						}
					}
					File_Upload
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Attachments={"View","Edit","Delete"}
						}
					}
					Add_Client
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Clients={"View","Edit","Delete"}
						}
					}
					Add_Event
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Open_Events={"View","Edit","Delete"}
							All_Events={"View","Edit","Delete"}
						}
					}
					Add_weekly_Logs
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Add_weekly_Logs_Report={"View","Edit","Delete"}
						}
					}
					Add_Event_Category
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Event_Categories={"View","Edit","Delete"}
						}
					}
					Associate_Composite_Items
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Associate_Composite_Items_Report={"View","Edit","Delete"}
						}
					}
					Add_Holiday
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Holidays={"View","Edit","Delete"}
							Bank_Holidays={"View","Edit","Delete"}
						}
					}
					Add_Crew
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Crews_History={"View","Edit","Delete"}
							All_Crews={"View","Edit","Delete"}
						}
					}
					Add_Activities
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Employee_Time_Off1={"View","Edit","Delete"}
							Calendar_View={"View","Edit","Delete"}
							Employee_Birthday={"View","Edit","Delete"}
							Bank_Holiday_s={"View","Edit","Delete"}
							All_Scheduled_Job={"View","Edit","Delete"}
							All_Event={"View","Edit","Delete"}
							All_Activities={"View","Edit","Delete"}
						}
					}
					Clock_Out
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Clock_Out_Report={"View","Edit","Delete"}
						}
					}
					Leave_Approvers
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Approvers={"View","Edit","Delete"}
						}
					}
					Clock_In
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Clock_In_Report={"View","Edit","Delete"}
						}
					}
					Time_Logs
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							TimeLog_Approvals={"View","Edit","Delete"}
							All_Time_Logs={"View","Edit","Delete"}
							List_Of_Approved={"View","Edit","Delete"}
							My_Logs={"View","Edit","Delete"}
							Send_Back_Review={"View","Edit","Delete"}
							Rejected_List={"View","Edit","Delete"}
						}
					}
					TimeLog_Approvers
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Timelog_Approvers={"View","Edit","Delete"}
						}
					}
					Available_Leaves
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Available_Leaves_Report={"View","Edit","Delete"}
						}
					}
					Technician_Details
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Technician_Details={"View","Edit","Delete"}
						}
					}
					Add_Schedule
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							My_Jobs={"View","Edit","Delete"}
							All_Jobs={"View","Edit","Delete"}
							Job_Stats={"View","Edit","Delete"}
							Job_Calander={"View","Edit","Delete"}
						}
					}
					Add_Designation
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Designations={"View","Edit","Delete"}
						}
					}
					Work_Experience
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Work_Experiences={"View","Edit","Delete"}
						}
					}
					Job_Info
					{
						allFieldsVisible= true 
					}
					Associate_Completed_Job
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Associate_Completed_Job_Report={"View","Edit","Delete"}
						}
					}
					Line_Items
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Line_Items={"View","Edit","Delete"}
						}
					}
					Add_Leave_Type
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Leave_Types={"View","Edit","Delete"}
						}
					}
					Leaves
					{
						enabled = tab
					}
					TimeLog
					{
						enabled = tab
					}
					Org_Dashboard
					{
						enabled = tab
					}
				}
			}
			"Customer"
			{
				name = "Customer"
				type = Customer_Portal
				permissions = {Chat:true, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This is the default profile having only add and view permission.\n"
			}
			roles
			{
				"CEO"
				{
					description = "User belonging to this role can access data of all other users."
					"Owner"
					{
						description = ""
						"super Intendant"
						{
							description = ""
							"Crew Lead"
							{
								description = ""
								"Crew Member"
								{
									description = ""
								}
							}
						}
					}
				}
			}
	}

	customize
	{
		
		layout = "tab"
		color = "black"
		base theme = "professional"
		new theme = 9
		new theme color = 10
		icons = true
    	icon type = 3
    	icon name = "LE"
    	icon theme = "blue"
		icons style = outline
	}

	connections
	{
		crm
		(
			displayname = "crm"
			connector = zoho_oauth
			permissions = {"ZohoCRM.bulk.ALL","ZohoCRM.bulk.READ","ZohoCRM.coql.READ","ZohoCRM.crmapi.ALL","ZohoCRM.files.CREATE","ZohoCRM.functions.execute.CREATE","ZohoCRM.functions.execute.READ","ZohoCRM.modules.ALL","ZohoCRM.modules.attachments.ALL","ZohoCRM.modules.notes.ALL","ZohoCRM.modules.notes.CREATE","ZohoCRM.modules.notes.DELETE","ZohoCRM.modules.notes.READ","ZohoCRM.modules.notes.WRITE","ZohoCRM.notifications.ALL","ZohoCRM.notifications.CREATE","ZohoCRM.notifications.DELETE","ZohoCRM.notifications.UPDATE","ZohoCRM.notifications.WRITE","ZohoCRM.org.ALL","ZohoCRM.org.READ","ZohoCRM.send_mail.accounts.CREATE","ZohoCRM.send_mail.all.CREATE","ZohoCRM.send_mail.cases.CREATE","ZohoCRM.send_mail.contacts.CREATE","ZohoCRM.send_mail.custom.CREATE","ZohoCRM.send_mail.deals.CREATE","ZohoCRM.send_mail.invoices.CREATE","ZohoCRM.send_mail.leads.CREATE","ZohoCRM.send_mail.purchaseorders.CREATE","ZohoCRM.send_mail.quotes.CREATE","ZohoCRM.send_mail.salesorders.CREATE","ZohoCRM.settings.ALL","ZohoCRM.settings.currencies.CREATE","ZohoCRM.settings.currencies.READ","ZohoCRM.settings.currencies.UPDATE","ZohoCRM.settings.custom_views.ALL","ZohoCRM.settings.custom_views.READ","ZohoCRM.settings.fields.ALL","ZohoCRM.settings.fields.READ","ZohoCRM.settings.layouts.ALL","ZohoCRM.settings.layouts.READ","ZohoCRM.settings.modules.ALL","ZohoCRM.settings.modules.READ","ZohoCRM.settings.profiles.ALL","ZohoCRM.settings.profiles.READ","ZohoCRM.settings.READ","ZohoCRM.settings.related_lists.ALL","ZohoCRM.settings.related_lists.READ","ZohoCRM.settings.roles.ALL"}
		)
	}

	phone
	{
		section  Technician_Details
		{
			displayname= "Technician Details"
			icon = "users-2-contacts-44"
			form  Technician_Details
			{
				layout = auto
				icon = "users-2-contacts-44"
				hide = true
			}
			list All_Technician_Details
			{
				icon = "sport-cardio"
				hide = true
			}
		}
		section  Home1
		{
			displayname= "Home"
			icon = "business-board-28"
			page Time_Tracker1
			{
				icon = "users-2-a-time"
				hide = true
			}
			page Time_Tracker
			{
				icon = "education-flask"
				hide = true
			}
			page Time_Tracker_Widget
			{
				icon = "tech-2-p-system-update"
				hide = true
			}
			page Org_Dashboard
			{
				icon = "business-board-28"
			}
			page My_Dashboard
			{
				icon = "business-board-28"
			}
			page Home1
			{
				icon = "business-board-28"
			}
			page google_calander
			{
				icon = "design-2-android"
			}
		}
		section  Jobs1
		{
			displayname= "Jobs"
			icon = "education-award-55"
			pivotchart Crew_Job_Throughput
			{
				icon = "users-2-a-time"
				hide = true
			}
			form  Add_Schedule
			{
				layout = auto
				icon = "tech-2-p-add"
				hide = true
			}
			calendar Job_Calander
			{
				icon = "users-2-a-time"
				hide = true
			}
			list My_Jobs
			{
				icon = "users-2-a-time"
				quickview
				(
					layout
					(
		 				type = Custom
		 				selectedlayout = "Custom Layout 1"
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    	 				)
									record
									(
										"Start Job"
										"Complete Job"
										Edit   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										"Start Job"
										"Complete Job"
										Edit   	   
										View Record   	   
    								)
									on left swipe
									(
										"Start Job"
										"Complete Job"
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
				"Start Job"
				"Complete Job"
								Deal_Name as "Deal Name"
								Client_Name as "Client Name"
								Phone_Number as "Phone"
								Email
								Address
								Start_Date as "Start Date "
								Closing_Date as "Closing Date "
								Installation_Crew as "Installation Crew "
								Floor_Sq_Ft as "Floor Sq Ft "
								Additional_Job_Notes as "Additional Job Notes"
								Total as "Invoice Total"
								Discount
								Balance_Due as "Balance Due"
							)
						)
						datablock4
						(
			 				layout type = -2
		     				title = "Crew"
							fields
							(
								Installation_Crew as "Installation Crew "
								Superintendent
								Crew_Lead1 as "Crew Lead"
								Crew_Lead as "Crew Members"
							)
						)
						datablock5
						(
			 				layout type = -2
		     				title = "Line Items"
		     				related field = Line_Items
							fields
							(
								Location as "Location "
								Product
								Composite_Items as "Composite Items"
								Sqft
								Total_Value as "Product Cost"
							)
						)
						datablock6
						(
			 				layout type = -2
		     				title = "Associate Composite Items"
		     				related field = Associated_Items
							fields
							(
								Location as "Location "
								Composite_Items_Name as "Composite Items Name"
								Product_Name as "Product Name"
								Sqft as "Quantity Per Sqft"
								Amount as "Total Quantity Required"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
			 				"Start Job"
			 				"Complete Job"
    		 				Edit 
    	 				)
    				)
				)
			}
			pivotchart Job_Stats
			{
				icon = "users-2-a-time"
				hide = true
			}
			list All_Jobs
			{
				icon = "travel-world"
				quickview
				(
					layout
					(
		 				type = Custom
		 				selectedlayout = "Custom Layout 1"
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    	 				)
									record
									(
										"Start Job"
										"Complete Job"
										Edit   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										"Start Job"
										"Complete Job"
										Edit   	   
										View Record   	   
    								)
									on left swipe
									(
										"Start Job"
										"Complete Job"
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
				"Start Job"
				"Complete Job"
								Deal_Name as "Deal Name"
								Client_Name as "Client Name"
								Phone_Number as "Phone"
								Email
								Address
								Start_Date as "Start Date "
								Closing_Date as "Closing Date "
								Installation_Crew as "Installation Crew "
								Floor_Sq_Ft as "Floor Sq Ft "
								Additional_Job_Notes as "Additional Job Notes"
								Total as "Invoice Total"
								Discount
								Balance_Due as "Balance Due"
							)
						)
						datablock4
						(
			 				layout type = -2
		     				title = "Crew"
							fields
							(
								Installation_Crew as "Installation Crew "
								Superintendent
								Crew_Lead1 as "Crew Lead"
								Crew_Lead as "Crew Members"
							)
						)
						datablock5
						(
			 				layout type = -2
		     				title = "Line Items"
		     				related field = Line_Items
							fields
							(
								Location as "Location "
								Product
								Composite_Items as "Composite Items"
								Sqft
								Total_Value as "Product Cost"
							)
						)
						datablock6
						(
			 				layout type = -2
		     				title = "Associate Composite Items"
		     				related field = Associated_Items
							fields
							(
								Location as "Location "
								Composite_Items_Name as "Composite Items Name"
								Product_Name as "Product Name"
								Sqft as "Quantity Per Sqft"
								Amount as "Total Quantity Required"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
			 				"Start Job"
			 				"Complete Job"
    		 				Edit 
    	 				)
    				)
				)
			}
		}
		section  Organization
		{
			icon = "users-2-a-add"
			calendar Employee_Birthdays
			{
				icon = "business-handshake"
				hide = true
			}
			calendar Calendar_View
			{
				icon = "ui-1-calendar-60"
				hide = true
			}
			form  Add_Your_Organization
			{
				layout = auto
				icon = "users-2-a-add"
				hide = true
			}
			list Add_Your_Organization_Report
			{
				icon = "users-2-a-add"
				hide = true
			}
			calendar Employee_Time_Off
			{
				icon = "ui-1-calendar-60"
				hide = true
			}
			calendar Bank_Holidays
			{
				icon = "ui-1-calendar-60"
				hide = true
			}
		}
		section  Time_Logs
		{
			displayname= "Time Logs"
			icon = "files-folder-time"
			pivotchart Weekly_Hours_by_Employee
			{
				icon = "business-progress"
				hide = true
			}
			form  Time_Logs
			{
				layout = auto
				icon = "users-2-a-time"
				hide = true
			}
			list All_Time_Logs
			{
				icon = "travel-world"
				hide = true
			}
			form  Add_weekly_Logs
			{
				layout = auto
				icon = "media-1-polaroid-add"
				hide = true
			}
			list TimeLog_Approvals
			{
				icon = "ui-2-hourglass"
				hide = true
				quickview
				(
					layout
					(
		 				type = Custom
		 				selectedlayout = "Custom Layout 1"
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
									record
									(
										"Approve"
										"Send Back For Review"
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										"Approve"
										"Send Back For Review"
										View Record   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
							fields
							(
								Task
								Description
								Date_field as "Date"
								Track_as as "Track as"
								Hours1 as "Hours"
								Status
								Add_weekly_Logs as "Add weekly Logs"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
			 				"Approve"
			 				"Send Back For Review"
    		 				Edit 
    	 				)
    				)
				)
			}
			list List_Of_Approved
			{
				icon = "shopping-receipt-list-43"
				hide = true
				quickview
				(
					layout
					(
		 				type = Custom
		 				selectedlayout = "Custom Layout 1"
					)

					menu
    				(
    	 				header
    	 				(
    	 				)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										View Record   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
							fields
							(
								Date_field as "Date"
								Job_Name as "Job Name"
								Task
								Description
								Hours1 as "Hours"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
			list Rejected_List
			{
				icon = "shopping-receipt-list-43"
				hide = true
			}
			list Send_Back_Review
			{
				icon = "objects-skull"
				hide = true
				quickview
				(
					layout
					(
		 				type = Custom
		 				selectedlayout = "Custom Layout 1"
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										View Record   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
							fields
							(
								Date_field as "Date"
								Job_Name as "Job Name"
								Task
								Description
								Hours1 as "Hours"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    	 				)
    				)
				)
			}
			list My_Logs
			{
				icon = "tech-print-round"
				hide = true
				quickview
				(
					layout
					(
		 				type = Custom
		 				selectedlayout = "Custom Layout 1"
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										View Record   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
							fields
							(
								Date_field as "Date"
								Job_Name as "Job Name"
								Task
								Description
								Hours1 as "Hours"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
			page TimeLog
			{
				icon = "ui-2-time-countdown"
			}
			page Leaves
			{
				icon = "arrows-4-format-right"
			}
		}
		section  Crews
		{
			icon = "users-multiple-11"
			form  Add_Crew
			{
				layout = auto
				icon = "tech-2-p-add"
				hide = true
			}
			list Crews_History
			{
				icon = "tech-2-p-time"
				hide = true
			}
			spreadsheet All_Crews
			{
				icon = "users-multiple-11"
			}
		}
		section  Employees
		{
			icon = "users-single-04"
			form  Add_Employee
			{
				layout = auto
				icon = "users-2-a-add"
				hide = true
			}
			custom All_Employees
			{
				icon = "business-hierarchy-55"
				quickview
				(
					layout
					(
		 				type = 6
						datablock1
						(
			 				display type = auto
			 				layout type = 19
							fields
							(
								Profile_Picture as "Profile Picture"
								First_Name as "First Name"
								Phone_Number as "Phone"
								Email_address as "Email address"
								Employee_ID as "Employee ID"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										View Record   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
							fields
							(
								Employee_ID as "Employee ID"
								Nick_Name as "Nick Name"
								First_Name as "First Name"
								Last_Name as "Last Name"
								Phone_Number as "Phone"
								Email_address as "Email address"
								Role
								Employment_Type as "Employment Type"
								Source_of_Hire as "Source of Hire"
								Date_of_Joining as "Date of Joining"
								Current_Experience as "Department"
								Date_of_Birth as "Date of Birth"
								Age
								Gender
								Ask_me_about_Expertise as "Ask me about/Expertise"
								Marital_Status as "Marital Status"
								About_Me as "About Me"
								NI_number as "NI Number"
								SSN
								Work_Phone_Number as "Work Phone Number"
								Extension
								Personal_Email_Address as "Personal Email Address"
								Seating_Location as "Seating Location"
								Tags
								Present_Address as "Present Address"
								Permanent_Address as "Permanent Address"
								Same_as_Present_Address as "Same as Present Address"
								Date_of_Exit as "Date of Exit"
								Department
								Location
								Designation
								Profile_Picture as "Profile Picture"
								Employee_Status1 as "Employee Status"
								FSM_Access as "FSM Access"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
			custom My_Profile
			{
				icon = "shopping-mobile-touch"
			}
		}
		section  Clients
		{
			icon = "users-multiple-19"
			form  Add_Client
			{
				layout = auto
				icon = "users-2-b-add"
				hide = true
			}
			list All_Clients
			{
				icon = "users-2-multiple"
				hide = true
			}
		}
		section  Departments
		{
			icon = "business-hierarchy-53"
			form  Add_Department
			{
				layout = auto
				icon = "tech-2-p-add"
				hide = true
			}
			list All_Departments
			{
				icon = "business-hierarchy-53"
				hide = true
			}
		}
		section  Designations
		{
			icon = "location-pins"
			form  Add_Designation
			{
				layout = auto
				icon = "tech-2-l-add"
				hide = true
			}
			list All_Designations
			{
				icon = "travel-world"
				hide = true
			}
		}
		section  Work_Experiences
		{
			displayname= "Work Experiences"
			icon = "tech-laptop"
			form  Work_Experience
			{
				layout = auto
				icon = "tech-laptop"
				hide = true
			}
			list All_Work_Experiences
			{
				icon = "tech-laptop"
				hide = true
			}
		}
		section  Education_Details
		{
			displayname= "Education Details"
			icon = "education-pencil-47"
			form  Education_Details
			{
				layout = auto
				icon = "education-pencil-47"
				hide = true
			}
			list All_Education_Details
			{
				icon = "travel-world"
				hide = true
			}
		}
		section  Dependent_Details
		{
			displayname= "Dependent Details"
			icon = "users-2-contacts-44"
			form  Dependent_Details
			{
				layout = auto
				icon = "users-2-contacts-44"
				hide = true
			}
			list All_Dependent_Details
			{
				icon = "travel-world"
				hide = true
			}
		}
		section  Holidays
		{
			icon = "holidays-glove"
			form  Add_Holiday
			{
				layout = auto
				icon = "tech-2-p-add"
				hide = true
			}
			list All_Holidays
			{
				icon = "design-window-paragraph"
				hide = true
			}
		}
		section  Leave_Tracker
		{
			displayname= "Leave Tracker"
			icon = "objects-leaf-38"
			form  Apply_Leave
			{
				layout = auto
				icon = "media-1-action-74"
				hide = true
			}
			list Leave_Approvals1
			{
				icon = "design-window-paragraph"
				hide = true
				quickview
				(
					layout
					(
		 				type = Custom
		 				selectedlayout = "Custom Layout 1"
					)

					menu
    				(
    	 				header
    	 				(
    	 				)
									record
									(
										"Approve"
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										"Approve"
										View Record   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
							fields
							(
				"Approve"
								Employee1 as "Employee"
								Total_Day_s as "Total Day(s)"
								Leave_Type as "Leave Type"
								Type
								Form_Date as "Form Date"
								To_Date as "To Date"
								Reason_for_leave as "Leave Description"
								Date_field as "Date submitted"
								Status
								Leave_Taken_By as "Leave Taken Sofar"
								Employee_Email as "Employee Email"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
			 				"Approve"
    	 				)
    				)
				)
			}
			list Approved_Leaves
			{
				icon = "media-1-action-74"
				hide = true
				quickview
				(
					layout
					(
		 				type = 9
						datablock1
						(
			 				display type = auto
			 				layout type = 31
							fields
							(
								Leave_Type as "Leave Type"
								Form_Date as "Form Date"
								To_Date as "To Date"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										View Record   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
							fields
							(
								Type
								Date_field as "Date"
								Leave_Type as "Leave Type"
								Form_Date as "Form Date"
								To_Date as "To Date"
								Reason_for_leave as "Leave Description"
								Status
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    	 				)
    				)
				)
			}
			list All_Leaves1
			{
				icon = "travel-world"
				hide = true
			}
			list Leave_Approvals
			{
				icon = "media-1-action-74"
				hide = true
				quickview
				(
					layout
					(
		 				type = 9
						datablock1
						(
			 				display type = auto
			 				layout type = 31
							fields
							(
								Leave_Type as "Leave Type"
								Form_Date as "Form Date"
								To_Date as "To Date"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										View Record   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
							fields
							(
								Employee1 as "Employee"
								Type
								Date_field as "Date Requested"
								Form_Date as "Form Date"
								To_Date as "To Date"
								Leave_Type as "Leave Type"
								Reason_for_leave as "Leave Description"
								Status
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
		}
		section  Leave_Types
		{
			displayname= "Leave Types"
			icon = "design-2-cursor-not-allowed"
			form  Add_Leave_Type
			{
				layout = auto
				icon = "users-2-a-add"
				hide = true
			}
			list All_Leave_Types
			{
				icon = "ui-2-menu-bold"
				hide = true
			}
		}
		section  Attachments
		{
			icon = "ui-1-attach-87"
			form  File_Upload
			{
				layout = auto
				icon = "ui-1-attach-87"
				hide = true
			}
			list All_Attachments
			{
				icon = "travel-world"
				hide = true
			}
		}
		section  ToDo_List
		{
			displayname= "ToDo List"
			icon = "business-notes"
			form  Add_Task
			{
				layout = auto
				icon = "tech-2-p-add"
				hide = true
			}
		}
		section  Events
		{
			icon = "ui-1-calendar-grid-58"
			list All_Events
			{
				icon = "ui-1-calendar-grid-58"
				hide = true
			}
			list Open_Events
			{
				icon = "shopping-box-3d-67"
				hide = true
				quickview
				(
					layout
					(
		 				type = Custom
		 				selectedlayout = "Custom Layout 1"
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										View Record   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
							fields
							(
								Event_Image as "Event Image"
								Event_Category as "Event Category"
								Event_Name as "Event Name"
								Venue
								Start_Date as "Start Date"
								Start_Time as "Start Time"
								End_Date as "End Date"
								End_Time as "End Time"
								Discription as "Event Description"
								Event_Status1 as "Event Status"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
			form  Add_Event
			{
				layout = auto
				icon = "location-pin-add"
				hide = true
			}
		}
		section  Event_Categories
		{
			displayname= "Event Categories"
			icon = "ui-1-calendar-grid-58"
			form  Add_Event_Category
			{
				layout = auto
				icon = "users-2-a-add"
				hide = true
			}
			list All_Event_Categories
			{
				icon = "travel-world"
				hide = true
			}
		}
		section  Available_Leaves
		{
			displayname= "Available Leaves"
			icon = "tech-ram"
			form  Available_Leaves
			{
				layout = auto
				icon = "tech-ram"
				hide = true
			}
			list Available_Leaves_Report
			{
				icon = "business-laptop-71"
				hide = true
			}
		}
		section  Activities
		{
			icon = "health-pulse"
			form  Add_Activities
			{
				layout = auto
				icon = "users-2-a-add"
				hide = true
			}
			list All_Activities
			{
				icon = "travel-world"
				hide = true
			}
			summary All_Event
			{
				icon = "travel-world"
				hide = true
			}
			summary All_Scheduled_Job
			{
				icon = "media-1-button-next"
				hide = true
			}
			summary Employee_Time_Off1
			{
				icon = "users-2-a-time"
				hide = true
			}
			summary Bank_Holiday_s
			{
				icon = "business-bank"
				hide = true
			}
			list Employee_Birthday
			{
				icon = "business-business-contact-89"
				hide = true
			}
		}
		section  Associate_Composite_Items
		{
			displayname= "Associate Composite Items"
			icon = "design-2-selection"
			form  Associate_Composite_Items
			{
				layout = auto
				icon = "design-2-selection"
				hide = true
			}
			list Associate_Composite_Items_Report
			{
				icon = "design-2-group"
				hide = true
			}
		}
		section  Products
		{
			icon = "shopping-gift"
			form  Product
			{
				layout = auto
				icon = "tech-2-pci-card"
				hide = true
			}
			list All_Products
			{
				icon = "travel-world"
				hide = true
			}
		}
		section  Composite_Items
		{
			displayname= "Composite Items"
			icon = "design-2-selection"
			form  Composite_Items
			{
				layout = auto
				icon = "design-2-selection"
				hide = true
			}
			list All_Composite_Items
			{
				icon = "design-2-group"
				hide = true
			}
		}
		section  Line_Items
		{
			displayname= "Line Items"
			icon = "shopping-cart-simple"
			form  Line_Items
			{
				layout = auto
				icon = "shopping-cart-simple"
				hide = true
			}
			list All_Line_Items
			{
				icon = "travel-world"
				hide = true
			}
		}
		section  Add_weekly_Logs
		{
			displayname= "Add weekly Logs"
			icon = "media-1-polaroid-add"
			list Add_weekly_Logs_Report
			{
				icon = "business-laptop-71"
				hide = true
			}
		}
		section  Add_Task
		{
			displayname= "Add Task"
			icon = "tech-2-p-add"
			list All_Tasks
			{
				icon = "travel-world"
				hide = true
			}
			list All_Open_Tasks
			{
				icon = "travel-world"
				hide = true
				quickview
				(
					layout
					(
		 				type = Custom
		 				selectedlayout = "Custom Layout 1"
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
									record
									(
										"InProgress"
										"Mark As Complete"
										Edit   	   
										Duplicate   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										View Record   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
							fields
							(
				"InProgress"
				"Mark As Complete"
								Task_Owner as "Task Owner"
								Task_Name as "Task Name"
								Due_Date1 as "Start Date"
								End_Date as "End Date"
								Description
								Priority
								Status
								Assign_to as "Assigned To"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
			 				"InProgress"
			 				"Mark As Complete"
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
			list Open_Tasks1
			{
				icon = "sport-cardio"
				hide = true
			}
		}
		section  Associate_Completed_Job
		{
			displayname= "Associate Completed Job"
			icon = "users-2-a-time"
			form  Associate_Completed_Job
			{
				layout = auto
				icon = "users-2-a-time"
				hide = true
			}
			list Associate_Completed_Job_Report
			{
				icon = "users-2-a-time"
				hide = true
			}
		}
		section  Clock_In
		{
			displayname= "Clock-In"
			icon = "tech-desktop"
			form  Clock_In
			{
				layout = auto
				icon = "ui-1-bold-add"
				hide = true
			}
			list Clock_In_Report
			{
				icon = "business-laptop-71"
				hide = true
			}
		}
		section  Clock_Out
		{
			displayname= "Clock-Out"
			icon = "tech-desktop"
			form  Clock_Out
			{
				layout = auto
				icon = "ui-1-bold-add"
				hide = true
			}
			list Clock_Out_Report
			{
				icon = "business-laptop-71"
				hide = true
			}
		}
		section  Approvers
		{
			icon = "tech-desktop"
			form  Leave_Approvers
			{
				layout = auto
				icon = "travel-hut"
				hide = true
			}
			list All_Approvers
			{
				icon = "travel-world"
				hide = true
			}
		}
		section  Timelog_Approvers
		{
			displayname= "Timelog Approvers"
			icon = "tech-desktop"
			form  TimeLog_Approvers
			{
				layout = auto
				icon = "ui-1-bold-add"
				hide = true
			}
			list All_Timelog_Approvers
			{
				icon = "travel-world"
				hide = true
			}
		}
		section  Crew_Histories
		{
			displayname= "Crew Histories"
			icon = "tech-2-l-search"
			form  Crew_History
			{
				layout = auto
				icon = "travel-octopus"
				hide = true
			}
			list Crew_Histories
			{
				icon = "travel-world"
				hide = true
			}
		}
		section  Leave_Application
		{
			displayname= "Leave Application"
			pivotchart Leave_Count_By_Employee
			{
				icon = "sport-cardio"
				hide = true
			}
		}
		section  Add_Task1
		{
			displayname= "Add Task"
			calendar Task
			{
				icon = "design-todo"
				hide = true
			}
		}
		section  Job_Infos
		{
			displayname= "Job Infos"
			form  Job_Info
			{
				layout = auto
				icon = "users-2-a-time"
				hide = true
			}
			list All_Job_Infos
			{
				icon = "education-award-55"
				hide = true
			}
		}
		customize
		{
			colour = turquoise
        	layout = onecolumn
		 	icons style = outline
		}
	}
	
	reports configuration
	{
	
		Version = 1251000235808615
		Key     = "4Sf0RNXtD2uMw11QJQHkN9YVkVaKWTNEkhOFGd4M4rNamGRKq6WWxUz6qEr3MAXPBQvSdPHWPjjXVthkOu9JJSBmaPUWfVtyABDW"
	}
}